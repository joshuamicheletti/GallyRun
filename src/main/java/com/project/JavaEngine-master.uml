<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_-_0uAN9kEeyaYIzP8fvkgQ" name="JavaEngine_master">
    <eAnnotations xmi:id="__LpjgN9kEeyaYIzP8fvkgQ" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="__Lt08N9kEeyaYIzP8fvkgQ" source="codegen">
        <details xmi:id="__Lt08d9kEeyaYIzP8fvkgQ" key="codegenDirectory" value="/JavaEngine-master/src/main/java"/>
        <details xmi:id="_BojDwN9lEeyaYIzP8fvkgQ" key="AssociatedSourceCode" value="/JavaEngine-master/src/main/java/com/project/entities/Boss.java;2255715200/1;/JavaEngine-master/src/main/java/com/project/entities/Coin.java;3627456381/1;/JavaEngine-master/src/main/java/com/project/entities/Collectible.java;3736072175/1;/JavaEngine-master/src/main/java/com/project/entities/DoubleJump.java;3582528124/1;/JavaEngine-master/src/main/java/com/project/entities/Enemy.java;4038786430/1;/JavaEngine-master/src/main/java/com/project/entities/Entity.java;3750154456/1;/JavaEngine-master/src/main/java/com/project/entities/Hitbox.java;320517397/1;/JavaEngine-master/src/main/java/com/project/entities/IEntity.java;1501441660/1;/JavaEngine-master/src/main/java/com/project/entities/IPhysicsBody.java;282078180/1;/JavaEngine-master/src/main/java/com/project/entities/PhysicsBody.java;2318660756/1;/JavaEngine-master/src/main/java/com/project/entities/Player.java;700642689/1;/JavaEngine-master/src/main/java/com/project/entities/Portal.java;2567184089/1;/JavaEngine-master/src/main/java/com/project/game/Controller.java;2835834508/1;/JavaEngine-master/src/main/java/com/project/game/Game.java;205153036/1;/JavaEngine-master/src/main/java/com/project/main/Main.java;2753882520/1;/JavaEngine-master/src/main/java/com/project/rendering/Camera.java;3355882257/1;/JavaEngine-master/src/main/java/com/project/rendering/Engine.java;1972382368/1;/JavaEngine-master/src/main/java/com/project/rendering/IEngine.java;4083071805/1;/JavaEngine-master/src/main/java/com/project/sound/Mixer.java;3179269208/1;/JavaEngine-master/src/main/java/com/project/rendering/Shader.java;2061818140/1;/JavaEngine-master/src/main/java/com/project/rendering/Structure.java;3591841811/1;/JavaEngine-master/src/main/java/com/project/rendering/Texture.java;848410567/1;/JavaEngine-master/src/main/java/com/project/rendering/Timer.java;4187998858/1;/JavaEngine-master/src/main/java/com/project/rendering/UI.java;4051503671/1;/JavaEngine-master/src/main/java/com/project/rendering/Model.java;3258665733/1;/JavaEngine-master/src/main/java/com/project/sound/Sound.java;3808652064/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_A4b1cN9lEeyaYIzP8fvkgQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_A4b1cd9lEeyaYIzP8fvkgQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_A4b1ct9lEeyaYIzP8fvkgQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_A4b1c99lEeyaYIzP8fvkgQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_A4ccgN9lEeyaYIzP8fvkgQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_A4ccgd9lEeyaYIzP8fvkgQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_A4ccgt9lEeyaYIzP8fvkgQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_A4ccg99lEeyaYIzP8fvkgQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_A5ryoN9lEeyaYIzP8fvkgQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_Az-zQN9lEeyaYIzP8fvkgQ" name="com">
      <packagedElement xmi:type="uml:Package" xmi:id="_Az_aUN9lEeyaYIzP8fvkgQ" name="project">
        <packagedElement xmi:type="uml:Package" xmi:id="_A0E54N9lEeyaYIzP8fvkgQ" name="sound">
          <packagedElement xmi:type="uml:Class" xmi:id="_A9THUN9lEeyaYIzP8fvkgQ" name="Mixer">
            <ownedAttribute xmi:id="_BPBwgN9lEeyaYIzP8fvkgQ" name="songs" visibility="package" type="_A-kSoN9lEeyaYIzP8fvkgQ" isOrdered="true" association="_BRywoN9lEeyaYIzP8fvkgQ">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BPBwgd9lEeyaYIzP8fvkgQ" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BPCXkd9lEeyaYIzP8fvkgQ" name="playingSong" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQkBkN9lEeyaYIzP8fvkgQ" name="Mixer" specification="_A9UVcN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQkBkd9lEeyaYIzP8fvkgQ" type="_A9THUN9lEeyaYIzP8fvkgQ" direction="return"/>
              <language>java</language>
              <body>this.songs = new ArrayList&lt;Sound>();&#xD;
		this.playingSong = 0;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQkBkt9lEeyaYIzP8fvkgQ" name="uploadSong" specification="_A9U8gN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQkBk99lEeyaYIzP8fvkgQ" name="filepath">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BQkBlN9lEeyaYIzP8fvkgQ" name="loop">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BQkBld9lEeyaYIzP8fvkgQ" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>Sound sound = new Sound(filepath, loop);&#xD;
		this.songs.add(sound);&#xD;
		return(this.songs.size() - 1);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQkooN9lEeyaYIzP8fvkgQ" name="playSong" specification="_A9WKoN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQkood9lEeyaYIzP8fvkgQ" name="index">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>for (int i = 0; i &lt; this.songs.size(); i++) {&#xD;
			if (i == index) {&#xD;
				this.songs.get(i).play();&#xD;
			} else {&#xD;
				this.songs.get(i).stop();&#xD;
			}	&#xD;
		}&#xD;
		&#xD;
		this.playingSong = index;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQkoot9lEeyaYIzP8fvkgQ" name="playingSong" specification="_A9WxsN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQkoo99lEeyaYIzP8fvkgQ" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>return(this.playingSong);&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_A9UVcN9lEeyaYIzP8fvkgQ" name="Mixer" method="_BQkBkN9lEeyaYIzP8fvkgQ">
              <eAnnotations xmi:id="_A9UVcd9lEeyaYIzP8fvkgQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_A9UVct9lEeyaYIzP8fvkgQ" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_A9UVc99lEeyaYIzP8fvkgQ" type="_A9THUN9lEeyaYIzP8fvkgQ" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_A9U8gN9lEeyaYIzP8fvkgQ" name="uploadSong" method="_BQkBkt9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A9VjkN9lEeyaYIzP8fvkgQ" name="filepath">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_A9Vjkd9lEeyaYIzP8fvkgQ" name="loop">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_A9Vjkt9lEeyaYIzP8fvkgQ" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A9WKoN9lEeyaYIzP8fvkgQ" name="playSong" method="_BQkooN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A9WKod9lEeyaYIzP8fvkgQ" name="index">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A9WxsN9lEeyaYIzP8fvkgQ" name="playingSong" method="_BQkoot9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A9Wxsd9lEeyaYIzP8fvkgQ" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_A-kSoN9lEeyaYIzP8fvkgQ" name="Sound">
            <ownedAttribute xmi:id="_BPzzoN9lEeyaYIzP8fvkgQ" name="bufferID" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BP0asd9lEeyaYIzP8fvkgQ" name="sourceID" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BP1Bwd9lEeyaYIzP8fvkgQ" name="filepath" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BP2P4d9lEeyaYIzP8fvkgQ" name="isPlaying" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQ28gt9lEeyaYIzP8fvkgQ" name="Sound" specification="_A-lgwN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQ28g99lEeyaYIzP8fvkgQ" name="filepath">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BQ28hN9lEeyaYIzP8fvkgQ" name="loops">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BQ28hd9lEeyaYIzP8fvkgQ" type="_A-kSoN9lEeyaYIzP8fvkgQ" direction="return"/>
              <language>java</language>
              <body>this.filepath = filepath;&#xD;
		this.isPlaying = false;&#xD;
		&#xD;
		// Allocate space to store the return info from stb&#xD;
		&#xD;
		stackPush();&#xD;
		IntBuffer channelsBuffer = stackMallocInt(1);&#xD;
		stackPush();&#xD;
		IntBuffer sampleRateBuffer = stackMallocInt(1);&#xD;
		&#xD;
		ShortBuffer rawAudioBuffer = stb_vorbis_decode_filename(this.filepath, channelsBuffer, sampleRateBuffer);&#xD;
		&#xD;
		if (rawAudioBuffer == null) {&#xD;
			System.out.println(&quot;Could not load sound: &quot; + filepath);&#xD;
			stackPop();&#xD;
			stackPop();&#xD;
			return;&#xD;
		}&#xD;
		&#xD;
		int channels = channelsBuffer.get();&#xD;
		int sampleRate = sampleRateBuffer.get();&#xD;
		&#xD;
		stackPop();&#xD;
		stackPop();&#xD;
		&#xD;
		int format = -1;&#xD;
		&#xD;
		if (channels == 1) {&#xD;
			format = AL_FORMAT_MONO16;&#xD;
		} else if (channels == 2) {&#xD;
			format = AL_FORMAT_STEREO16;&#xD;
		}&#xD;
		&#xD;
		if (alcGetString(0, ALC_DEFAULT_DEVICE_SPECIFIER) != null) {&#xD;
			// sound data&#xD;
			this.bufferID = alGenBuffers();&#xD;
			alBufferData(this.bufferID, format, rawAudioBuffer, sampleRate);&#xD;
			&#xD;
			this.sourceID = alGenSources();&#xD;
			&#xD;
			alSourcei(this.sourceID, AL_BUFFER, this.bufferID);&#xD;
			alSourcei(this.sourceID, AL_LOOPING, loops ? 1 : 0);&#xD;
			alSourcei(this.sourceID, AL_POSITION, 0);&#xD;
			alSourcef(this.sourceID, AL_GAIN, 0.3f); // volume&#xD;
		}&#xD;
//		free(rawAudioBuffer);&#xD;
		&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQ3jkN9lEeyaYIzP8fvkgQ" name="delete" specification="_A-pLIN9lEeyaYIzP8fvkgQ">
              <language>java</language>
              <body>alDeleteSources(this.sourceID);&#xD;
		alDeleteBuffers(this.bufferID);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQ3jkd9lEeyaYIzP8fvkgQ" name="play" specification="_A-pLId9lEeyaYIzP8fvkgQ">
              <language>java</language>
              <body>if (alcGetString(0, ALC_DEFAULT_DEVICE_SPECIFIER) != null) {&#xD;
			int state = alGetSourcei(this.sourceID, AL_SOURCE_STATE);&#xD;
			&#xD;
			if (state == AL_STOPPED) {&#xD;
				this.isPlaying = false;&#xD;
				alSourcei(this.sourceID, AL_POSITION, 0);&#xD;
			}&#xD;
			&#xD;
			if (!this.isPlaying) {&#xD;
				alSourcePlay(this.sourceID);&#xD;
				this.isPlaying = true;&#xD;
			}&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQ3jkt9lEeyaYIzP8fvkgQ" name="playRaw" specification="_A-pyMN9lEeyaYIzP8fvkgQ">
              <language>java</language>
              <body>if (alcGetString(0, ALC_DEFAULT_DEVICE_SPECIFIER) != null) {&#xD;
			alSourcei(this.sourceID, AL_POSITION, 0);&#xD;
			alSourcePlay(this.sourceID);&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQ3jk99lEeyaYIzP8fvkgQ" name="stop" specification="_A-pyMd9lEeyaYIzP8fvkgQ">
              <language>java</language>
              <body>if (alcGetString(0, ALC_DEFAULT_DEVICE_SPECIFIER) != null) {&#xD;
			if (this.isPlaying) {&#xD;
				alSourceStop(this.sourceID);&#xD;
				this.isPlaying = false;&#xD;
			}&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQ3jlN9lEeyaYIzP8fvkgQ" name="isPlaying" specification="_A-qZQN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQ3jld9lEeyaYIzP8fvkgQ" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>if (alcGetString(0, ALC_DEFAULT_DEVICE_SPECIFIER) != null) {&#xD;
			int state = alGetSourcei(this.sourceID, AL_SOURCE_STATE);&#xD;
			if (state == AL_STOPPED) {&#xD;
				this.isPlaying = false;&#xD;
			}&#xD;
		}&#xD;
		return(this.isPlaying);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQ4KoN9lEeyaYIzP8fvkgQ" name="setVolume" specification="_A-rAUN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQ4Kod9lEeyaYIzP8fvkgQ" name="volume">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <language>java</language>
              <body>if (alcGetString(0, ALC_DEFAULT_DEVICE_SPECIFIER) != null) {&#xD;
			alSourcef(this.sourceID, AL_GAIN, volume); // volume&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_A-lgwN9lEeyaYIzP8fvkgQ" name="Sound" method="_BQ28gt9lEeyaYIzP8fvkgQ">
              <eAnnotations xmi:id="_A-okEt9lEeyaYIzP8fvkgQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_A-okE99lEeyaYIzP8fvkgQ" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_A-okEN9lEeyaYIzP8fvkgQ" name="filepath">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_A-okEd9lEeyaYIzP8fvkgQ" name="loops">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_A-okFN9lEeyaYIzP8fvkgQ" type="_A-kSoN9lEeyaYIzP8fvkgQ" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_A-pLIN9lEeyaYIzP8fvkgQ" name="delete" method="_BQ3jkN9lEeyaYIzP8fvkgQ"/>
            <ownedOperation xmi:id="_A-pLId9lEeyaYIzP8fvkgQ" name="play" method="_BQ3jkd9lEeyaYIzP8fvkgQ"/>
            <ownedOperation xmi:id="_A-pyMN9lEeyaYIzP8fvkgQ" name="playRaw" method="_BQ3jkt9lEeyaYIzP8fvkgQ"/>
            <ownedOperation xmi:id="_A-pyMd9lEeyaYIzP8fvkgQ" name="stop" method="_BQ3jk99lEeyaYIzP8fvkgQ"/>
            <ownedOperation xmi:id="_A-qZQN9lEeyaYIzP8fvkgQ" name="isPlaying" method="_BQ3jlN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A-qZQd9lEeyaYIzP8fvkgQ" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A-rAUN9lEeyaYIzP8fvkgQ" name="setVolume" method="_BQ4KoN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A-rAUd9lEeyaYIzP8fvkgQ" name="volume">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_BRywoN9lEeyaYIzP8fvkgQ" name="" memberEnd="_BRywod9lEeyaYIzP8fvkgQ _BPBwgN9lEeyaYIzP8fvkgQ">
            <ownedEnd xmi:id="_BRywod9lEeyaYIzP8fvkgQ" name="" type="_A9THUN9lEeyaYIzP8fvkgQ" association="_BRywoN9lEeyaYIzP8fvkgQ"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_A0P5AN9lEeyaYIzP8fvkgQ" name="entities">
          <packagedElement xmi:type="uml:Class" xmi:id="_A4VHwN9lEeyaYIzP8fvkgQ" name="Boss">
            <generalization xmi:id="_BKz-4N9lEeyaYIzP8fvkgQ" general="_A6Lh4N9lEeyaYIzP8fvkgQ"/>
            <ownedAttribute xmi:id="_BOBD4N9lEeyaYIzP8fvkgQ" name="health" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BOCSAN9lEeyaYIzP8fvkgQ" name="entityBuffer" visibility="private" type="_A6aLYN9lEeyaYIzP8fvkgQ" isOrdered="true" association="_BRiR8N9lEeyaYIzP8fvkgQ">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BOCSAd9lEeyaYIzP8fvkgQ" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BOC5Ed9lEeyaYIzP8fvkgQ" name="damaged" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BODgId9lEeyaYIzP8fvkgQ" name="damagedTimer" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BOEHMd9lEeyaYIzP8fvkgQ" name="triggered" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BOEuQN9lEeyaYIzP8fvkgQ" name="mixer" visibility="private" type="_A9THUN9lEeyaYIzP8fvkgQ" association="_BRjgEN9lEeyaYIzP8fvkgQ"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BP-ywN9lEeyaYIzP8fvkgQ" name="Boss" specification="_BM4bcN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BP-ywd9lEeyaYIzP8fvkgQ" name="player" type="_A7tL4N9lEeyaYIzP8fvkgQ"/>
              <ownedParameter xmi:id="_BP-ywt9lEeyaYIzP8fvkgQ" name="entityBuffer" type="_BKvtcN9lEeyaYIzP8fvkgQ"/>
              <ownedParameter xmi:id="_BP-yw99lEeyaYIzP8fvkgQ" name="mixer" type="_A9THUN9lEeyaYIzP8fvkgQ"/>
              <ownedParameter xmi:id="_BP-yxN9lEeyaYIzP8fvkgQ" type="_A4VHwN9lEeyaYIzP8fvkgQ" direction="return"/>
              <language>java</language>
              <body>super(player);&#xD;
		&#xD;
		this.mixer = mixer;&#xD;
		this.entityBuffer = entityBuffer;&#xD;
		this.health = 3;&#xD;
		this.damaged = false;&#xD;
		this.damagedTimer = System.nanoTime() / 1000000000L;&#xD;
		this.behaviour = 1;&#xD;
		this.triggered = false;&#xD;
		this.damage = 50;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQESUN9lEeyaYIzP8fvkgQ" name="hit" specification="_A5zHYN9lEeyaYIzP8fvkgQ">
              <language>java</language>
              <body>if (!this.damaged) {&#xD;
			this.health--;&#xD;
			this.model.setOpacity(0.7f);&#xD;
			this.damagedTimer = System.nanoTime() / (double)1000000000L;&#xD;
			this.damaged = true;&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQE5YN9lEeyaYIzP8fvkgQ" name="isTriggered" specification="_A52KsN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQE5Yd9lEeyaYIzP8fvkgQ" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>return(this.triggered);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQE5Yt9lEeyaYIzP8fvkgQ" name="control" specification="_A54m8N9lEeyaYIzP8fvkgQ">
              <language>java</language>
              <body>if (this.health &lt;= 0) {&#xD;
			for (int i = 0; i &lt; this.entityBuffer.size(); i++) {&#xD;
				if (this.entityBuffer.get(i) == this) {&#xD;
					this.entityBuffer.remove(i);&#xD;
				}&#xD;
			}&#xD;
			for (int i = 0; i &lt; 28; i++) {&#xD;
				Coin coin = new Coin();&#xD;
				coin.setGravity(1);&#xD;
				coin.setPosition(this.model.getX(), this.model.getY());&#xD;
				coin.applyForcePolar(1200, 3.14f / 2f + ((float)Math.random() - 0.5f) * (3.14f / 2f));&#xD;
				this.entityBuffer.add(coin);&#xD;
			}&#xD;
			&#xD;
			Portal portal = new Portal();&#xD;
			portal.setPosition(this.model.getX(), this.model.getY() + 40);&#xD;
			this.entityBuffer.add(0, portal);&#xD;
			&#xD;
			this.mixer.playSong(1);&#xD;
			&#xD;
			return;&#xD;
			&#xD;
		} else if (this.health == 2) {&#xD;
			this.speed = 30;&#xD;
			this.behaviour = 0;&#xD;
		} else if (this.health == 1) {&#xD;
			this.speed = 50;&#xD;
			this.behaviour = 0;&#xD;
		}&#xD;
		&#xD;
		if (this.damaged) {&#xD;
			double currentTime = System.nanoTime() / (double)1000000000L;&#xD;
			&#xD;
			double delta = currentTime - damagedTimer;&#xD;
			&#xD;
			if (delta >= 2) {&#xD;
				this.damaged = false;&#xD;
				this.model.setOpacity(1);&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		float distanceToPlayer = 0;&#xD;
		&#xD;
		if (!this.triggered) {&#xD;
			distanceToPlayer = (float)Math.sqrt(Math.pow(this.player.model.getX() - this.model.getX(), 2) + Math.pow(this.player.model.getY() - this.model.getY(), 2));&#xD;
			&#xD;
			if (distanceToPlayer &lt;= 500) {&#xD;
				this.mixer.playSong(2);&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		if (distanceToPlayer &lt;= 500 || this.triggered) {&#xD;
			this.triggered = true;&#xD;
			&#xD;
			if (behaviour == 0) {&#xD;
				if (this.movingRight) {&#xD;
					this.applyForce(this.speed, 0f);&#xD;
				} else {&#xD;
					this.applyForce(-this.speed, 0f);&#xD;
				}&#xD;
			} else if (behaviour == 1) {&#xD;
				if (this.model.getX() &lt; this.player.model.getX()) {&#xD;
					this.applyForce(this.speed, 0f);&#xD;
				} else {&#xD;
					this.applyForce(-this.speed, 0f);&#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_A5zHYN9lEeyaYIzP8fvkgQ" name="hit" method="_BQESUN9lEeyaYIzP8fvkgQ"/>
            <ownedOperation xmi:id="_A52KsN9lEeyaYIzP8fvkgQ" name="isTriggered" method="_BQE5YN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A52xwN9lEeyaYIzP8fvkgQ" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A54m8N9lEeyaYIzP8fvkgQ" name="control" method="_BQE5Yt9lEeyaYIzP8fvkgQ"/>
            <ownedOperation xmi:id="_BM4bcN9lEeyaYIzP8fvkgQ" name="Boss" method="_BP-ywN9lEeyaYIzP8fvkgQ">
              <eAnnotations xmi:id="_BM4bdN9lEeyaYIzP8fvkgQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_BM4bdd9lEeyaYIzP8fvkgQ" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_BM4bcd9lEeyaYIzP8fvkgQ" name="player" type="_A7tL4N9lEeyaYIzP8fvkgQ"/>
              <ownedParameter xmi:id="_BM4bct9lEeyaYIzP8fvkgQ" name="entityBuffer" type="_BKvtcN9lEeyaYIzP8fvkgQ"/>
              <ownedParameter xmi:id="_BM4bc99lEeyaYIzP8fvkgQ" name="mixer" type="_A9THUN9lEeyaYIzP8fvkgQ"/>
              <ownedParameter xmi:id="_BM4bdt9lEeyaYIzP8fvkgQ" type="_A4VHwN9lEeyaYIzP8fvkgQ" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_A59fcN9lEeyaYIzP8fvkgQ" name="Coin">
            <generalization xmi:id="_BK3CMN9lEeyaYIzP8fvkgQ" general="_A6C_AN9lEeyaYIzP8fvkgQ"/>
            <ownedAttribute xmi:id="_BOFVUN9lEeyaYIzP8fvkgQ" name="sfx" visibility="private" type="_A-kSoN9lEeyaYIzP8fvkgQ" association="_BRjgE99lEeyaYIzP8fvkgQ"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQFgcN9lEeyaYIzP8fvkgQ" name="Coin" specification="_A5_UoN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQFgcd9lEeyaYIzP8fvkgQ" type="_A59fcN9lEeyaYIzP8fvkgQ" direction="return"/>
              <language>java</language>
              <body>this.loadAnimationAndAdapt(&quot;./assets/textures/coin2.png&quot;, 8, 1);&#xD;
		this.model.setAnimationSpeed(10f);&#xD;
		this.sfx = new Sound(&quot;./assets/sounds/coin.ogg&quot;, false);&#xD;
		this.sfx.setVolume(0.05f);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQFgct9lEeyaYIzP8fvkgQ" name="applyEffect" specification="_BK2bIN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQFgc99lEeyaYIzP8fvkgQ" name="player" type="_A7tL4N9lEeyaYIzP8fvkgQ"/>
              <language>java</language>
              <body>player.addCoin();&#xD;
		this.sfx.play();&#xD;
		this.setToRemove();&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_A5_UoN9lEeyaYIzP8fvkgQ" name="Coin" method="_BQFgcN9lEeyaYIzP8fvkgQ">
              <eAnnotations xmi:id="_A5_Uod9lEeyaYIzP8fvkgQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_A5_7sN9lEeyaYIzP8fvkgQ" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_A5_7sd9lEeyaYIzP8fvkgQ" type="_A59fcN9lEeyaYIzP8fvkgQ" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_BK2bIN9lEeyaYIzP8fvkgQ" name="applyEffect" method="_BQFgct9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BK2bId9lEeyaYIzP8fvkgQ" name="player" type="_A7tL4N9lEeyaYIzP8fvkgQ"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_A6C_AN9lEeyaYIzP8fvkgQ" name="Collectible" isAbstract="true">
            <generalization xmi:id="_BK4QUN9lEeyaYIzP8fvkgQ" general="_A6aLYN9lEeyaYIzP8fvkgQ"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQGHgN9lEeyaYIzP8fvkgQ" name="Collectible" specification="_A6ENIN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQGHgd9lEeyaYIzP8fvkgQ" type="_A6C_AN9lEeyaYIzP8fvkgQ" direction="return">
                <name xsi:nil="true"/>
              </ownedParameter>
              <language>java</language>
              <body>this.setScale(0.25f);&#xD;
		this.setGravity(0);&#xD;
		this.model.setAnimationSpeed(10f);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQGHgt9lEeyaYIzP8fvkgQ" name="applyEffect" specification="_BK3pQN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQGHg99lEeyaYIzP8fvkgQ" name="player" type="_A7tL4N9lEeyaYIzP8fvkgQ"/>
              <language>java</language>
              <body>System.out.println(&quot;Apply an effect to the player&quot;);&#xD;
		this.setToRemove();&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_A6ENIN9lEeyaYIzP8fvkgQ" name="Collectible" method="_BQGHgN9lEeyaYIzP8fvkgQ">
              <eAnnotations xmi:id="_A6E0MN9lEeyaYIzP8fvkgQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_A6E0Md9lEeyaYIzP8fvkgQ" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_A6E0Mt9lEeyaYIzP8fvkgQ" type="_A6C_AN9lEeyaYIzP8fvkgQ" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_BK3pQN9lEeyaYIzP8fvkgQ" name="applyEffect" method="_BQGHgt9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BK3pQd9lEeyaYIzP8fvkgQ" name="player" type="_A7tL4N9lEeyaYIzP8fvkgQ"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_A6GpYN9lEeyaYIzP8fvkgQ" name="DoubleJump">
            <generalization xmi:id="_BK5ecN9lEeyaYIzP8fvkgQ" general="_A6C_AN9lEeyaYIzP8fvkgQ"/>
            <ownedAttribute xmi:id="_BOF8Yd9lEeyaYIzP8fvkgQ" name="sfx" visibility="package" type="_A-kSoN9lEeyaYIzP8fvkgQ" association="_BRkHId9lEeyaYIzP8fvkgQ"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQGukN9lEeyaYIzP8fvkgQ" name="DoubleJump" specification="_A6JFoN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQGukd9lEeyaYIzP8fvkgQ" type="_A6GpYN9lEeyaYIzP8fvkgQ" direction="return"/>
              <language>java</language>
              <body>this.loadAnimationAndAdapt(&quot;./assets/textures/doubleJump.png&quot;, 6, 1);&#xD;
		this.setScale(0.3f);&#xD;
		&#xD;
		this.sfx = new Sound(&quot;./assets/sounds/powerup.ogg&quot;, false);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQGukt9lEeyaYIzP8fvkgQ" name="applyEffect" specification="_BK43YN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQGuk99lEeyaYIzP8fvkgQ" name="player" type="_A7tL4N9lEeyaYIzP8fvkgQ"/>
              <language>java</language>
              <body>player.enableDoubleJump();&#xD;
		this.sfx.play();&#xD;
		this.setToRemove();&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_A6JFoN9lEeyaYIzP8fvkgQ" name="DoubleJump" method="_BQGukN9lEeyaYIzP8fvkgQ">
              <eAnnotations xmi:id="_A6JFod9lEeyaYIzP8fvkgQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_A6JFot9lEeyaYIzP8fvkgQ" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_A6JFo99lEeyaYIzP8fvkgQ" type="_A6GpYN9lEeyaYIzP8fvkgQ" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_BK43YN9lEeyaYIzP8fvkgQ" name="applyEffect" method="_BQGukt9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BK43Yd9lEeyaYIzP8fvkgQ" name="player" type="_A7tL4N9lEeyaYIzP8fvkgQ"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_A6Lh4N9lEeyaYIzP8fvkgQ" name="Enemy">
            <generalization xmi:id="_BK76sN9lEeyaYIzP8fvkgQ" general="_A6aLYN9lEeyaYIzP8fvkgQ"/>
            <ownedAttribute xmi:id="_BOGjcd9lEeyaYIzP8fvkgQ" name="movingRight" visibility="protected">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BOHKgd9lEeyaYIzP8fvkgQ" name="player" visibility="protected" type="_A7tL4N9lEeyaYIzP8fvkgQ" association="_BRkuMd9lEeyaYIzP8fvkgQ"/>
            <ownedAttribute xmi:id="_BOHxkd9lEeyaYIzP8fvkgQ" name="damage" visibility="protected">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BOIYod9lEeyaYIzP8fvkgQ" name="behaviour" visibility="protected">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BOI_sN9lEeyaYIzP8fvkgQ" name="speed" visibility="protected">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQHVoN9lEeyaYIzP8fvkgQ" name="Enemy" specification="_BK6skN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQHVod9lEeyaYIzP8fvkgQ" name="player" type="_A7tL4N9lEeyaYIzP8fvkgQ"/>
              <ownedParameter xmi:id="_BQHVot9lEeyaYIzP8fvkgQ" type="_A6Lh4N9lEeyaYIzP8fvkgQ" direction="return"/>
              <language>java</language>
              <body>this.movingRight = false;&#xD;
		this.player = player;&#xD;
		this.damage = 25;&#xD;
		this.behaviour = 0;&#xD;
		this.speed = 10f;&#xD;
		this.applyForce(0.1f, 0.1f);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQHVo99lEeyaYIzP8fvkgQ" name="control" specification="_A6N-IN9lEeyaYIzP8fvkgQ">
              <language>java</language>
              <body>if (behaviour == 0) {&#xD;
			if (this.movingRight) {&#xD;
				this.applyForce(this.speed, 0f);&#xD;
			} else {&#xD;
				this.applyForce(-this.speed, 0f);&#xD;
			}&#xD;
		} else if (behaviour == 1) {&#xD;
			if (this.model.getX() &lt; this.player.model.getX()) {&#xD;
				this.applyForce(this.speed, 0f);&#xD;
			} else {&#xD;
				this.applyForce(-this.speed, 0f);&#xD;
			}&#xD;
		}	&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQH8sN9lEeyaYIzP8fvkgQ" name="updateAnimation" specification="_A6OlMN9lEeyaYIzP8fvkgQ">
              <language>java</language>
              <body>if (this.airborne &amp;&amp; this.model.getFrames().size() >= 2) {			&#xD;
			float threshold = 5f;&#xD;
			&#xD;
			if (super.velocityY > threshold &amp;&amp; this.model.getFrames().size() >= 3) {&#xD;
				this.model.setCurrentAnimation(2);&#xD;
			} else if (this.velocityY >= -threshold &amp;&amp; this.velocityY &lt;= threshold  &amp;&amp; this.model.getFrames().size() >= 4) {&#xD;
				this.model.setCurrentAnimation(3);&#xD;
			} else if (this.velocityY &lt; -threshold  &amp;&amp; this.model.getFrames().size() >= 5) {&#xD;
				this.model.setCurrentAnimation(4);&#xD;
			}&#xD;
		} else {			&#xD;
			float threshold = 0.02f;&#xD;
	&#xD;
			if (this.velocityX &lt; threshold &amp;&amp; this.velocityX > -threshold) {&#xD;
				this.model.setCurrentAnimation(0);&#xD;
			} else if (this.model.getFrames().size() >= 1) {&#xD;
				this.model.setAnimationSpeed(3f);&#xD;
				this.model.setCurrentAnimation(1);&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		this.model.updateAnimation(this.facingRight);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQH8sd9lEeyaYIzP8fvkgQ" name="getDamage" specification="_A6PMQN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQH8st9lEeyaYIzP8fvkgQ" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>return(this.damage);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQH8s99lEeyaYIzP8fvkgQ" name="setBehaviour" specification="_A6PzUN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQH8tN9lEeyaYIzP8fvkgQ" name="behaviour">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>this.behaviour = behaviour;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQIjwN9lEeyaYIzP8fvkgQ" name="setSpeed" specification="_A6QaYN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQIjwd9lEeyaYIzP8fvkgQ" name="speed">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <language>java</language>
              <body>this.speed = speed;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQIjwt9lEeyaYIzP8fvkgQ" name="hitRight" specification="_BM8s4N9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQIjw99lEeyaYIzP8fvkgQ" name="target" type="_BM7ewd9lEeyaYIzP8fvkgQ"/>
              <language>java</language>
              <body>if (this.movingRight == false) {&#xD;
			this.movingRight = true;&#xD;
		}&#xD;
		&#xD;
		if (target instanceof Player) {&#xD;
			Player player = (Player)target;&#xD;
			player.takeDamage(this.damage);&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQIjxN9lEeyaYIzP8fvkgQ" name="hitLeft" specification="_BM9T8N9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQIjxd9lEeyaYIzP8fvkgQ" name="target" type="_BM7ewd9lEeyaYIzP8fvkgQ"/>
              <language>java</language>
              <body>if (this.movingRight == true) {&#xD;
			this.movingRight = false;&#xD;
		}&#xD;
		&#xD;
		if (target instanceof Player) {&#xD;
			Player player = (Player)target;&#xD;
			player.takeDamage(this.damage);&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQJK0N9lEeyaYIzP8fvkgQ" name="hit" specification="_A6RBcN9lEeyaYIzP8fvkgQ">
              <language>java</language>
              <body>this.setToRemove();&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_A6N-IN9lEeyaYIzP8fvkgQ" name="control" method="_BQHVo99lEeyaYIzP8fvkgQ"/>
            <ownedOperation xmi:id="_A6OlMN9lEeyaYIzP8fvkgQ" name="updateAnimation" method="_BQH8sN9lEeyaYIzP8fvkgQ"/>
            <ownedOperation xmi:id="_A6PMQN9lEeyaYIzP8fvkgQ" name="getDamage" method="_BQH8sd9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A6PMQd9lEeyaYIzP8fvkgQ" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A6PzUN9lEeyaYIzP8fvkgQ" name="setBehaviour" method="_BQH8s99lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A6PzUd9lEeyaYIzP8fvkgQ" name="behaviour">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A6QaYN9lEeyaYIzP8fvkgQ" name="setSpeed" method="_BQIjwN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A6QaYd9lEeyaYIzP8fvkgQ" name="speed">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A6RBcN9lEeyaYIzP8fvkgQ" name="hit" method="_BQJK0N9lEeyaYIzP8fvkgQ"/>
            <ownedOperation xmi:id="_BK6skN9lEeyaYIzP8fvkgQ" name="Enemy" method="_BQHVoN9lEeyaYIzP8fvkgQ">
              <eAnnotations xmi:id="_BK6skt9lEeyaYIzP8fvkgQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_BK6sk99lEeyaYIzP8fvkgQ" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_BK6skd9lEeyaYIzP8fvkgQ" name="player" type="_A7tL4N9lEeyaYIzP8fvkgQ"/>
              <ownedParameter xmi:id="_BK6slN9lEeyaYIzP8fvkgQ" type="_A6Lh4N9lEeyaYIzP8fvkgQ" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_BM8s4N9lEeyaYIzP8fvkgQ" name="hitRight" method="_BQIjwt9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BM8s4d9lEeyaYIzP8fvkgQ" name="target" type="_BM7ewd9lEeyaYIzP8fvkgQ"/>
            </ownedOperation>
            <ownedOperation xmi:id="_BM9T8N9lEeyaYIzP8fvkgQ" name="hitLeft" method="_BQIjxN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BM9T8d9lEeyaYIzP8fvkgQ" name="target" type="_BM7ewd9lEeyaYIzP8fvkgQ"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_A6aLYN9lEeyaYIzP8fvkgQ" name="Entity">
            <generalization xmi:id="_BLBaQN9lEeyaYIzP8fvkgQ" general="_A7RHAN9lEeyaYIzP8fvkgQ"/>
            <ownedAttribute xmi:id="_BOKN0N9lEeyaYIzP8fvkgQ" name="model" type="_A-EjYN9lEeyaYIzP8fvkgQ" association="_BRlVQd9lEeyaYIzP8fvkgQ"/>
            <ownedAttribute xmi:id="_BOK04N9lEeyaYIzP8fvkgQ" name="name" visibility="protected">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BOK04t9lEeyaYIzP8fvkgQ" name="ableToSuperJump" visibility="protected">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BOLb8d9lEeyaYIzP8fvkgQ" name="toRemove" visibility="protected">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedAttribute>
            <interfaceRealization xmi:id="_BLAMIN9lEeyaYIzP8fvkgQ" client="_A6aLYN9lEeyaYIzP8fvkgQ" supplier="_A6zM8N9lEeyaYIzP8fvkgQ" contract="_A6zM8N9lEeyaYIzP8fvkgQ"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQJx4N9lEeyaYIzP8fvkgQ" name="Entity" specification="_A6ec0N9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQJx4d9lEeyaYIzP8fvkgQ" type="_A6aLYN9lEeyaYIzP8fvkgQ" direction="return">
                <name xsi:nil="true"/>
              </ownedParameter>
              <language>java</language>
              <body>super();&#xD;
		// initialize the model object for the sprite&#xD;
		this.model = new Model();&#xD;
		&#xD;
		// set the state flags&#xD;
		this.airborne = true;&#xD;
		this.ableToSuperJump = false;&#xD;
		this.toRemove = false;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQKY8N9lEeyaYIzP8fvkgQ" name="setName" specification="_A6fq8N9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQKY8d9lEeyaYIzP8fvkgQ" name="name">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>this.name = name;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQKY8t9lEeyaYIzP8fvkgQ" name="getName" specification="_A6gSAd9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQKY899lEeyaYIzP8fvkgQ" direction="return">
                <name xsi:nil="true"/>
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return(this.name);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQKY9N9lEeyaYIzP8fvkgQ" name="hitTop" specification="_BM-iEN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQKY9d9lEeyaYIzP8fvkgQ" name="target" type="_BM7ewd9lEeyaYIzP8fvkgQ"/>
              <language>java</language>
              <body>if (target instanceof Hitbox) {		// if the object that the entity collided with from the top is a hitbox&#xD;
			Hitbox h = (Hitbox)target;&#xD;
			&#xD;
			if (h.getSpecialJump()) {       // if the hitbox enables a super jump, mark it as available&#xD;
				this.ableToSuperJump = true;&#xD;
			}&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQKY9t9lEeyaYIzP8fvkgQ" name="collision" specification="_BM_JIN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQKY999lEeyaYIzP8fvkgQ" name="target" type="_BM7ewd9lEeyaYIzP8fvkgQ"/>
              <ownedParameter xmi:id="_BQKY-N9lEeyaYIzP8fvkgQ" direction="return">
                <name xsi:nil="true"/>
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>if (target instanceof Collectible) { // if the object that the entity collided with is a collectible, don't fix the entity's&#xD;
			return(false);					 // position (goes through the collectible)&#xD;
		}&#xD;
		return(true);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQLAAN9lEeyaYIzP8fvkgQ" name="checkCollision" specification="_BNAXQN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQLAAd9lEeyaYIzP8fvkgQ" name="bodies" type="_BKvtcN9lEeyaYIzP8fvkgQ"/>
              <ownedParameter xmi:id="_BQLAAt9lEeyaYIzP8fvkgQ" name="sort">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>// the entity not able to superjump until proven that it can&#xD;
		this.ableToSuperJump = false;&#xD;
		&#xD;
		super.checkCollision(bodies, sort);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQLAA99lEeyaYIzP8fvkgQ" name="calculatePosition" specification="_A6hgIN9lEeyaYIzP8fvkgQ">
              <language>java</language>
              <body>super.calculatePosition();&#xD;
		this.model.setPosition(this.positionX, this.positionY);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQLnEN9lEeyaYIzP8fvkgQ" name="updateAnimation" specification="_A6iHMN9lEeyaYIzP8fvkgQ">
              <language>java</language>
              <body>this.model.updateAnimation(this.facingRight);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQLnEd9lEeyaYIzP8fvkgQ" name="canSuperJump" specification="_A6iHMd9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQLnEt9lEeyaYIzP8fvkgQ" direction="return">
                <name xsi:nil="true"/>
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>return(this.ableToSuperJump);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQLnE99lEeyaYIzP8fvkgQ" name="loadTextureAndAdapt" specification="_A6iuQd9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQLnFN9lEeyaYIzP8fvkgQ" name="filename">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>this.model.loadTextureAndAdapt(filename);&#xD;
		this.initializeBBSize();&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQM1MN9lEeyaYIzP8fvkgQ" name="loadAnimationAndAdapt" specification="_A6jVUN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQM1Md9lEeyaYIzP8fvkgQ" name="filename">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BQM1Mt9lEeyaYIzP8fvkgQ" name="steps">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BQM1M99lEeyaYIzP8fvkgQ" name="animations">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>this.model.loadAnimationAndAdapt(filename, steps, animations);&#xD;
		this.initializeBBSize();&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQNcQN9lEeyaYIzP8fvkgQ" name="initializeBBSize" specification="_A6kjcN9lEeyaYIzP8fvkgQ">
              <language>java</language>
              <body>//		List&lt;Vector4f> bbPoints = this.model.calculateBoundingBox();&#xD;
		List&lt;Float> bbSize = this.model.calculateBoundingBox();&#xD;
//		this.bbW = (bbPoints.get(0).x - this.positionX) * 2;&#xD;
//		this.bbH = (bbPoints.get(0).y - this.positionY) * 2;&#xD;
		this.bbW = bbSize.get(0);&#xD;
		this.bbH = bbSize.get(1);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQNcQd9lEeyaYIzP8fvkgQ" name="setScale" specification="_A6kjcd9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQNcQt9lEeyaYIzP8fvkgQ" name="scale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <language>java</language>
              <body>this.model.setScale(scale);&#xD;
		&#xD;
		this.bbW *= scale;&#xD;
		this.bbH *= scale;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQNcQ99lEeyaYIzP8fvkgQ" name="isToRemove" specification="_A6lKgd9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQNcRN9lEeyaYIzP8fvkgQ" direction="return">
                <name xsi:nil="true"/>
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>return(this.toRemove);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQODUN9lEeyaYIzP8fvkgQ" name="setToRemove" specification="_A6lxkN9lEeyaYIzP8fvkgQ">
              <language>java</language>
              <body>this.toRemove = true;&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_A6ec0N9lEeyaYIzP8fvkgQ" name="Entity" method="_BQJx4N9lEeyaYIzP8fvkgQ">
              <eAnnotations xmi:id="_A6fD4N9lEeyaYIzP8fvkgQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_A6fD4d9lEeyaYIzP8fvkgQ" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_A6fD4t9lEeyaYIzP8fvkgQ" type="_A6aLYN9lEeyaYIzP8fvkgQ" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_A6fq8N9lEeyaYIzP8fvkgQ" name="setName" method="_BQKY8N9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A6gSAN9lEeyaYIzP8fvkgQ" name="name">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A6gSAd9lEeyaYIzP8fvkgQ" name="getName" method="_BQKY8t9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A6g5EN9lEeyaYIzP8fvkgQ" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A6hgIN9lEeyaYIzP8fvkgQ" name="calculatePosition" method="_BQLAA99lEeyaYIzP8fvkgQ"/>
            <ownedOperation xmi:id="_A6iHMN9lEeyaYIzP8fvkgQ" name="updateAnimation" method="_BQLnEN9lEeyaYIzP8fvkgQ"/>
            <ownedOperation xmi:id="_A6iHMd9lEeyaYIzP8fvkgQ" name="canSuperJump" method="_BQLnEd9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A6iuQN9lEeyaYIzP8fvkgQ" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A6iuQd9lEeyaYIzP8fvkgQ" name="loadTextureAndAdapt" method="_BQLnE99lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A6iuQt9lEeyaYIzP8fvkgQ" name="filename">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A6jVUN9lEeyaYIzP8fvkgQ" name="loadAnimationAndAdapt" method="_BQM1MN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A6j8YN9lEeyaYIzP8fvkgQ" name="filename">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_A6j8Yd9lEeyaYIzP8fvkgQ" name="steps">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_A6j8Yt9lEeyaYIzP8fvkgQ" name="animations">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A6kjcN9lEeyaYIzP8fvkgQ" name="initializeBBSize" visibility="private" method="_BQNcQN9lEeyaYIzP8fvkgQ"/>
            <ownedOperation xmi:id="_A6kjcd9lEeyaYIzP8fvkgQ" name="setScale" method="_BQNcQd9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A6lKgN9lEeyaYIzP8fvkgQ" name="scale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A6lKgd9lEeyaYIzP8fvkgQ" name="isToRemove" method="_BQNcQ99lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A6lKgt9lEeyaYIzP8fvkgQ" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A6lxkN9lEeyaYIzP8fvkgQ" name="setToRemove" method="_BQODUN9lEeyaYIzP8fvkgQ"/>
            <ownedOperation xmi:id="_BM-iEN9lEeyaYIzP8fvkgQ" name="hitTop" visibility="protected" method="_BQKY9N9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BM-iEd9lEeyaYIzP8fvkgQ" name="target" type="_BM7ewd9lEeyaYIzP8fvkgQ"/>
            </ownedOperation>
            <ownedOperation xmi:id="_BM_JIN9lEeyaYIzP8fvkgQ" name="collision" visibility="protected" method="_BQKY9t9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BM_JId9lEeyaYIzP8fvkgQ" name="target" type="_BM7ewd9lEeyaYIzP8fvkgQ"/>
              <ownedParameter xmi:id="_BM_wMN9lEeyaYIzP8fvkgQ" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_BNAXQN9lEeyaYIzP8fvkgQ" name="checkCollision" method="_BQLAAN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BNAXQd9lEeyaYIzP8fvkgQ" name="bodies" type="_BKvtcN9lEeyaYIzP8fvkgQ"/>
              <ownedParameter xmi:id="_BNAXQt9lEeyaYIzP8fvkgQ" name="sort">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_A6vikN9lEeyaYIzP8fvkgQ" name="Hitbox">
            <generalization xmi:id="_BLFEoN9lEeyaYIzP8fvkgQ" general="_A7RHAN9lEeyaYIzP8fvkgQ"/>
            <ownedAttribute xmi:id="_BONRIN9lEeyaYIzP8fvkgQ" name="specialJump">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQPRcd9lEeyaYIzP8fvkgQ" name="Hitbox" specification="_A6xXwN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQPRct9lEeyaYIzP8fvkgQ" type="_A6vikN9lEeyaYIzP8fvkgQ" direction="return"/>
              <language>java</language>
              <body>super();&#xD;
		this.specialJump = false;&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_A6xXwN9lEeyaYIzP8fvkgQ" name="Hitbox" method="_BQPRcd9lEeyaYIzP8fvkgQ">
              <eAnnotations xmi:id="_A6xXwd9lEeyaYIzP8fvkgQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_A6x-0N9lEeyaYIzP8fvkgQ" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_A6x-0d9lEeyaYIzP8fvkgQ" type="_A6vikN9lEeyaYIzP8fvkgQ" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_A6zM8N9lEeyaYIzP8fvkgQ" name="IEntity">
            <generalization xmi:id="_BLGSwN9lEeyaYIzP8fvkgQ" general="_A7E5wN9lEeyaYIzP8fvkgQ"/>
            <ownedAttribute xmi:id="_A65TkN9lEeyaYIzP8fvkgQ" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_A7Drod9lEeyaYIzP8fvkgQ" name="toRemove" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_A656oN9lEeyaYIzP8fvkgQ" name="updateAnimation"/>
            <ownedOperation xmi:id="_A67v0N9lEeyaYIzP8fvkgQ" name="loadTextureAndAdapt">
              <ownedParameter xmi:id="_A67v0d9lEeyaYIzP8fvkgQ" name="filename">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A7BPYN9lEeyaYIzP8fvkgQ" name="loadAnimationAndAdapt">
              <ownedParameter xmi:id="_A7B2cN9lEeyaYIzP8fvkgQ" name="filename">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_A7B2cd9lEeyaYIzP8fvkgQ" name="steps">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_A7CdgN9lEeyaYIzP8fvkgQ" name="animations">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A7DEkN9lEeyaYIzP8fvkgQ" name="setScale">
              <ownedParameter xmi:id="_A7DEkd9lEeyaYIzP8fvkgQ" name="scale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A7DEkt9lEeyaYIzP8fvkgQ" name="canSuperJump">
              <ownedParameter xmi:id="_A7DroN9lEeyaYIzP8fvkgQ" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A7ESsN9lEeyaYIzP8fvkgQ" name="setToRemove"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_A7E5wN9lEeyaYIzP8fvkgQ" name="IPhysicsBody">
            <ownedAttribute xmi:id="_A7HWAd9lEeyaYIzP8fvkgQ" name="x" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_A7H9EN9lEeyaYIzP8fvkgQ" name="y" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_A7LAYd9lEeyaYIzP8fvkgQ" name="velocityX" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_A7LncN9lEeyaYIzP8fvkgQ" name="velocityY" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_A7ODsN9lEeyaYIzP8fvkgQ" name="bBWidth">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_A7OqwN9lEeyaYIzP8fvkgQ" name="bBHeight">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_A7P44d9lEeyaYIzP8fvkgQ" name="airborne" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_A7Gu8N9lEeyaYIzP8fvkgQ" name="setPosition">
              <ownedParameter xmi:id="_A7Gu8d9lEeyaYIzP8fvkgQ" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <ownedParameter xmi:id="_A7Gu8t9lEeyaYIzP8fvkgQ" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A7HWAN9lEeyaYIzP8fvkgQ" name="calculatePosition"/>
            <ownedOperation xmi:id="_A7H9Ed9lEeyaYIzP8fvkgQ" name="setGravity">
              <ownedParameter xmi:id="_A7IkIN9lEeyaYIzP8fvkgQ" name="gravity">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A7JLMN9lEeyaYIzP8fvkgQ" name="setVelocity">
              <ownedParameter xmi:id="_A7JLMd9lEeyaYIzP8fvkgQ" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <ownedParameter xmi:id="_A7JLMt9lEeyaYIzP8fvkgQ" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A7JyQN9lEeyaYIzP8fvkgQ" name="setForce">
              <ownedParameter xmi:id="_A7JyQd9lEeyaYIzP8fvkgQ" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <ownedParameter xmi:id="_A7JyQt9lEeyaYIzP8fvkgQ" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A7KZUN9lEeyaYIzP8fvkgQ" name="setForcePolar">
              <ownedParameter xmi:id="_A7KZUd9lEeyaYIzP8fvkgQ" name="r">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <ownedParameter xmi:id="_A7LAYN9lEeyaYIzP8fvkgQ" name="teta">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A7MOgN9lEeyaYIzP8fvkgQ" name="applyForce">
              <ownedParameter xmi:id="_A7MOgd9lEeyaYIzP8fvkgQ" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <ownedParameter xmi:id="_A7MOgt9lEeyaYIzP8fvkgQ" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A7M1kN9lEeyaYIzP8fvkgQ" name="applyForcePolar">
              <ownedParameter xmi:id="_A7M1kd9lEeyaYIzP8fvkgQ" name="r">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <ownedParameter xmi:id="_A7M1kt9lEeyaYIzP8fvkgQ" name="teta">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A7PR0N9lEeyaYIzP8fvkgQ" name="setCollision">
              <ownedParameter xmi:id="_A7PR0d9lEeyaYIzP8fvkgQ" name="collide">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A7PR0t9lEeyaYIzP8fvkgQ" name="canCollide">
              <ownedParameter xmi:id="_A7P44N9lEeyaYIzP8fvkgQ" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_BNCzgN9lEeyaYIzP8fvkgQ" name="checkCollision">
              <ownedParameter xmi:id="_BNCzgd9lEeyaYIzP8fvkgQ" name="bodies" type="_BKvtcN9lEeyaYIzP8fvkgQ"/>
              <ownedParameter xmi:id="_BNDakN9lEeyaYIzP8fvkgQ" name="sort">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_A7RHAN9lEeyaYIzP8fvkgQ" name="PhysicsBody" isAbstract="true">
            <ownedAttribute xmi:id="_BOPtYN9lEeyaYIzP8fvkgQ" name="mass" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BOQUcd9lEeyaYIzP8fvkgQ" name="canCollide" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BOQ7gd9lEeyaYIzP8fvkgQ" name="positionX" visibility="protected">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BORikN9lEeyaYIzP8fvkgQ" name="positionY" visibility="protected">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BOSwsN9lEeyaYIzP8fvkgQ" name="newPositionX" visibility="protected">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BOTXwd9lEeyaYIzP8fvkgQ" name="newPositionY" visibility="protected">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BOTXw99lEeyaYIzP8fvkgQ" name="previousPositionX" visibility="protected">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BOT-0N9lEeyaYIzP8fvkgQ" name="previousPositionY" visibility="protected">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BOUl4N9lEeyaYIzP8fvkgQ" name="bbW" visibility="protected">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BOUl4t9lEeyaYIzP8fvkgQ" name="bbH" visibility="protected">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BOVM8d9lEeyaYIzP8fvkgQ" name="forceX" visibility="protected">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BOV0Ad9lEeyaYIzP8fvkgQ" name="forceY" visibility="protected">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BOWbEN9lEeyaYIzP8fvkgQ" name="velocityX" visibility="protected">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BOWbEt9lEeyaYIzP8fvkgQ" name="velocityY" visibility="protected">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BOXCId9lEeyaYIzP8fvkgQ" name="accelerationX" visibility="protected">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BOXpMd9lEeyaYIzP8fvkgQ" name="accelerationY" visibility="protected">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BOYQQd9lEeyaYIzP8fvkgQ" name="airFriction" visibility="protected">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BOY3UN9lEeyaYIzP8fvkgQ" name="gravity" visibility="protected">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BOY3Ut9lEeyaYIzP8fvkgQ" name="facingRight" visibility="protected">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BOZeYd9lEeyaYIzP8fvkgQ" name="airborne" visibility="protected">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedAttribute>
            <interfaceRealization xmi:id="_BLMZYd9lEeyaYIzP8fvkgQ" client="_A7RHAN9lEeyaYIzP8fvkgQ" supplier="_A7E5wN9lEeyaYIzP8fvkgQ" contract="_A7E5wN9lEeyaYIzP8fvkgQ"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQP4gN9lEeyaYIzP8fvkgQ" name="PhysicsBody" specification="_A7VYcN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQP4gd9lEeyaYIzP8fvkgQ" type="_A7RHAN9lEeyaYIzP8fvkgQ" direction="return"/>
              <language>java</language>
              <body>this.positionX = 0;&#xD;
		this.positionY = 0;&#xD;
		&#xD;
		this.previousPositionX = 0;&#xD;
		this.previousPositionY = 0;&#xD;
		&#xD;
		this.newPositionX = 0;&#xD;
		this.newPositionY = 0;&#xD;
		&#xD;
		this.bbW = 1;&#xD;
		this.bbH = 1;&#xD;
		&#xD;
		// make collisions available&#xD;
		this.canCollide = true;&#xD;
		// set the mass to 50&#xD;
		this.mass = 50.0f;&#xD;
		&#xD;
		// initialize the movement variables (force, velocity, acceleration)&#xD;
		this.forceX = 0;&#xD;
		this.forceY = 0;&#xD;
		&#xD;
		this.velocityX = 0;&#xD;
		this.velocityY = 0;&#xD;
		&#xD;
		this.accelerationX = 0;&#xD;
		this.accelerationY = 0;&#xD;
		&#xD;
		// set the air friction to 5&#xD;
		this.airFriction = 5f;&#xD;
		// gravity to 1.2&#xD;
		this.gravity = 1.2f;&#xD;
		// these values are arbitrary, they just fit and give the entities a good feel when moving&#xD;
		&#xD;
		this.facingRight = true;&#xD;
		&#xD;
		this.airborne = true;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQQfkN9lEeyaYIzP8fvkgQ" name="checkCollision" specification="_BNF20N9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQQfkd9lEeyaYIzP8fvkgQ" name="bodies" type="_BKvtcN9lEeyaYIzP8fvkgQ"/>
              <ownedParameter xmi:id="_BQQfkt9lEeyaYIzP8fvkgQ" name="sort">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>// if this entity can collide with other entities and hitboxes&#xD;
		if (this.canCollide) {&#xD;
			// the body is airborne until it's proven that it's touching something beneath it&#xD;
			this.airborne = true;&#xD;
			&#xD;
			// store the current position of the entity&#xD;
			this.newPositionX = this.positionX;&#xD;
			this.newPositionY = this.positionY;	&#xD;
		&#xD;
			// get the position of the vertices of the bounding box of the sprite			&#xD;
			float entityBBPoint0X = this.positionX + this.bbW / 2;&#xD;
			float entityBBPoint0Y = this.positionY + this.bbH / 2;&#xD;
			float entityBBPoint2X = this.positionX - this.bbW / 2;&#xD;
			float entityBBPoint2Y = this.positionY - this.bbH / 2;&#xD;
			&#xD;
			// sort the hitboxes that the entity is gonna collide with based on their distance from the entity&#xD;
			// this prevents glitches when sliding across multiple hitboxes and getting stuck at the edges&#xD;
			if (sort) {&#xD;
				Collections.sort(bodies, new Comparator&lt;IPhysicsBody>() {&#xD;
					public int compare(IPhysicsBody first, IPhysicsBody second) {&#xD;
						&#xD;
						float dist1 = Math.abs(positionX - first.getX());&#xD;
						float dist2 = Math.abs(positionX - second.getX());&#xD;
						&#xD;
						return(dist1 == dist2 ? 0 : dist1 &lt; dist2 ? -1 : 1);&#xD;
					}&#xD;
				});&#xD;
			}&#xD;
&#xD;
			// scroll through all the hitboxes (ordered by distance to the entity)&#xD;
			for (int i = 0; i &lt; bodies.size(); i++) {&#xD;
				// get the edge vertices of the bounding box of the current hitbox&#xD;
				&#xD;
				float objectBB0X = bodies.get(i).getX() + bodies.get(i).getBBWidth() / 2;&#xD;
				float objectBB0Y = bodies.get(i).getY() + bodies.get(i).getBBHeight() / 2;&#xD;
				float objectBB2X = bodies.get(i).getX() - bodies.get(i).getBBWidth() / 2;&#xD;
				float objectBB2Y = bodies.get(i).getY() - bodies.get(i).getBBHeight() / 2;&#xD;
				&#xD;
				// if the entity collides with the current hitbox (meaning that its edge vertices are inside the range of the&#xD;
				// hitbox edge vertices&#xD;
				if (entityBBPoint0X > objectBB2X &amp;&amp; // LEFT&#xD;
					entityBBPoint2X &lt; objectBB0X &amp;&amp; // RIGHT&#xD;
					entityBBPoint2Y &lt; objectBB0Y &amp;&amp; // TOP&#xD;
					entityBBPoint0Y > objectBB2Y) { // BOTTOM&#xD;
					&#xD;
					if (this.collision(bodies.get(i))) {&#xD;
						// calculate the bounding box of the entity in the frame before the collision&#xD;
						float prevEntityBBPoint0X = this.previousPositionX + this.bbW / 2;&#xD;
						float prevEntityBBPoint0Y = this.previousPositionY + this.bbH / 2;&#xD;
						float prevEntityBBPoint2X = this.previousPositionX - this.bbW / 2;&#xD;
						float prevEntityBBPoint2Y = this.previousPositionY - this.bbH / 2;&#xD;
						// this is necessary to be able to tell from what direction the entity hit the hitbox from&#xD;
						&#xD;
						if (prevEntityBBPoint0X &lt; objectBB2X) { // LEFT&#xD;
							this.newPositionX = objectBB2X - (this.bbW / 2) - 0.1f; // place the entity to the left of the hitbox&#xD;
							this.velocityX = 0;									     // negate the horizontal velocity&#xD;
							this.hitLeft(bodies.get(i));&#xD;
						} else if (prevEntityBBPoint2X > objectBB0X) { // RIGHT&#xD;
							this.newPositionX = objectBB0X + (this.bbW / 2) + 0.1f; // place the entity to the right of the hitbox&#xD;
							this.velocityX = 0;									     // negate the horizontal velocity&#xD;
							this.hitRight(bodies.get(i));&#xD;
						} else if (prevEntityBBPoint2Y > objectBB0Y) { // TOP&#xD;
							this.newPositionY = objectBB0Y + (this.bbH / 2) + 0.1f; // place the entity to the top of the hitbox&#xD;
							this.velocityY = 0;									     // negate the vertical velocity&#xD;
							this.airborne = false;&#xD;
							this.hitTop(bodies.get(i));&#xD;
						} else if (prevEntityBBPoint0Y &lt; objectBB2Y) { // BOTTOM&#xD;
							this.newPositionY = objectBB2Y - (this.bbH / 2) - 0.1f; // place the entity to the bottom of the hitbox&#xD;
							this.velocityY = 0;									     // negate the vertical velocity&#xD;
							this.hitBottom(bodies.get(i));&#xD;
						}&#xD;
					}&#xD;
					&#xD;
					// rollback the position of the entity to the new calculated position (free from collisions)&#xD;
					this.positionX = this.newPositionX;&#xD;
					this.positionY = this.newPositionY;&#xD;
					&#xD;
					// calculate the new bounding box with the updated position for the next hitboxes checks (in case it now collides with&#xD;
					// another hitbox, or in case it doesn't collide anymore with another hitbox)	&#xD;
					entityBBPoint0X = this.positionX + this.bbW / 2;&#xD;
					entityBBPoint0Y = this.positionY + this.bbH / 2;&#xD;
					entityBBPoint2X = this.positionX - this.bbW / 2;&#xD;
					entityBBPoint2Y = this.positionY - this.bbH / 2;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQQfk99lEeyaYIzP8fvkgQ" name="setForce" specification="_A7WmkN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQQflN9lEeyaYIzP8fvkgQ" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BQQfld9lEeyaYIzP8fvkgQ" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <language>java</language>
              <body>this.forceX = x;&#xD;
		this.forceY = y;&#xD;
		&#xD;
		this.updateDirection();&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQRGoN9lEeyaYIzP8fvkgQ" name="setForcePolar" specification="_A7XNoN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQRGod9lEeyaYIzP8fvkgQ" name="r">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BQRGot9lEeyaYIzP8fvkgQ" name="teta">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <language>java</language>
              <body>this.forceX = r * (float)Math.cos(teta);&#xD;
		this.forceY = r * (float)Math.sin(teta);&#xD;
		&#xD;
		this.updateDirection();&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQRGo99lEeyaYIzP8fvkgQ" name="applyForce" specification="_A7bfEN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQRGpN9lEeyaYIzP8fvkgQ" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BQRGpd9lEeyaYIzP8fvkgQ" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <language>java</language>
              <body>this.forceX += x;&#xD;
		this.forceY += y;&#xD;
		&#xD;
		this.updateDirection();&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQRGpt9lEeyaYIzP8fvkgQ" name="applyForcePolar" specification="_A7cGId9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQRGp99lEeyaYIzP8fvkgQ" name="r">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BQRGqN9lEeyaYIzP8fvkgQ" name="teta">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <language>java</language>
              <body>this.forceX += r * (float)Math.cos(teta);&#xD;
		this.forceY += r * (float)Math.sin(teta);&#xD;
		&#xD;
		this.updateDirection();&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQRGqd9lEeyaYIzP8fvkgQ" name="updateDirection" specification="_A7dUQN9lEeyaYIzP8fvkgQ">
              <language>java</language>
              <body>if (this.forceX > 0) {&#xD;
			this.facingRight = true;&#xD;
		} else if (this.forceX &lt; 0) {&#xD;
			this.facingRight = false;&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQRtsN9lEeyaYIzP8fvkgQ" name="calculatePosition" specification="_A7dUQd9lEeyaYIzP8fvkgQ">
              <language>java</language>
              <body>this.previousPositionX = this.positionX;&#xD;
		this.previousPositionY = this.positionY;&#xD;
		&#xD;
		float totalForceX = this.forceX + (this.airFriction * (-this.velocityX));&#xD;
		float totalForceY = this.forceY + (this.airFriction * (-this.velocityY)) - (this.mass * this.gravity);&#xD;
		&#xD;
		this.accelerationX = totalForceX / this.mass;&#xD;
		this.accelerationY = totalForceY / this.mass;&#xD;
		&#xD;
		this.velocityX += accelerationX;&#xD;
		this.velocityY += accelerationY;&#xD;
&#xD;
		this.positionX += this.velocityX;&#xD;
		this.positionY += this.velocityY;&#xD;
		&#xD;
		this.forceX = 0;&#xD;
		this.forceY = 0;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQRtsd9lEeyaYIzP8fvkgQ" name="setPosition" specification="_A7d7UN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQRtst9lEeyaYIzP8fvkgQ" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BQRts99lEeyaYIzP8fvkgQ" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <language>java</language>
              <body>this.positionX = x;&#xD;
		this.positionY = y;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQRttN9lEeyaYIzP8fvkgQ" name="setGravity" specification="_A7eiYN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQRttd9lEeyaYIzP8fvkgQ" name="gravity">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <language>java</language>
              <body>this.gravity = gravity;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQSUwN9lEeyaYIzP8fvkgQ" name="collision" specification="_BNHE8d9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQSUwd9lEeyaYIzP8fvkgQ" name="target" type="_BM7ewd9lEeyaYIzP8fvkgQ"/>
              <ownedParameter xmi:id="_BQSUwt9lEeyaYIzP8fvkgQ" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>System.out.println(&quot;Collided with &quot; + target);&#xD;
		return(true);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQSUw99lEeyaYIzP8fvkgQ" name="hitTop" specification="_BNHsAd9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQSUxN9lEeyaYIzP8fvkgQ" name="target" type="_BM7ewd9lEeyaYIzP8fvkgQ"/>
              <language>java</language>
              <body>System.out.println(&quot;Collision from top&quot;);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQSUxd9lEeyaYIzP8fvkgQ" name="hitBottom" specification="_BNITEN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQSUxt9lEeyaYIzP8fvkgQ" name="target" type="_BM7ewd9lEeyaYIzP8fvkgQ"/>
              <language>java</language>
              <body>System.out.println(&quot;Collision from bottom&quot;);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQS70N9lEeyaYIzP8fvkgQ" name="hitLeft" specification="_BNI6IN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQS70d9lEeyaYIzP8fvkgQ" name="target" type="_BM7ewd9lEeyaYIzP8fvkgQ"/>
              <language>java</language>
              <body>System.out.println(&quot;Collision from left&quot;);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQS70t9lEeyaYIzP8fvkgQ" name="hitRight" specification="_BNJhMN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQS7099lEeyaYIzP8fvkgQ" name="target" type="_BM7ewd9lEeyaYIzP8fvkgQ"/>
              <language>java</language>
              <body>System.out.println(&quot;Collision from right&quot;);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQS71N9lEeyaYIzP8fvkgQ" name="setBBWidth" specification="_A7fJcN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQS71d9lEeyaYIzP8fvkgQ" name="width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <language>java</language>
              <body>this.bbW = width;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQTi4N9lEeyaYIzP8fvkgQ" name="setBBHeight" specification="_A7fwgd9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQTi4d9lEeyaYIzP8fvkgQ" name="height">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <language>java</language>
              <body>this.bbH = height;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQTi4t9lEeyaYIzP8fvkgQ" name="getBBWidth" specification="_A7gXkN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQTi499lEeyaYIzP8fvkgQ" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <language>java</language>
              <body>return(this.bbW);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQTi5N9lEeyaYIzP8fvkgQ" name="getBBHeight" specification="_A7gXkt9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQTi5d9lEeyaYIzP8fvkgQ" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <language>java</language>
              <body>return(this.bbH);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQTi5t9lEeyaYIzP8fvkgQ" name="getX" specification="_A7g-od9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQTi599lEeyaYIzP8fvkgQ" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <language>java</language>
              <body>return(this.positionX);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQUJ8N9lEeyaYIzP8fvkgQ" name="getY" specification="_A7hlsN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQUJ8d9lEeyaYIzP8fvkgQ" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <language>java</language>
              <body>return(this.positionY);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQUJ8t9lEeyaYIzP8fvkgQ" name="canCollide" specification="_A7hlst9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQUJ899lEeyaYIzP8fvkgQ" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>return(this.canCollide);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQUJ9N9lEeyaYIzP8fvkgQ" name="setCollision" specification="_A7iMwd9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQUJ9d9lEeyaYIzP8fvkgQ" name="collision">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>this.canCollide = collision;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQUxAN9lEeyaYIzP8fvkgQ" name="setVelocity" specification="_A7iz0N9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQUxAd9lEeyaYIzP8fvkgQ" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BQUxAt9lEeyaYIzP8fvkgQ" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <language>java</language>
              <body>this.velocityX = x;&#xD;
		this.velocityY = y;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQUxA99lEeyaYIzP8fvkgQ" name="getVelocityX" specification="_A7ja4d9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQUxBN9lEeyaYIzP8fvkgQ" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <language>java</language>
              <body>return(this.velocityX);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQUxBd9lEeyaYIzP8fvkgQ" name="getVelocityY" specification="_A7kB8N9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQUxBt9lEeyaYIzP8fvkgQ" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <language>java</language>
              <body>return(this.velocityY);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQUxB99lEeyaYIzP8fvkgQ" name="isAirborne" specification="_A7kpAN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQUxCN9lEeyaYIzP8fvkgQ" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>return(this.airborne);&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_A7VYcN9lEeyaYIzP8fvkgQ" name="PhysicsBody" method="_BQP4gN9lEeyaYIzP8fvkgQ">
              <eAnnotations xmi:id="_A7VYcd9lEeyaYIzP8fvkgQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_A7V_gN9lEeyaYIzP8fvkgQ" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_A7V_gd9lEeyaYIzP8fvkgQ" type="_A7RHAN9lEeyaYIzP8fvkgQ" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_A7WmkN9lEeyaYIzP8fvkgQ" name="setForce" method="_BQQfk99lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A7Wmkd9lEeyaYIzP8fvkgQ" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <ownedParameter xmi:id="_A7Wmkt9lEeyaYIzP8fvkgQ" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A7XNoN9lEeyaYIzP8fvkgQ" name="setForcePolar" method="_BQRGoN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A7XNod9lEeyaYIzP8fvkgQ" name="r">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <ownedParameter xmi:id="_A7XNot9lEeyaYIzP8fvkgQ" name="teta">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A7bfEN9lEeyaYIzP8fvkgQ" name="applyForce" method="_BQRGo99lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A7bfEd9lEeyaYIzP8fvkgQ" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <ownedParameter xmi:id="_A7cGIN9lEeyaYIzP8fvkgQ" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A7cGId9lEeyaYIzP8fvkgQ" name="applyForcePolar" method="_BQRGpt9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A7ctMN9lEeyaYIzP8fvkgQ" name="r">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <ownedParameter xmi:id="_A7ctMd9lEeyaYIzP8fvkgQ" name="teta">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A7dUQN9lEeyaYIzP8fvkgQ" name="updateDirection" visibility="private" method="_BQRGqd9lEeyaYIzP8fvkgQ"/>
            <ownedOperation xmi:id="_A7dUQd9lEeyaYIzP8fvkgQ" name="calculatePosition" method="_BQRtsN9lEeyaYIzP8fvkgQ"/>
            <ownedOperation xmi:id="_A7d7UN9lEeyaYIzP8fvkgQ" name="setPosition" method="_BQRtsd9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A7d7Ud9lEeyaYIzP8fvkgQ" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <ownedParameter xmi:id="_A7d7Ut9lEeyaYIzP8fvkgQ" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A7eiYN9lEeyaYIzP8fvkgQ" name="setGravity" method="_BQRttN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A7eiYd9lEeyaYIzP8fvkgQ" name="gravity">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A7fJcN9lEeyaYIzP8fvkgQ" name="setBBWidth" method="_BQS71N9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A7fwgN9lEeyaYIzP8fvkgQ" name="width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A7fwgd9lEeyaYIzP8fvkgQ" name="setBBHeight" method="_BQTi4N9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A7fwgt9lEeyaYIzP8fvkgQ" name="height">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A7gXkN9lEeyaYIzP8fvkgQ" name="getBBWidth" method="_BQTi4t9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A7gXkd9lEeyaYIzP8fvkgQ" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A7gXkt9lEeyaYIzP8fvkgQ" name="getBBHeight" method="_BQTi5N9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A7g-oN9lEeyaYIzP8fvkgQ" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A7g-od9lEeyaYIzP8fvkgQ" name="getX" method="_BQTi5t9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A7g-ot9lEeyaYIzP8fvkgQ" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A7hlsN9lEeyaYIzP8fvkgQ" name="getY" method="_BQUJ8N9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A7hlsd9lEeyaYIzP8fvkgQ" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A7hlst9lEeyaYIzP8fvkgQ" name="canCollide" method="_BQUJ8t9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A7iMwN9lEeyaYIzP8fvkgQ" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A7iMwd9lEeyaYIzP8fvkgQ" name="setCollision" method="_BQUJ9N9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A7iMwt9lEeyaYIzP8fvkgQ" name="collision">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A7iz0N9lEeyaYIzP8fvkgQ" name="setVelocity" method="_BQUxAN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A7iz0d9lEeyaYIzP8fvkgQ" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <ownedParameter xmi:id="_A7ja4N9lEeyaYIzP8fvkgQ" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A7ja4d9lEeyaYIzP8fvkgQ" name="getVelocityX" method="_BQUxA99lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A7ja4t9lEeyaYIzP8fvkgQ" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A7kB8N9lEeyaYIzP8fvkgQ" name="getVelocityY" method="_BQUxBd9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A7kB8d9lEeyaYIzP8fvkgQ" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A7kpAN9lEeyaYIzP8fvkgQ" name="isAirborne" method="_BQUxB99lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A7kpAd9lEeyaYIzP8fvkgQ" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_BNF20N9lEeyaYIzP8fvkgQ" name="checkCollision" method="_BQQfkN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BNF20d9lEeyaYIzP8fvkgQ" name="bodies" type="_BKvtcN9lEeyaYIzP8fvkgQ"/>
              <ownedParameter xmi:id="_BNF20t9lEeyaYIzP8fvkgQ" name="sort">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_BNHE8d9lEeyaYIzP8fvkgQ" name="collision" visibility="protected" method="_BQSUwN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BNHE8t9lEeyaYIzP8fvkgQ" name="target" type="_BM7ewd9lEeyaYIzP8fvkgQ"/>
              <ownedParameter xmi:id="_BNHsAN9lEeyaYIzP8fvkgQ" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_BNHsAd9lEeyaYIzP8fvkgQ" name="hitTop" visibility="protected" method="_BQSUw99lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BNHsAt9lEeyaYIzP8fvkgQ" name="target" type="_BM7ewd9lEeyaYIzP8fvkgQ"/>
            </ownedOperation>
            <ownedOperation xmi:id="_BNITEN9lEeyaYIzP8fvkgQ" name="hitBottom" visibility="protected" method="_BQSUxd9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BNITEd9lEeyaYIzP8fvkgQ" name="target" type="_BM7ewd9lEeyaYIzP8fvkgQ"/>
            </ownedOperation>
            <ownedOperation xmi:id="_BNI6IN9lEeyaYIzP8fvkgQ" name="hitLeft" visibility="protected" method="_BQS70N9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BNI6Id9lEeyaYIzP8fvkgQ" name="target" type="_BM7ewd9lEeyaYIzP8fvkgQ"/>
            </ownedOperation>
            <ownedOperation xmi:id="_BNJhMN9lEeyaYIzP8fvkgQ" name="hitRight" visibility="protected" method="_BQS70t9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BNJhMd9lEeyaYIzP8fvkgQ" name="target" type="_BM7ewd9lEeyaYIzP8fvkgQ"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_A7tL4N9lEeyaYIzP8fvkgQ" name="Player">
            <generalization xmi:id="_BLWKYN9lEeyaYIzP8fvkgQ" general="_A6aLYN9lEeyaYIzP8fvkgQ"/>
            <ownedAttribute xmi:id="_BOb6oN9lEeyaYIzP8fvkgQ" name="allert" type="_A-EjYN9lEeyaYIzP8fvkgQ" association="_BRmjYd9lEeyaYIzP8fvkgQ"/>
            <ownedAttribute xmi:id="_BOchsd9lEeyaYIzP8fvkgQ" name="hitSfx" visibility="private" type="_A-kSoN9lEeyaYIzP8fvkgQ" association="_BRnKcd9lEeyaYIzP8fvkgQ"/>
            <ownedAttribute xmi:id="_BOdIwd9lEeyaYIzP8fvkgQ" name="attackSfx" visibility="private" type="_A-kSoN9lEeyaYIzP8fvkgQ" association="_BRnxgd9lEeyaYIzP8fvkgQ"/>
            <ownedAttribute xmi:id="_BOdv0d9lEeyaYIzP8fvkgQ" name="jumpSfx" visibility="private" type="_A-kSoN9lEeyaYIzP8fvkgQ" association="_BRoYkd9lEeyaYIzP8fvkgQ"/>
            <ownedAttribute xmi:id="_BOeW4N9lEeyaYIzP8fvkgQ" name="superJumpSfx" visibility="private" type="_A-kSoN9lEeyaYIzP8fvkgQ" association="_BRo_od9lEeyaYIzP8fvkgQ"/>
            <ownedAttribute xmi:id="_BOe98N9lEeyaYIzP8fvkgQ" name="idle" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BOe98t9lEeyaYIzP8fvkgQ" name="sleeping" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BOflAd9lEeyaYIzP8fvkgQ" name="goingToSleep" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BOgMEd9lEeyaYIzP8fvkgQ" name="coins" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BOhaMN9lEeyaYIzP8fvkgQ" name="additionalJumps" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BOiBQN9lEeyaYIzP8fvkgQ" name="canDoubleJump" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BOiBQt9lEeyaYIzP8fvkgQ" name="crouching" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BOioUd9lEeyaYIzP8fvkgQ" name="hp" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BOjPYd9lEeyaYIzP8fvkgQ" name="damaged" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BOj2cN9lEeyaYIzP8fvkgQ" name="damagedTimer" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQWmMt9lEeyaYIzP8fvkgQ" name="Player" specification="_A7yrcN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQWmM99lEeyaYIzP8fvkgQ" type="_A7tL4N9lEeyaYIzP8fvkgQ" direction="return">
                <name xsi:nil="true"/>
              </ownedParameter>
              <language>java</language>
              <body>this.allert = new Model();&#xD;
		&#xD;
		this.idle = false;&#xD;
		this.sleeping = false;&#xD;
		this.goingToSleep = false;&#xD;
		&#xD;
		this.coins = 0;&#xD;
		this.additionalJumps = 0;&#xD;
		this.canDoubleJump = false;&#xD;
		this.crouching = false;&#xD;
		&#xD;
		this.hp = 200;&#xD;
		&#xD;
		this.damaged = false;&#xD;
		&#xD;
		this.hitSfx = new Sound(&quot;./assets/sounds/hit.ogg&quot;, false);&#xD;
		this.attackSfx = new Sound(&quot;./assets/sounds/attack.ogg&quot;, false);&#xD;
		this.jumpSfx = new Sound(&quot;./assets/sounds/jump.ogg&quot;, false);&#xD;
		this.superJumpSfx = new Sound(&quot;./assets/sounds/superJump.ogg&quot;, false);&#xD;
		this.attackSfx = new Sound(&quot;./assets/sounds/attack.ogg&quot;, false);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQXNQN9lEeyaYIzP8fvkgQ" name="calculatePosition" specification="_A7zSgN9lEeyaYIzP8fvkgQ">
              <language>java</language>
              <body>super.calculatePosition();&#xD;
		&#xD;
		if (this.facingRight) {&#xD;
			this.allert.setPosition(this.positionX + this.model.getScaleMul() / 2 + this.model.getScaleMul() / 20,&#xD;
									this.positionY + this.model.getScaleMul() / 2 - this.model.getScaleMul() / 10);&#xD;
		} else {&#xD;
			this.allert.setPosition(this.positionX - this.model.getScaleMul() / 2 - this.model.getScaleMul() / 20,&#xD;
							 		this.positionY + this.model.getScaleMul() / 2 - this.model.getScaleMul() / 10);&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQXNQd9lEeyaYIzP8fvkgQ" name="updateAnimation" specification="_A7zSgd9lEeyaYIzP8fvkgQ">
              <language>java</language>
              <body>if (this.airborne) {&#xD;
//			this.model.setAnimationSpeed(3f);&#xD;
			&#xD;
			float threshold = 5f;&#xD;
			&#xD;
			if (super.velocityY > threshold &amp;&amp; this.model.getFrames().size() >= 3) {&#xD;
				this.model.setCurrentAnimation(2);&#xD;
			} else if (this.velocityY >= -threshold &amp;&amp; this.velocityY &lt;= threshold  &amp;&amp; this.model.getFrames().size() >= 4) {&#xD;
				this.model.setCurrentAnimation(3);&#xD;
			} else if (this.velocityY &lt; -threshold  &amp;&amp; this.model.getFrames().size() >= 5) {&#xD;
				this.model.setCurrentAnimation(4);&#xD;
			}&#xD;
		} else {&#xD;
//			this.model.setAnimationSpeed(3f);&#xD;
			&#xD;
			float threshold = 0.02f;&#xD;
	&#xD;
			if (this.velocityX &lt; threshold &amp;&amp; this.velocityX > -threshold) {&#xD;
				if (this.idle) {&#xD;
					this.model.setAnimationSpeed(1f);&#xD;
					this.model.setCurrentAnimation(5);&#xD;
				} else if (this.goingToSleep) {&#xD;
					this.model.setAnimationSpeed(1f);&#xD;
					this.model.setCurrentAnimation(6);&#xD;
				} else if (this.sleeping) {&#xD;
					this.model.setAnimationSpeed(1f);&#xD;
					this.model.setCurrentAnimation(7);&#xD;
				} else {&#xD;
					if (this.crouching) {&#xD;
						this.model.setCurrentAnimation(8);&#xD;
					} else {&#xD;
						this.model.setCurrentAnimation(0);&#xD;
					}&#xD;
				}&#xD;
		&#xD;
			} else if (this.model.getFrames().size() >= 1) {&#xD;
				this.model.setAnimationSpeed(3f);&#xD;
				if (this.crouching) {&#xD;
					this.model.setCurrentAnimation(9);&#xD;
				} else {&#xD;
					this.model.setCurrentAnimation(1);&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		this.model.updateAnimation(this.facingRight);&#xD;
		this.allert.updateAnimation(true);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQXNQt9lEeyaYIzP8fvkgQ" name="applyNewPosition" specification="_A7z5kN9lEeyaYIzP8fvkgQ">
              <language>java</language>
              <body>this.model.setPosition(this.newPositionX, this.newPositionY);&#xD;
		&#xD;
		if (this.facingRight) {&#xD;
			this.setPosition(this.newPositionX + this.model.getScaleMul() / 2 + this.model.getScaleMul() / 20,&#xD;
							 this.newPositionY + this.model.getScaleMul() / 2 - this.model.getScaleMul() / 10);&#xD;
		} else {&#xD;
			this.setPosition(this.newPositionX - this.model.getScaleMul() / 2 - this.model.getScaleMul() / 20,&#xD;
							 this.newPositionY + this.model.getScaleMul() / 2 - this.model.getScaleMul() / 10);&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQX0UN9lEeyaYIzP8fvkgQ" name="setIdle" specification="_A70goN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQX0Ud9lEeyaYIzP8fvkgQ" name="idle">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>this.idle = idle;&#xD;
		this.sleeping = false;&#xD;
		this.goingToSleep = false;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQX0Ut9lEeyaYIzP8fvkgQ" name="setSleep" specification="_A71HsN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQX0U99lEeyaYIzP8fvkgQ" name="sleep">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>this.sleeping = sleep;&#xD;
		this.idle = false;&#xD;
		this.goingToSleep = false;&#xD;
		&#xD;
		if (this.sleeping) {&#xD;
			this.allert.setCurrentAnimation(1);&#xD;
		} else {&#xD;
			this.allert.setCurrentAnimation(0);&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQX0VN9lEeyaYIzP8fvkgQ" name="setGoingToSleep" specification="_A72V0N9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQX0Vd9lEeyaYIzP8fvkgQ" name="goingToSleep">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>this.goingToSleep = goingToSleep;&#xD;
		this.idle = false;&#xD;
		this.sleeping = false;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQYbYN9lEeyaYIzP8fvkgQ" name="setScale" specification="_A7284N9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQYbYd9lEeyaYIzP8fvkgQ" name="scale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <language>java</language>
              <body>super.setScale(scale);&#xD;
		this.allert.setScale(scale / 2.5f);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQYbYt9lEeyaYIzP8fvkgQ" name="collision" specification="_BNOZsN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQYbY99lEeyaYIzP8fvkgQ" name="target" type="_BM7ewd9lEeyaYIzP8fvkgQ"/>
              <ownedParameter xmi:id="_BQYbZN9lEeyaYIzP8fvkgQ" direction="return">
                <name xsi:nil="true"/>
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>if (target instanceof Collectible) {&#xD;
			Collectible collectible = (Collectible)target;&#xD;
			System.out.println(&quot;Collectible: &quot; + collectible.getName());&#xD;
			collectible.applyEffect(this);&#xD;
			return(false);&#xD;
		}&#xD;
		&#xD;
		return(true);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQYbZd9lEeyaYIzP8fvkgQ" name="hitTop" specification="_BNPAwN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQYbZt9lEeyaYIzP8fvkgQ" name="target" type="_BM7ewd9lEeyaYIzP8fvkgQ"/>
              <language>java</language>
              <body>if (target instanceof Enemy) {&#xD;
			Enemy enemy = (Enemy)target;&#xD;
			enemy.hit();&#xD;
			this.unconditionalJump();&#xD;
		} else {&#xD;
			super.hitTop(target);&#xD;
			this.refreshJump();&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQYbZ99lEeyaYIzP8fvkgQ" name="hitLeft" specification="_BNPn0N9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQYbaN9lEeyaYIzP8fvkgQ" name="target" type="_BM7ewd9lEeyaYIzP8fvkgQ"/>
              <language>java</language>
              <body>if (target instanceof Enemy) {&#xD;
			Enemy enemy = (Enemy)target;&#xD;
			this.takeDamage(enemy.getDamage());&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQZCcN9lEeyaYIzP8fvkgQ" name="hitRight" specification="_BNPn0t9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQZCcd9lEeyaYIzP8fvkgQ" name="target" type="_BM7ewd9lEeyaYIzP8fvkgQ"/>
              <language>java</language>
              <body>if (target instanceof Enemy) {&#xD;
			Enemy enemy = (Enemy)target;&#xD;
			this.takeDamage(enemy.getDamage());&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQZCct9lEeyaYIzP8fvkgQ" name="calculateState" specification="_A73j8N9lEeyaYIzP8fvkgQ">
              <language>java</language>
              <body>if (this.damaged) {&#xD;
			double currentTime = System.nanoTime() / (double)1000000000L;&#xD;
			&#xD;
			double delta = currentTime - damagedTimer;&#xD;
			&#xD;
			if (delta >= 1) {&#xD;
				this.damaged = false;&#xD;
				this.model.setOpacity(1);&#xD;
			}&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQZCc99lEeyaYIzP8fvkgQ" name="getDamagedState" specification="_A74LAN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQZCdN9lEeyaYIzP8fvkgQ" direction="return">
                <name xsi:nil="true"/>
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>return(this.damaged);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQZCdd9lEeyaYIzP8fvkgQ" name="getHP" specification="_A74yEN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQZCdt9lEeyaYIzP8fvkgQ" direction="return">
                <name xsi:nil="true"/>
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>return(this.hp);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQZpgN9lEeyaYIzP8fvkgQ" name="takeDamage" specification="_A75ZId9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQZpgd9lEeyaYIzP8fvkgQ" name="damage">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>if (!this.damaged) {&#xD;
			this.hp -= damage;&#xD;
			this.damaged = true;&#xD;
			this.damagedTimer = System.nanoTime() / (double)1000000000L;&#xD;
			this.model.setOpacity(0.7f);&#xD;
			&#xD;
			this.hitSfx.play();&#xD;
			&#xD;
//			this.canCollideEntities = false;&#xD;
			&#xD;
			if (this.hp &lt;= 0) {&#xD;
				this.setPosition(-2476, -64);&#xD;
				this.hp = 200;&#xD;
			}&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQZpgt9lEeyaYIzP8fvkgQ" name="addCoin" specification="_A76AMN9lEeyaYIzP8fvkgQ">
              <language>java</language>
              <body>this.coins++;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQZpg99lEeyaYIzP8fvkgQ" name="enableDoubleJump" specification="_A76AMd9lEeyaYIzP8fvkgQ">
              <language>java</language>
              <body>this.canDoubleJump = true;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQZphN9lEeyaYIzP8fvkgQ" name="refreshJump" specification="_A76nQN9lEeyaYIzP8fvkgQ">
              <language>java</language>
              <body>if (this.canDoubleJump) {&#xD;
			this.additionalJumps = 1;&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQaQkN9lEeyaYIzP8fvkgQ" name="canJump" specification="_A77OUN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQaQkd9lEeyaYIzP8fvkgQ" direction="return">
                <name xsi:nil="true"/>
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>return(!this.airborne || additionalJumps != 0);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQaQkt9lEeyaYIzP8fvkgQ" name="jump" specification="_A78ccN9lEeyaYIzP8fvkgQ">
              <language>java</language>
              <body>this.jumpSfx.playRaw();&#xD;
		this.setVelocity(this.getVelocityX(), 0);&#xD;
		&#xD;
		if (this.airborne) {&#xD;
			this.applyForce(0, 1400);&#xD;
			&#xD;
			this.additionalJumps--;&#xD;
			&#xD;
			if (this.additionalJumps &lt; 0) {&#xD;
				this.additionalJumps = 0;&#xD;
			}&#xD;
			&#xD;
		} else {&#xD;
			this.applyForce(0, 1400);&#xD;
		}&#xD;
		&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQaQk99lEeyaYIzP8fvkgQ" name="unconditionalJump" specification="_A78ccd9lEeyaYIzP8fvkgQ">
              <language>java</language>
              <body>this.attackSfx.playRaw();&#xD;
		this.setVelocity(this.getVelocityX(), 0);&#xD;
		&#xD;
		this.applyForce(0, 1400);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQaQlN9lEeyaYIzP8fvkgQ" name="superJump" specification="_A78cct9lEeyaYIzP8fvkgQ">
              <language>java</language>
              <body>this.superJumpSfx.playRaw();&#xD;
		this.applyForce(0, 4000);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQaQld9lEeyaYIzP8fvkgQ" name="setCrouching" specification="_A79DgN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQaQlt9lEeyaYIzP8fvkgQ" name="flag">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>this.crouching = flag;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQa3oN9lEeyaYIzP8fvkgQ" name="facingRight" specification="_A79qkN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQa3od9lEeyaYIzP8fvkgQ" name="flag">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>this.facingRight = flag;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQa3ot9lEeyaYIzP8fvkgQ" name="canDoubleJump" specification="_A79qkt9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQa3o99lEeyaYIzP8fvkgQ" direction="return">
                <name xsi:nil="true"/>
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>return(this.canDoubleJump);&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_A7yrcN9lEeyaYIzP8fvkgQ" name="Player" method="_BQWmMt9lEeyaYIzP8fvkgQ">
              <eAnnotations xmi:id="_A7yrcd9lEeyaYIzP8fvkgQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_A7yrct9lEeyaYIzP8fvkgQ" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_A7yrc99lEeyaYIzP8fvkgQ" type="_A7tL4N9lEeyaYIzP8fvkgQ" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_A7zSgN9lEeyaYIzP8fvkgQ" name="calculatePosition" method="_BQXNQN9lEeyaYIzP8fvkgQ"/>
            <ownedOperation xmi:id="_A7zSgd9lEeyaYIzP8fvkgQ" name="updateAnimation" method="_BQXNQd9lEeyaYIzP8fvkgQ"/>
            <ownedOperation xmi:id="_A7z5kN9lEeyaYIzP8fvkgQ" name="applyNewPosition" method="_BQXNQt9lEeyaYIzP8fvkgQ"/>
            <ownedOperation xmi:id="_A70goN9lEeyaYIzP8fvkgQ" name="setIdle" method="_BQX0UN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A70god9lEeyaYIzP8fvkgQ" name="idle">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A71HsN9lEeyaYIzP8fvkgQ" name="setSleep" method="_BQX0Ut9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A71Hsd9lEeyaYIzP8fvkgQ" name="sleep">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A72V0N9lEeyaYIzP8fvkgQ" name="setGoingToSleep" method="_BQX0VN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A72V0d9lEeyaYIzP8fvkgQ" name="goingToSleep">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A7284N9lEeyaYIzP8fvkgQ" name="setScale" method="_BQYbYN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A7284d9lEeyaYIzP8fvkgQ" name="scale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A73j8N9lEeyaYIzP8fvkgQ" name="calculateState" method="_BQZCct9lEeyaYIzP8fvkgQ"/>
            <ownedOperation xmi:id="_A74LAN9lEeyaYIzP8fvkgQ" name="getDamagedState" method="_BQZCc99lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A74LAd9lEeyaYIzP8fvkgQ" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A74yEN9lEeyaYIzP8fvkgQ" name="getHP" method="_BQZCdd9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A75ZIN9lEeyaYIzP8fvkgQ" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A75ZId9lEeyaYIzP8fvkgQ" name="takeDamage" method="_BQZpgN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A75ZIt9lEeyaYIzP8fvkgQ" name="damage">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A76AMN9lEeyaYIzP8fvkgQ" name="addCoin" method="_BQZpgt9lEeyaYIzP8fvkgQ"/>
            <ownedOperation xmi:id="_A76AMd9lEeyaYIzP8fvkgQ" name="enableDoubleJump" method="_BQZpg99lEeyaYIzP8fvkgQ"/>
            <ownedOperation xmi:id="_A76nQN9lEeyaYIzP8fvkgQ" name="refreshJump" method="_BQZphN9lEeyaYIzP8fvkgQ"/>
            <ownedOperation xmi:id="_A77OUN9lEeyaYIzP8fvkgQ" name="canJump" method="_BQaQkN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A77OUd9lEeyaYIzP8fvkgQ" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A78ccN9lEeyaYIzP8fvkgQ" name="jump" method="_BQaQkt9lEeyaYIzP8fvkgQ"/>
            <ownedOperation xmi:id="_A78ccd9lEeyaYIzP8fvkgQ" name="unconditionalJump" method="_BQaQk99lEeyaYIzP8fvkgQ"/>
            <ownedOperation xmi:id="_A78cct9lEeyaYIzP8fvkgQ" name="superJump" method="_BQaQlN9lEeyaYIzP8fvkgQ"/>
            <ownedOperation xmi:id="_A79DgN9lEeyaYIzP8fvkgQ" name="setCrouching" method="_BQaQld9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A79Dgd9lEeyaYIzP8fvkgQ" name="flag">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A79qkN9lEeyaYIzP8fvkgQ" name="facingRight" method="_BQa3oN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A79qkd9lEeyaYIzP8fvkgQ" name="flag">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A79qkt9lEeyaYIzP8fvkgQ" name="canDoubleJump" method="_BQa3ot9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A7-RoN9lEeyaYIzP8fvkgQ" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_BNOZsN9lEeyaYIzP8fvkgQ" name="collision" method="_BQYbYt9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BNOZsd9lEeyaYIzP8fvkgQ" name="target" type="_BM7ewd9lEeyaYIzP8fvkgQ"/>
              <ownedParameter xmi:id="_BNOZst9lEeyaYIzP8fvkgQ" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_BNPAwN9lEeyaYIzP8fvkgQ" name="hitTop" method="_BQYbZd9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BNPAwd9lEeyaYIzP8fvkgQ" name="target" type="_BM7ewd9lEeyaYIzP8fvkgQ"/>
            </ownedOperation>
            <ownedOperation xmi:id="_BNPn0N9lEeyaYIzP8fvkgQ" name="hitLeft" method="_BQYbZ99lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BNPn0d9lEeyaYIzP8fvkgQ" name="target" type="_BM7ewd9lEeyaYIzP8fvkgQ"/>
            </ownedOperation>
            <ownedOperation xmi:id="_BNPn0t9lEeyaYIzP8fvkgQ" name="hitRight" method="_BQZCcN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BNPn099lEeyaYIzP8fvkgQ" name="target" type="_BM7ewd9lEeyaYIzP8fvkgQ"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_A8JQwN9lEeyaYIzP8fvkgQ" name="Portal">
            <generalization xmi:id="_BLcRAN9lEeyaYIzP8fvkgQ" general="_A6C_AN9lEeyaYIzP8fvkgQ"/>
            <ownedAttribute xmi:id="_BOlroN9lEeyaYIzP8fvkgQ" name="spawnTimer" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BOmSsd9lEeyaYIzP8fvkgQ" name="spawned" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BOm5wd9lEeyaYIzP8fvkgQ" name="win" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQcFwt9lEeyaYIzP8fvkgQ" name="Portal" specification="_A8LtAN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQcFw99lEeyaYIzP8fvkgQ" type="_A8JQwN9lEeyaYIzP8fvkgQ" direction="return"/>
              <language>java</language>
              <body>this.loadAnimationAndAdapt(&quot;./assets/textures/portal.png&quot;, 8, 3);&#xD;
		this.spawnTimer = System.nanoTime() / 1000000000L;&#xD;
		this.spawned = false;&#xD;
		this.model.setCurrentAnimation(1);&#xD;
		this.setScale(2f);&#xD;
		this.model.setAnimationSpeed(4f);&#xD;
		this.win = false;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQcFxN9lEeyaYIzP8fvkgQ" name="applyEffect" specification="_BLbp8N9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQcFxd9lEeyaYIzP8fvkgQ" name="player" type="_A7tL4N9lEeyaYIzP8fvkgQ"/>
              <language>java</language>
              <body>if (player.getCoins() &lt; 50) {&#xD;
			System.out.println(&quot;Portal Interaction, coins: &quot; + player.getCoins());&#xD;
			player.allert.setCurrentAnimation(2);&#xD;
		} else {&#xD;
			this.win = true;&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQcFxt9lEeyaYIzP8fvkgQ" name="updateAnimation" specification="_A8PXYN9lEeyaYIzP8fvkgQ">
              <language>java</language>
              <body>double currentTime = System.nanoTime() / 1000000000L;&#xD;
		&#xD;
		double delta = currentTime - this.spawnTimer;&#xD;
		&#xD;
		if (delta >= 2 &amp;&amp; !this.spawned) {&#xD;
			this.spawned = true;&#xD;
			this.model.setCurrentAnimation(0);&#xD;
		}&#xD;
		&#xD;
		this.model.updateAnimation(false);&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_A8LtAN9lEeyaYIzP8fvkgQ" name="Portal" method="_BQcFwt9lEeyaYIzP8fvkgQ">
              <eAnnotations xmi:id="_A8OwUN9lEeyaYIzP8fvkgQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_A8OwUd9lEeyaYIzP8fvkgQ" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_A8OwUt9lEeyaYIzP8fvkgQ" type="_A8JQwN9lEeyaYIzP8fvkgQ" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_A8PXYN9lEeyaYIzP8fvkgQ" name="updateAnimation" method="_BQcFxt9lEeyaYIzP8fvkgQ"/>
            <ownedOperation xmi:id="_BLbp8N9lEeyaYIzP8fvkgQ" name="applyEffect" method="_BQcFxN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BLbp8d9lEeyaYIzP8fvkgQ" name="player" type="_A7tL4N9lEeyaYIzP8fvkgQ"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_BRiR8N9lEeyaYIzP8fvkgQ" name="" memberEnd="_BRi5AN9lEeyaYIzP8fvkgQ _BOCSAN9lEeyaYIzP8fvkgQ">
            <ownedEnd xmi:id="_BRi5AN9lEeyaYIzP8fvkgQ" name="" type="_A4VHwN9lEeyaYIzP8fvkgQ" association="_BRiR8N9lEeyaYIzP8fvkgQ"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_BRjgEN9lEeyaYIzP8fvkgQ" name="" memberEnd="_BRjgEd9lEeyaYIzP8fvkgQ _BOEuQN9lEeyaYIzP8fvkgQ">
            <ownedEnd xmi:id="_BRjgEd9lEeyaYIzP8fvkgQ" name="" type="_A4VHwN9lEeyaYIzP8fvkgQ" association="_BRjgEN9lEeyaYIzP8fvkgQ"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_BRjgE99lEeyaYIzP8fvkgQ" name="" memberEnd="_BRjgFN9lEeyaYIzP8fvkgQ _BOFVUN9lEeyaYIzP8fvkgQ">
            <ownedEnd xmi:id="_BRjgFN9lEeyaYIzP8fvkgQ" name="" type="_A59fcN9lEeyaYIzP8fvkgQ" association="_BRjgE99lEeyaYIzP8fvkgQ"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_BRkHId9lEeyaYIzP8fvkgQ" name="" memberEnd="_BRkHIt9lEeyaYIzP8fvkgQ _BOF8Yd9lEeyaYIzP8fvkgQ">
            <ownedEnd xmi:id="_BRkHIt9lEeyaYIzP8fvkgQ" name="" type="_A6GpYN9lEeyaYIzP8fvkgQ" association="_BRkHId9lEeyaYIzP8fvkgQ"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_BRkuMd9lEeyaYIzP8fvkgQ" name="" memberEnd="_BRkuMt9lEeyaYIzP8fvkgQ _BOHKgd9lEeyaYIzP8fvkgQ">
            <ownedEnd xmi:id="_BRkuMt9lEeyaYIzP8fvkgQ" name="" type="_A6Lh4N9lEeyaYIzP8fvkgQ" association="_BRkuMd9lEeyaYIzP8fvkgQ"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_BRlVQd9lEeyaYIzP8fvkgQ" name="" memberEnd="_BRlVQt9lEeyaYIzP8fvkgQ _BOKN0N9lEeyaYIzP8fvkgQ">
            <ownedEnd xmi:id="_BRlVQt9lEeyaYIzP8fvkgQ" name="" type="_A6aLYN9lEeyaYIzP8fvkgQ" association="_BRlVQd9lEeyaYIzP8fvkgQ"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_BRmjYd9lEeyaYIzP8fvkgQ" name="" memberEnd="_BRmjYt9lEeyaYIzP8fvkgQ _BOb6oN9lEeyaYIzP8fvkgQ">
            <ownedEnd xmi:id="_BRmjYt9lEeyaYIzP8fvkgQ" name="" type="_A7tL4N9lEeyaYIzP8fvkgQ" association="_BRmjYd9lEeyaYIzP8fvkgQ"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_BRnKcd9lEeyaYIzP8fvkgQ" name="" memberEnd="_BRnKct9lEeyaYIzP8fvkgQ _BOchsd9lEeyaYIzP8fvkgQ">
            <ownedEnd xmi:id="_BRnKct9lEeyaYIzP8fvkgQ" name="" type="_A7tL4N9lEeyaYIzP8fvkgQ" association="_BRnKcd9lEeyaYIzP8fvkgQ"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_BRnxgd9lEeyaYIzP8fvkgQ" name="" memberEnd="_BRnxgt9lEeyaYIzP8fvkgQ _BOdIwd9lEeyaYIzP8fvkgQ">
            <ownedEnd xmi:id="_BRnxgt9lEeyaYIzP8fvkgQ" name="" type="_A7tL4N9lEeyaYIzP8fvkgQ" association="_BRnxgd9lEeyaYIzP8fvkgQ"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_BRoYkd9lEeyaYIzP8fvkgQ" name="" memberEnd="_BRoYkt9lEeyaYIzP8fvkgQ _BOdv0d9lEeyaYIzP8fvkgQ">
            <ownedEnd xmi:id="_BRoYkt9lEeyaYIzP8fvkgQ" name="" type="_A7tL4N9lEeyaYIzP8fvkgQ" association="_BRoYkd9lEeyaYIzP8fvkgQ"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_BRo_od9lEeyaYIzP8fvkgQ" name="" memberEnd="_BRo_ot9lEeyaYIzP8fvkgQ _BOeW4N9lEeyaYIzP8fvkgQ">
            <ownedEnd xmi:id="_BRo_ot9lEeyaYIzP8fvkgQ" name="" type="_A7tL4N9lEeyaYIzP8fvkgQ" association="_BRo_od9lEeyaYIzP8fvkgQ"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_A0lQMN9lEeyaYIzP8fvkgQ" name="rendering">
          <packagedElement xmi:type="uml:Class" xmi:id="_A8zYEN9lEeyaYIzP8fvkgQ" name="Camera">
            <ownedAttribute xmi:id="_BO1jQN9lEeyaYIzP8fvkgQ" name="position" type="_BLla8d9lEeyaYIzP8fvkgQ" association="_BRvGQd9lEeyaYIzP8fvkgQ"/>
            <ownedAttribute xmi:id="_BO2xYd9lEeyaYIzP8fvkgQ" name="projection" type="_BLyPQN9lEeyaYIzP8fvkgQ" association="_BRvtUd9lEeyaYIzP8fvkgQ"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQgXMN9lEeyaYIzP8fvkgQ" name="Camera" specification="_A82bYN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQgXMd9lEeyaYIzP8fvkgQ" name="width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BQgXMt9lEeyaYIzP8fvkgQ" name="height">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BQgXM99lEeyaYIzP8fvkgQ" type="_A8zYEN9lEeyaYIzP8fvkgQ" direction="return"/>
              <language>java</language>
              <body>this.position = new Vector3f(0, 0, 0);&#xD;
		this.projection = new Matrix4f().setOrtho2D(-width / 2, width / 2, -height / 2, height / 2);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQgXNN9lEeyaYIzP8fvkgQ" name="move" specification="_BNZY0N9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQgXNd9lEeyaYIzP8fvkgQ" name="position" type="_BLla8d9lEeyaYIzP8fvkgQ"/>
              <language>java</language>
              <body>this.position.add(position);&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_A82bYN9lEeyaYIzP8fvkgQ" name="Camera" method="_BQgXMN9lEeyaYIzP8fvkgQ">
              <eAnnotations xmi:id="_A83CcN9lEeyaYIzP8fvkgQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_A83Ccd9lEeyaYIzP8fvkgQ" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_A82bYd9lEeyaYIzP8fvkgQ" name="width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_A82bYt9lEeyaYIzP8fvkgQ" name="height">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_A83Cct9lEeyaYIzP8fvkgQ" type="_A8zYEN9lEeyaYIzP8fvkgQ" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_BNZY0N9lEeyaYIzP8fvkgQ" name="move" method="_BQgXNN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BNZY0d9lEeyaYIzP8fvkgQ" name="position" type="_BLla8d9lEeyaYIzP8fvkgQ"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_A8768N9lEeyaYIzP8fvkgQ" name="Engine">
            <ownedAttribute xmi:id="_BO4mkN9lEeyaYIzP8fvkgQ" name="window" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BO5Nod9lEeyaYIzP8fvkgQ" name="w" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BO50sd9lEeyaYIzP8fvkgQ" name="h" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BO6bwN9lEeyaYIzP8fvkgQ" name="camera" type="_A8zYEN9lEeyaYIzP8fvkgQ" association="_BRwUYd9lEeyaYIzP8fvkgQ"/>
            <ownedAttribute xmi:id="_BO7C0d9lEeyaYIzP8fvkgQ" name="ui" type="_A96yYN9lEeyaYIzP8fvkgQ" association="_BRw7cd9lEeyaYIzP8fvkgQ"/>
            <ownedAttribute xmi:id="_BO7p4d9lEeyaYIzP8fvkgQ" name="canRender" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BO8Q8d9lEeyaYIzP8fvkgQ" name="debug">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BO9fEN9lEeyaYIzP8fvkgQ" name="tileSet" visibility="private" type="_LLjYIN9yEeyaYIzP8fvkgQ" association="_BRxigd9lEeyaYIzP8fvkgQ"/>
            <ownedAttribute xmi:id="_BO-GId9lEeyaYIzP8fvkgQ" name="sky" visibility="private" type="_A-EjYN9lEeyaYIzP8fvkgQ" association="_BRyJkN9lEeyaYIzP8fvkgQ"/>
            <ownedAttribute xmi:id="_BO-tMN9lEeyaYIzP8fvkgQ" name="tileW" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BO-tMt9lEeyaYIzP8fvkgQ" name="tileH" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BO_UQd9lEeyaYIzP8fvkgQ" name="tileSize">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <interfaceRealization xmi:id="_BL488N9lEeyaYIzP8fvkgQ" client="_A8768N9lEeyaYIzP8fvkgQ" supplier="_A9NnwN9lEeyaYIzP8fvkgQ" contract="_A9NnwN9lEeyaYIzP8fvkgQ"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQhlVN9lEeyaYIzP8fvkgQ" name="Engine" specification="_A9DPsN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQhlVd9lEeyaYIzP8fvkgQ" name="window">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BQhlVt9lEeyaYIzP8fvkgQ" type="_A8768N9lEeyaYIzP8fvkgQ" direction="return">
                <name xsi:nil="true"/>
              </ownedParameter>
              <language>java</language>
              <body>// get a reference for the window to render in&#xD;
		this.window = window;&#xD;
		&#xD;
		// get the width and height of the window&#xD;
		IntBuffer width = BufferUtils.createIntBuffer(1);&#xD;
		IntBuffer height = BufferUtils.createIntBuffer(1);&#xD;
		glfwGetWindowSize(window, width, height);&#xD;
		this.w = width.get(0);&#xD;
		this.h = height.get(0);&#xD;
		&#xD;
		// set the OpenGL context as the window&#xD;
		glfwMakeContextCurrent(this.window);&#xD;
		&#xD;
		// create OpenGL capabilities&#xD;
		GL.createCapabilities();&#xD;
		&#xD;
		// enable rendering of 2D textures&#xD;
		glEnable(GL_TEXTURE_2D);&#xD;
		&#xD;
		// enable alpha blending&#xD;
		glEnable(GL_BLEND);&#xD;
		// define the blending function&#xD;
		glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);&#xD;
		&#xD;
		// create a new UI object&#xD;
		this.ui = new UI(this.w, this.h);&#xD;
		&#xD;
		// create a new camera&#xD;
		this.camera = new Camera(1280, 720);&#xD;
		&#xD;
		// set the clear color to grey&#xD;
		glClearColor(0.2f, 0.2f, 0.2f, 1.0f);&#xD;
		&#xD;
		// disable build in vsync&#xD;
		glfwSwapInterval(0);&#xD;
		&#xD;
		// load the skybox texture&#xD;
		this.sky = new Model();&#xD;
		this.sky.loadTextureAndAdapt(&quot;./assets/textures/blue.jpg&quot;);&#xD;
		this.sky.setScale(10f);&#xD;
		&#xD;
		// initialize flags to false&#xD;
		this.canRender = false;&#xD;
		this.debug = false;&#xD;
		&#xD;
		// set the tile size (64px x 64px)&#xD;
		this.tileSize = 64;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQiMYN9lEeyaYIzP8fvkgQ" name="loadTiles" specification="_A9Ed0N9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQiMYd9lEeyaYIzP8fvkgQ" name="texture">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BQiMYt9lEeyaYIzP8fvkgQ" name="w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BQiMY99lEeyaYIzP8fvkgQ" name="h">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>// create a new model&#xD;
		this.tileSet = new Tile();&#xD;
		// load the specified texture (the tileset)&#xD;
		this.tileSet.loadTileSet(texture);&#xD;
		&#xD;
		// store the tilemap columns and rows&#xD;
		this.tileW = w;&#xD;
		this.tileH = h;&#xD;
		&#xD;
		// adjust the scale to match the tile size (models are scaled by 256 by default)&#xD;
		this.tileSet.setScale(this.tileSize / 256f);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQiMZN9lEeyaYIzP8fvkgQ" name="setWindowSize" specification="_A9FE4N9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQiMZd9lEeyaYIzP8fvkgQ" name="width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BQiMZt9lEeyaYIzP8fvkgQ" name="height">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>// update the width and height reference in the engine&#xD;
		// without this update, it's possible to see in effect the camera frostum culling of the tiles&#xD;
		this.w = width;&#xD;
		this.h = height;&#xD;
		&#xD;
		// create a new projection matrix for the camera with the new width and height&#xD;
		this.camera.setProjection(width, height);&#xD;
		&#xD;
		// update the reference for the UI to calculate the position of the UI elements&#xD;
		this.ui.setWidth(this.w);&#xD;
		this.ui.setHeight(this.h);&#xD;
		&#xD;
		// update the OpenGL framebuffer size to render to the new window&#xD;
		glViewport(0, 0, width, height);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQiMZ99lEeyaYIzP8fvkgQ" name="render" specification="_BNb1EN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQiMaN9lEeyaYIzP8fvkgQ" name="entityBuffer" type="_BKvtcN9lEeyaYIzP8fvkgQ"/>
              <ownedParameter xmi:id="_BQiMad9lEeyaYIzP8fvkgQ" name="world">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BQiMat9lEeyaYIzP8fvkgQ" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BQiMa99lEeyaYIzP8fvkgQ" name="background">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BQiMbN9lEeyaYIzP8fvkgQ" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BQiMbd9lEeyaYIzP8fvkgQ" direction="return">
                <name xsi:nil="true"/>
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <language>java</language>
              <body>// check the time before rendering&#xD;
		double t1 = System.nanoTime();&#xD;
		&#xD;
		// specify what part of the framebuffer to clear at every frame and clear it&#xD;
		glClear(GL_COLOR_BUFFER_BIT);&#xD;
		&#xD;
		&#xD;
		// fake load to test rendering times&#xD;
		try {&#xD;
			Thread.sleep(0); // the number in parentesis is the number of ms added to render each frame&#xD;
		} catch (InterruptedException e) {&#xD;
			System.out.println(e);&#xD;
		}&#xD;
		&#xD;
		// ----------------- SKYBOX --------------------&#xD;
		&#xD;
		// store the current camera position&#xD;
		Vector3f cameraPosition = camera.getPosition();&#xD;
		// place the camera at the center&#xD;
		camera.setPosition(new Vector3f(0, 0, 0));&#xD;
		// render the skybox&#xD;
		this.sky.render(camera, false);&#xD;
		// restore the previous camera position&#xD;
		camera.setPosition(cameraPosition);&#xD;
		// this process allows the sky to remain at the center of the camera, no matter how it moves&#xD;
		&#xD;
		&#xD;
		// ------------------ TILES --------------------&#xD;
		&#xD;
		// render the background tiles&#xD;
		this.renderTiles(background);&#xD;
		// render the foreground tiles&#xD;
		this.renderTiles(world);&#xD;
		&#xD;
		&#xD;
		// ------------------ ENTITIES -----------------&#xD;
		&#xD;
		// variable to store the index of the player in the entityBuffer&#xD;
		int playerIndex = -1;&#xD;
		&#xD;
		// render all the entities&#xD;
		for (int i = 0; i &lt; entityBuffer.size(); i++) {&#xD;
			// render the model of the specified entity&#xD;
			entityBuffer.get(i).model.render(this.camera, this.debug);&#xD;
			&#xD;
			// if the current entity is the player, render the allert box as well&#xD;
			if (entityBuffer.get(i) instanceof Player) {&#xD;
				// cast the Entity to Player&#xD;
				Player player = (Player)entityBuffer.get(i);&#xD;
				// render the allert box&#xD;
				player.allert.render(this.camera, this.debug);&#xD;
				// store the position of the player in the entityBuffer&#xD;
				playerIndex = i;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		&#xD;
		// ------------------ UI ----------------------&#xD;
		&#xD;
		// render the UI elements&#xD;
		this.ui.renderUI(this.camera, (Player)entityBuffer.get(playerIndex));&#xD;
		&#xD;
		// swap buffers for the next render&#xD;
		glfwSwapBuffers(this.window);&#xD;
		&#xD;
		// now that it rendered once, it waits for the next opportunity to render again&#xD;
		this.canRender = false;&#xD;
		&#xD;
		//  check the current time&#xD;
		double t2 = System.nanoTime();&#xD;
		&#xD;
		// return the elapsed time for rendering&#xD;
		return(Math.round(((t2 - t1) / (double)1000000L) * (double)100) / (double)100);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQizcN9lEeyaYIzP8fvkgQ" name="renderTiles" specification="_A9GTAN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQizcd9lEeyaYIzP8fvkgQ" name="world">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BQizct9lEeyaYIzP8fvkgQ" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>// scroll through all the tiles&#xD;
		for (int i = 0; i &lt; world.length; i++) {&#xD;
			for (int j = 0; j &lt; world[0].length; j++) {&#xD;
				// if it's a valid tile to render&#xD;
				if (world[i][j] >= 0) {&#xD;
					// get the position of the tile in the world in pixels&#xD;
					int positionX = i * this.tileSize - (this.tileSize * (world.length / 2));&#xD;
					int positionY = j * this.tileSize - (this.tileSize * (world[0].length / 2));&#xD;
				&#xD;
					// check if the current tile is visible by the camera&#xD;
					if (positionX - this.tileSize / 2 >= -this.camera.getPosition().x + this.w / 2 ||&#xD;
						positionX + this.tileSize / 2 &lt;= -this.camera.getPosition().x - this.w / 2 ||&#xD;
						positionY - this.tileSize / 2 >= -this.camera.getPosition().y + this.h / 2 ||&#xD;
						positionY + this.tileSize / 2 &lt;= -this.camera.getPosition().y - this.h / 2) {&#xD;
					}&#xD;
					// render only if the tile is within the camera frostum&#xD;
					else {&#xD;
						// change the UV to display the correct tile in the tileset&#xD;
						this.tileSet.changeTileUV(world[i][j], this.tileW, this.tileH);&#xD;
						// set where to render the tile&#xD;
						this.tileSet.setPosition(positionX, positionY);&#xD;
						// render the tile&#xD;
						this.tileSet.render(this.camera, this.debug);&#xD;
					}					&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQizc99lEeyaYIzP8fvkgQ" name="enableRender" specification="_A9G6Ed9lEeyaYIzP8fvkgQ">
              <language>java</language>
              <body>this.canRender = true;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQizdN9lEeyaYIzP8fvkgQ" name="canRender" specification="_A9HhIN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQizdd9lEeyaYIzP8fvkgQ" direction="return">
                <name xsi:nil="true"/>
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>return(this.canRender);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQizdt9lEeyaYIzP8fvkgQ" name="getCamera" specification="_A9IIMN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQizd99lEeyaYIzP8fvkgQ" type="_A8zYEN9lEeyaYIzP8fvkgQ" direction="return">
                <name xsi:nil="true"/>
              </ownedParameter>
              <language>java</language>
              <body>return(this.camera);&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_A9DPsN9lEeyaYIzP8fvkgQ" name="Engine" method="_BQhlVN9lEeyaYIzP8fvkgQ">
              <eAnnotations xmi:id="_A9D2wd9lEeyaYIzP8fvkgQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_A9D2wt9lEeyaYIzP8fvkgQ" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_A9D2wN9lEeyaYIzP8fvkgQ" name="window">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
              </ownedParameter>
              <ownedParameter xmi:id="_A9D2w99lEeyaYIzP8fvkgQ" type="_A8768N9lEeyaYIzP8fvkgQ" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_A9Ed0N9lEeyaYIzP8fvkgQ" name="loadTiles" method="_BQiMYN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A9Ed0d9lEeyaYIzP8fvkgQ" name="texture">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_A9Ed0t9lEeyaYIzP8fvkgQ" name="w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_A9Ed099lEeyaYIzP8fvkgQ" name="h">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A9FE4N9lEeyaYIzP8fvkgQ" name="setWindowSize" method="_BQiMZN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A9FE4d9lEeyaYIzP8fvkgQ" name="width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_A9FE4t9lEeyaYIzP8fvkgQ" name="height">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A9GTAN9lEeyaYIzP8fvkgQ" name="renderTiles" visibility="private" method="_BQizcN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A9GTAd9lEeyaYIzP8fvkgQ" name="world">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_A9GTAt9lEeyaYIzP8fvkgQ" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A9G6Ed9lEeyaYIzP8fvkgQ" name="enableRender" method="_BQizc99lEeyaYIzP8fvkgQ"/>
            <ownedOperation xmi:id="_A9HhIN9lEeyaYIzP8fvkgQ" name="canRender" method="_BQizdN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A9HhId9lEeyaYIzP8fvkgQ" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A9IIMN9lEeyaYIzP8fvkgQ" name="getCamera" method="_BQizdt9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BL6LEN9lEeyaYIzP8fvkgQ" type="_A8zYEN9lEeyaYIzP8fvkgQ" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_BNb1EN9lEeyaYIzP8fvkgQ" name="render" method="_BQiMZ99lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BNb1Ed9lEeyaYIzP8fvkgQ" name="entityBuffer" type="_BKvtcN9lEeyaYIzP8fvkgQ"/>
              <ownedParameter xmi:id="_BNb1Et9lEeyaYIzP8fvkgQ" name="world">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BNdDMN9lEeyaYIzP8fvkgQ" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BNb1E99lEeyaYIzP8fvkgQ" name="background">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BNdDMt9lEeyaYIzP8fvkgQ" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BNb1FN9lEeyaYIzP8fvkgQ" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_A9NnwN9lEeyaYIzP8fvkgQ" name="IEngine">
            <ownedAttribute xmi:id="_A9QrEN9lEeyaYIzP8fvkgQ" name="camera" type="_A8zYEN9lEeyaYIzP8fvkgQ" isReadOnly="true" association="_BRhD0N9lEeyaYIzP8fvkgQ"/>
            <ownedAttribute xmi:id="_A9R5Md9lEeyaYIzP8fvkgQ" name="tileSize">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_A9OO0N9lEeyaYIzP8fvkgQ" name="loadTiles">
              <ownedParameter xmi:id="_A9OO0d9lEeyaYIzP8fvkgQ" name="texture">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_A9O14N9lEeyaYIzP8fvkgQ" name="w">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_A9O14d9lEeyaYIzP8fvkgQ" name="h">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A9O14t9lEeyaYIzP8fvkgQ" name="setWindowSize">
              <ownedParameter xmi:id="_A9Pc8N9lEeyaYIzP8fvkgQ" name="width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_A9Pc8d9lEeyaYIzP8fvkgQ" name="height">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A9QEAN9lEeyaYIzP8fvkgQ" name="enableRender"/>
            <ownedOperation xmi:id="_A9QEAd9lEeyaYIzP8fvkgQ" name="canRender">
              <ownedParameter xmi:id="_A9QEAt9lEeyaYIzP8fvkgQ" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A9RSIN9lEeyaYIzP8fvkgQ" name="getDebug">
              <ownedParameter xmi:id="_A9RSId9lEeyaYIzP8fvkgQ" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A9RSIt9lEeyaYIzP8fvkgQ" name="setDebug">
              <ownedParameter xmi:id="_A9R5MN9lEeyaYIzP8fvkgQ" name="flag">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_BNffcN9lEeyaYIzP8fvkgQ" name="render">
              <ownedParameter xmi:id="_BNffcd9lEeyaYIzP8fvkgQ" name="entityBuffer" type="_BKvtcN9lEeyaYIzP8fvkgQ"/>
              <ownedParameter xmi:id="_BNgGgN9lEeyaYIzP8fvkgQ" name="world">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BNgtkd9lEeyaYIzP8fvkgQ" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BNgGgd9lEeyaYIzP8fvkgQ" name="background">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BNhUod9lEeyaYIzP8fvkgQ" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BNgGgt9lEeyaYIzP8fvkgQ" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_A9X_0N9lEeyaYIzP8fvkgQ" name="Shader">
            <ownedAttribute xmi:id="_BPC-od9lEeyaYIzP8fvkgQ" name="program" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BPDlsd9lEeyaYIzP8fvkgQ" name="vertID" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BPEMwd9lEeyaYIzP8fvkgQ" name="fragID" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQkopN9lEeyaYIzP8fvkgQ" name="Shader" specification="_A9ZN8N9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQkopd9lEeyaYIzP8fvkgQ" name="filename">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BQkopt9lEeyaYIzP8fvkgQ" type="_A9X_0N9lEeyaYIzP8fvkgQ" direction="return"/>
              <language>java</language>
              <body>this.program = glCreateProgram();&#xD;
		&#xD;
		this.vertID = glCreateShader(GL_VERTEX_SHADER);&#xD;
		&#xD;
		glShaderSource(this.vertID, readFile(filename + &quot;.vert&quot;));&#xD;
		&#xD;
		glCompileShader(this.vertID);&#xD;
		&#xD;
		if (glGetShaderi(this.vertID, GL_COMPILE_STATUS) != 1) {&#xD;
			System.err.println(glGetShaderInfoLog(this.vertID));&#xD;
			System.exit(1);&#xD;
		}&#xD;
		&#xD;
		&#xD;
		this.fragID = glCreateShader(GL_FRAGMENT_SHADER);&#xD;
		&#xD;
		glShaderSource(this.fragID, readFile(filename + &quot;.frag&quot;));&#xD;
		&#xD;
		glCompileShader(this.fragID);&#xD;
		&#xD;
		if (glGetShaderi(this.fragID, GL_COMPILE_STATUS) != 1) {&#xD;
			System.err.println(glGetShaderInfoLog(this.fragID));&#xD;
			System.exit(1);&#xD;
		}&#xD;
		&#xD;
		&#xD;
		&#xD;
		glAttachShader(this.program, this.vertID);&#xD;
		glAttachShader(this.program, this.fragID);&#xD;
		&#xD;
		&#xD;
		glBindAttribLocation(this.program, 0, &quot;vertices&quot;);&#xD;
		glBindAttribLocation(this.program, 1, &quot;textures&quot;);&#xD;
		&#xD;
		glLinkProgram(this.program);&#xD;
		&#xD;
		if (glGetProgrami(this.program, GL_LINK_STATUS) != 1) {&#xD;
			System.err.println(glGetProgramInfoLog(this.program));&#xD;
			System.exit(1);&#xD;
		}&#xD;
		&#xD;
		glValidateProgram(this.program);&#xD;
		&#xD;
		if (glGetProgrami(this.program, GL_VALIDATE_STATUS) != 1) {&#xD;
			System.err.println(glGetProgramInfoLog(this.program));&#xD;
			System.exit(1);&#xD;
		}	&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQlPsN9lEeyaYIzP8fvkgQ" name="setUniform" specification="_A9Z1AN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQlPsd9lEeyaYIzP8fvkgQ" name="name">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BQlPst9lEeyaYIzP8fvkgQ" name="value">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>int location = glGetUniformLocation(this.program, name);&#xD;
		&#xD;
		if (location != -1) {&#xD;
			glUniform1i(location, value);&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQlPs99lEeyaYIzP8fvkgQ" name="setUniform" specification="_A9acEN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQlPtN9lEeyaYIzP8fvkgQ" name="name">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BQlPtd9lEeyaYIzP8fvkgQ" name="value">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <language>java</language>
              <body>int location = glGetUniformLocation(this.program, name);&#xD;
		&#xD;
		if (location != -1) {&#xD;
			glUniform1f(location, value);&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQlPtt9lEeyaYIzP8fvkgQ" name="setUniform" specification="_BNiiwN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQlPt99lEeyaYIzP8fvkgQ" name="name">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BQlPuN9lEeyaYIzP8fvkgQ" name="value" type="_BLyPQN9lEeyaYIzP8fvkgQ"/>
              <language>java</language>
              <body>int location = glGetUniformLocation(this.program, name);&#xD;
		&#xD;
		FloatBuffer buffer = BufferUtils.createFloatBuffer(4 * 4);&#xD;
		&#xD;
		value.get(buffer);&#xD;
		&#xD;
		if (location != -1) {&#xD;
			glUniformMatrix4fv(location, false, buffer);&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQl2wN9lEeyaYIzP8fvkgQ" name="bind" specification="_A9c4UN9lEeyaYIzP8fvkgQ">
              <language>java</language>
              <body>glUseProgram(this.program);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQl2wd9lEeyaYIzP8fvkgQ" name="readFile" specification="_A9dfYN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQl2wt9lEeyaYIzP8fvkgQ" name="filename">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BQl2w99lEeyaYIzP8fvkgQ" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>StringBuilder string = new StringBuilder();&#xD;
		&#xD;
		BufferedReader br;&#xD;
		&#xD;
		try {&#xD;
			br = new BufferedReader(new FileReader(new File(&quot;./assets/shaders/&quot; + filename)));&#xD;
			&#xD;
			String line;&#xD;
			&#xD;
			while ((line = br.readLine()) != null) {&#xD;
				string.append(line);&#xD;
				string.append(&quot;\n&quot;);&#xD;
			}&#xD;
			&#xD;
			br.close();&#xD;
			&#xD;
		} catch (IOException e) {&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
		&#xD;
		return(string.toString());&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_A9ZN8N9lEeyaYIzP8fvkgQ" name="Shader" method="_BQkopN9lEeyaYIzP8fvkgQ">
              <eAnnotations xmi:id="_A9ZN8t9lEeyaYIzP8fvkgQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_A9ZN899lEeyaYIzP8fvkgQ" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_A9ZN8d9lEeyaYIzP8fvkgQ" name="filename">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_A9ZN9N9lEeyaYIzP8fvkgQ" type="_A9X_0N9lEeyaYIzP8fvkgQ" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_A9Z1AN9lEeyaYIzP8fvkgQ" name="setUniform" method="_BQlPsN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A9Z1Ad9lEeyaYIzP8fvkgQ" name="name">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_A9Z1At9lEeyaYIzP8fvkgQ" name="value">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A9acEN9lEeyaYIzP8fvkgQ" name="setUniform" method="_BQlPs99lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A9bDIN9lEeyaYIzP8fvkgQ" name="name">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_A9bDId9lEeyaYIzP8fvkgQ" name="value">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A9c4UN9lEeyaYIzP8fvkgQ" name="bind" method="_BQl2wN9lEeyaYIzP8fvkgQ"/>
            <ownedOperation xmi:id="_A9dfYN9lEeyaYIzP8fvkgQ" name="readFile" visibility="private" method="_BQl2wd9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A9dfYd9lEeyaYIzP8fvkgQ" name="filename">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_A9dfYt9lEeyaYIzP8fvkgQ" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_BNiiwN9lEeyaYIzP8fvkgQ" name="setUniform" method="_BQlPtt9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BNiiwd9lEeyaYIzP8fvkgQ" name="name">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BNiiwt9lEeyaYIzP8fvkgQ" name="value" type="_BLyPQN9lEeyaYIzP8fvkgQ"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_A9fUkN9lEeyaYIzP8fvkgQ" name="Structure">
            <ownedAttribute xmi:id="_BPEz0N9lEeyaYIzP8fvkgQ" name="tiles" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BPFa4d9lEeyaYIzP8fvkgQ" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BPGpAN9lEeyaYIzP8fvkgQ" name="effect" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BPGpAd9lEeyaYIzP8fvkgQ" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BPHQEd9lEeyaYIzP8fvkgQ" name="hitboxes" type="_A6vikN9lEeyaYIzP8fvkgQ" isOrdered="true" isReadOnly="true" association="_BRzXsN9lEeyaYIzP8fvkgQ">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BPH3Id9lEeyaYIzP8fvkgQ" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BPJFQN9lEeyaYIzP8fvkgQ" name="tileSize" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQmd1d9lEeyaYIzP8fvkgQ" name="Structure" specification="_A9jmAN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQmd1t9lEeyaYIzP8fvkgQ" type="_A9fUkN9lEeyaYIzP8fvkgQ" direction="return"/>
              <language>java</language>
              <body>this.tiles = null;&#xD;
		this.effect = null;&#xD;
		this.hitboxes = new ArrayList&lt;Hitbox>();&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQnE4N9lEeyaYIzP8fvkgQ" name="loadStructure" specification="_A9k0IN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQnE4d9lEeyaYIzP8fvkgQ" name="file">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>try {&#xD;
			File input = new File(file);&#xD;
			&#xD;
			Scanner reader = new Scanner(input);&#xD;
			&#xD;
			int rows = 0;&#xD;
			int columns = 0;&#xD;
			&#xD;
			while (reader.hasNextLine()) {&#xD;
				String line = reader.nextLine();&#xD;
				&#xD;
				String[] values = line.split(&quot;\t&quot;);&#xD;
				&#xD;
				List&lt;String> listValues = new LinkedList&lt;String>(Arrays.asList(values));;&#xD;
				 &#xD;
				for (int i = 0; i &lt; listValues.size(); i++) {&#xD;
					if (!isNumeric(listValues.get(i))) {&#xD;
						listValues.remove(i);&#xD;
						i--;&#xD;
					}&#xD;
				}&#xD;
				&#xD;
				columns = listValues.size();&#xD;
				rows++;&#xD;
			}&#xD;
			reader.close();&#xD;
			&#xD;
			reader = new Scanner(input);&#xD;
			&#xD;
			this.tiles = new int[columns][rows];&#xD;
			&#xD;
			int currentRow = 0;&#xD;
			&#xD;
			while (reader.hasNextLine()) {&#xD;
				String line = reader.nextLine();&#xD;
				&#xD;
				String[] values = line.split(&quot;\t&quot;);&#xD;
				&#xD;
				List&lt;String> listValues = new LinkedList&lt;String>(Arrays.asList(values));;&#xD;
				 &#xD;
				for (int i = 0; i &lt; listValues.size(); i++) {&#xD;
					if (!isNumeric(listValues.get(i))) {&#xD;
						listValues.remove(i);&#xD;
						&#xD;
						if (i != 0) {&#xD;
							i--;&#xD;
						}&#xD;
					}&#xD;
					&#xD;
					this.tiles[i][(rows - 1) - currentRow] = Integer.parseInt(listValues.get(i));&#xD;
				}&#xD;
		&#xD;
				currentRow++;&#xD;
			}&#xD;
			reader.close();&#xD;
			&#xD;
			&#xD;
		} catch (FileNotFoundException e) {&#xD;
			System.out.println(&quot;File Not Found: &quot; + e);&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQnE4t9lEeyaYIzP8fvkgQ" name="loadStructureWithHitbox" specification="_A9k0It9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQnE499lEeyaYIzP8fvkgQ" name="file">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BQnE5N9lEeyaYIzP8fvkgQ" name="size">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>this.tileSize = size;&#xD;
		&#xD;
		try {&#xD;
			File input = new File(file);&#xD;
			&#xD;
			Scanner reader = new Scanner(input);&#xD;
			&#xD;
			int rows = 0;&#xD;
			int columns = 0;&#xD;
			&#xD;
			while (reader.hasNextLine()) {&#xD;
				String line = reader.nextLine();&#xD;
				&#xD;
				String[] values = line.split(&quot;\t&quot;);&#xD;
				&#xD;
				List&lt;String> listValues = new LinkedList&lt;String>(Arrays.asList(values));;&#xD;
				&#xD;
				for (int i = 0; i &lt; listValues.size(); i++) {&#xD;
					String[] components = listValues.get(i).split(&quot; &quot;);&#xD;
&#xD;
					if (!isNumeric(components[0])) {&#xD;
						listValues.remove(i);&#xD;
						i--;&#xD;
					}&#xD;
				}&#xD;
				&#xD;
				columns = listValues.size();&#xD;
				rows++;&#xD;
			}&#xD;
			reader.close();&#xD;
			&#xD;
			reader = new Scanner(input);&#xD;
			&#xD;
			this.tiles = new int[columns][rows];&#xD;
			this.effect = new char[columns][rows];&#xD;
			&#xD;
			int currentRow = 0;&#xD;
			&#xD;
			while (reader.hasNextLine()) {&#xD;
				String line = reader.nextLine();&#xD;
				&#xD;
				String[] values = line.split(&quot;\t&quot;);&#xD;
				&#xD;
				List&lt;String> listValues = new LinkedList&lt;String>(Arrays.asList(values));;&#xD;
				 &#xD;
				for (int i = 0; i &lt; listValues.size(); i++) {&#xD;
					String[] components = listValues.get(i).split(&quot; &quot;);&#xD;
					&#xD;
					if (!isNumeric(components[0])) {&#xD;
						listValues.remove(i);&#xD;
						&#xD;
						if (i != 0) {&#xD;
							i--;&#xD;
						}&#xD;
					}&#xD;
					&#xD;
					components = listValues.get(i).split(&quot; &quot;);&#xD;
					&#xD;
					this.tiles[i][(rows - 1) - currentRow] = Integer.parseInt(components[0]);&#xD;
					&#xD;
					if (components.length > 1) {&#xD;
						this.effect[i][(rows - 1) - currentRow] = components[1].charAt(0);&#xD;
					} else {&#xD;
						this.effect[i][(rows - 1) - currentRow] = 'n';&#xD;
					}&#xD;
					&#xD;
//					int number = Integer.parseInt(listValues.get(i));&#xD;
//					if (Integer.parseInt(listValues.get(i)) > tilemapSize * tilemapSize) {&#xD;
//						&#xD;
//					}&#xD;
					&#xD;
				&#xD;
//					this.tiles[i][(rows - 1) - currentRow] = Integer.parseInt(components[0]);&#xD;
				}&#xD;
&#xD;
				boolean newHitbox = false;&#xD;
				&#xD;
				int consecutive = 0;&#xD;
				&#xD;
				int starting = 0;&#xD;
				&#xD;
				Hitbox hitbox = null;&#xD;
				&#xD;
				for (int i = 0; i &lt; this.tiles.length; i++) {&#xD;
					&#xD;
					if (this.tiles[i][(rows - 1) - currentRow] != -1) {&#xD;
//						System.out.println(&quot;Value: &quot; + this.tiles[i][(rows - 1) - currentRow]);&#xD;
						consecutive++;&#xD;
//						System.out.println(&quot;Consecutive: &quot; + consecutive);&#xD;
						&#xD;
						if (newHitbox == false) {&#xD;
							newHitbox = true;&#xD;
							starting = i;&#xD;
						}&#xD;
						&#xD;
						hitbox = new Hitbox();&#xD;
						&#xD;
						float width = (size * (consecutive + starting) - size / 2) -&#xD;
									  (size * starting - size / 2);&#xD;
						&#xD;
						float height = (size * (rows - currentRow) - size / 2) -&#xD;
									   (size * (rows - currentRow - 1) - size / 2);&#xD;
						&#xD;
						float positionX = (size * starting - size / 2) + width / 2;&#xD;
						float positionY = (size * (rows - currentRow - 1) - size / 2) + height / 2;&#xD;
						&#xD;
						hitbox.setPosition(positionX, positionY);&#xD;
						hitbox.setBBHeight(height);&#xD;
						hitbox.setBBWidth(width);&#xD;
						&#xD;
						if (this.effect[i][(rows - 1) - currentRow] == 'J') {&#xD;
							hitbox.setSpecialJump(true);&#xD;
						}&#xD;
					}&#xD;
					&#xD;
					if (this.tiles[i][(rows - 1) - currentRow] == -1 || i == this.tiles.length - 1) {&#xD;
						newHitbox = false;&#xD;
						&#xD;
						if (consecutive != 0) {&#xD;
							this.hitboxes.add(hitbox);&#xD;
//							System.out.println(&quot;Store Hitbox&quot;);&#xD;
//							System.out.println(&quot;0(&quot; + hitboxes.get(hitboxes.size() - 1).getX0() + &quot;, &quot; + hitboxes.get(hitboxes.size() - 1).getY0() + &quot;)&quot;);&#xD;
//							System.out.println(&quot;2(&quot; + hitboxes.get(hitboxes.size() - 1).getX2() + &quot;, &quot; + hitboxes.get(hitboxes.size() - 1).getY2() + &quot;)&quot;);&#xD;
						}&#xD;
						&#xD;
						consecutive = 0;&#xD;
						starting = 0;&#xD;
					}&#xD;
				}&#xD;
		&#xD;
				currentRow++;&#xD;
			}&#xD;
			&#xD;
			reader.close();&#xD;
			&#xD;
			&#xD;
		} catch (FileNotFoundException e) {&#xD;
			System.out.println(&quot;File Not Found: &quot; + e);&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQnr8N9lEeyaYIzP8fvkgQ" name="applyStructure" specification="_A9mCQN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQnr8d9lEeyaYIzP8fvkgQ" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BQnr8t9lEeyaYIzP8fvkgQ" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BQnr899lEeyaYIzP8fvkgQ" name="world">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BQnr9N9lEeyaYIzP8fvkgQ" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>for (int i = x; i &lt; this.tiles.length + x &amp;&amp; i &lt; world.length; i++) {&#xD;
			for (int j = y; j &lt; this.tiles[0].length + y &amp;&amp; i &lt; world[0].length; j++) {&#xD;
				if (this.tiles[i - x][j - y] != -1) {&#xD;
					world[world.length / 2 + i][world[0].length / 2 + j] = this.tiles[i - x][j - y];&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQoTAN9lEeyaYIzP8fvkgQ" name="applyStructureWithHitbox" specification="_BNkX8N9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQoTAd9lEeyaYIzP8fvkgQ" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BQoTAt9lEeyaYIzP8fvkgQ" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BQoTA99lEeyaYIzP8fvkgQ" name="world">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BQoTBN9lEeyaYIzP8fvkgQ" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BQoTBd9lEeyaYIzP8fvkgQ" name="worldHitboxes" type="_BKvtcN9lEeyaYIzP8fvkgQ"/>
              <language>java</language>
              <body>for (int i = x; i &lt; this.tiles.length + x &amp;&amp; i &lt; world.length; i++) {&#xD;
			for (int j = y; j &lt; this.tiles[0].length + y &amp;&amp; i &lt; world[0].length; j++) {&#xD;
				if (this.tiles[i - x][j - y] != -1) {&#xD;
					world[world.length / 2 + i][world[0].length / 2 + j] = this.tiles[i - x][j - y];&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		for (int i = 0; i &lt; this.hitboxes.size(); i++) {&#xD;
			Hitbox current = this.hitboxes.get(i);&#xD;
//			current.setX0(current.getX0() + (this.tileSize * x));&#xD;
//			current.setY0(current.getY0() + (this.tileSize * y));&#xD;
//			current.setX2(current.getX2() + (this.tileSize * x));&#xD;
//			current.setY2(current.getY2() + (this.tileSize * y));&#xD;
			&#xD;
			current.setPosition(current.getX() + (this.tileSize * x), current.getY() + (this.tileSize * y));&#xD;
			&#xD;
			worldHitboxes.add(current);&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQo6EN9lEeyaYIzP8fvkgQ" name="isNumeric" specification="_A9nQYN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQo6Ed9lEeyaYIzP8fvkgQ" name="str">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BQo6Et9lEeyaYIzP8fvkgQ" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>try {  &#xD;
			Double.parseDouble(str);  &#xD;
			return true;&#xD;
		} catch(NumberFormatException e){  &#xD;
			return false;  &#xD;
		}  &#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_A9jmAN9lEeyaYIzP8fvkgQ" name="Structure" method="_BQmd1d9lEeyaYIzP8fvkgQ">
              <eAnnotations xmi:id="_A9jmAd9lEeyaYIzP8fvkgQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_A9jmAt9lEeyaYIzP8fvkgQ" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_A9jmA99lEeyaYIzP8fvkgQ" type="_A9fUkN9lEeyaYIzP8fvkgQ" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_A9k0IN9lEeyaYIzP8fvkgQ" name="loadStructure" method="_BQnE4N9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A9k0Id9lEeyaYIzP8fvkgQ" name="file">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A9k0It9lEeyaYIzP8fvkgQ" name="loadStructureWithHitbox" method="_BQnE4t9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A9lbMN9lEeyaYIzP8fvkgQ" name="file">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_A9lbMd9lEeyaYIzP8fvkgQ" name="size">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A9mCQN9lEeyaYIzP8fvkgQ" name="applyStructure" method="_BQnr8N9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A9mCQd9lEeyaYIzP8fvkgQ" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_A9mCQt9lEeyaYIzP8fvkgQ" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_A9mCQ99lEeyaYIzP8fvkgQ" name="world">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_A9mCRN9lEeyaYIzP8fvkgQ" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A9nQYN9lEeyaYIzP8fvkgQ" name="isNumeric" isStatic="true" method="_BQo6EN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A9nQYd9lEeyaYIzP8fvkgQ" name="str">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_A9nQYt9lEeyaYIzP8fvkgQ" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_BNkX8N9lEeyaYIzP8fvkgQ" name="applyStructureWithHitbox" method="_BQoTAN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BNkX8d9lEeyaYIzP8fvkgQ" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BNkX8t9lEeyaYIzP8fvkgQ" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BNkX899lEeyaYIzP8fvkgQ" name="world">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BNk_AN9lEeyaYIzP8fvkgQ" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BNkX9N9lEeyaYIzP8fvkgQ" name="worldHitboxes" type="_BKvtcN9lEeyaYIzP8fvkgQ"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_A9psoN9lEeyaYIzP8fvkgQ" name="Texture">
            <ownedAttribute xmi:id="_BPKTYN9lEeyaYIzP8fvkgQ" name="id" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BPK6cd9lEeyaYIzP8fvkgQ" name="width" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BPLhgt9lEeyaYIzP8fvkgQ" name="height" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BPMvod9lEeyaYIzP8fvkgQ" name="rawPixels" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BPMvot9lEeyaYIzP8fvkgQ" value="*"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQphIt9lEeyaYIzP8fvkgQ" name="Texture" specification="_A9waUN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQphI99lEeyaYIzP8fvkgQ" type="_A9psoN9lEeyaYIzP8fvkgQ" direction="return"/>
              <language>java</language>
              <body>this.id = glGenTextures();&#xD;
		&#xD;
		glBindTexture(GL_TEXTURE_2D, this.id);&#xD;
		&#xD;
		glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST);&#xD;
		glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST);&#xD;
		&#xD;
		glBindTexture(GL_TEXTURE_2D, 0);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQphJN9lEeyaYIzP8fvkgQ" name="bind" specification="_A9xocN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQphJd9lEeyaYIzP8fvkgQ" name="sampler">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>if (sampler >= 0 &amp;&amp; sampler &lt;= 31) {&#xD;
			glActiveTexture(GL_TEXTURE0 + sampler);&#xD;
			glBindTexture(GL_TEXTURE_2D, id);&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQqIMN9lEeyaYIzP8fvkgQ" name="loadImage" specification="_A9xoct9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQqIMd9lEeyaYIzP8fvkgQ" name="filename">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>BufferedImage bi;&#xD;
		&#xD;
		try {&#xD;
			bi = ImageIO.read(new File(filename));&#xD;
			this.width = bi.getWidth();&#xD;
			this.height = bi.getHeight();&#xD;
			&#xD;
			this.rawPixels = new int[width * height * 4];&#xD;
			&#xD;
			this.rawPixels = bi.getRGB(0, 0, width, height, null, 0, width);&#xD;
			&#xD;
			ByteBuffer pixels = BufferUtils.createByteBuffer(width * height * 4);&#xD;
			&#xD;
			for (int i = 0; i &lt; height; i++) {&#xD;
				for (int j = 0; j &lt; width; j++) {&#xD;
					int pixel = this.rawPixels[i * width + j];&#xD;
					&#xD;
					pixels.put((byte)((pixel >> 16) &amp; 0xFF)); // red&#xD;
					pixels.put((byte)((pixel >>  8) &amp; 0xFF)); // green&#xD;
					pixels.put((byte)((pixel >>  0) &amp; 0xFF)); // blue&#xD;
					pixels.put((byte)((pixel >> 24) &amp; 0xFF)); // alpha&#xD;
					&#xD;
					&#xD;
//					System.out.println(&quot;(&quot; + ((pixel >> 16) &amp; 0xFF) + &quot;, &quot; + ((pixel >> 8) &amp; 0xFF) + &quot;, &quot; + ((pixel >> 0) &amp; 0xFF) + &quot;, &quot; + ((pixel >> 24) &amp; 0xFF) + &quot;)&quot;);&#xD;
				}&#xD;
			}&#xD;
			&#xD;
			pixels.flip();&#xD;
			&#xD;
			glBindTexture(GL_TEXTURE_2D, this.id);&#xD;
			&#xD;
			glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA, width, height, 0, GL_RGBA, GL_UNSIGNED_BYTE, pixels);&#xD;
			&#xD;
		} catch (IOException e) {&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQqIMt9lEeyaYIzP8fvkgQ" name="getPixels" specification="_A9yPgN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQqIM99lEeyaYIzP8fvkgQ" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BQqINN9lEeyaYIzP8fvkgQ" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>return(this.rawPixels);&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_A9waUN9lEeyaYIzP8fvkgQ" name="Texture" method="_BQphIt9lEeyaYIzP8fvkgQ">
              <eAnnotations xmi:id="_A9waUd9lEeyaYIzP8fvkgQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_A9xBYN9lEeyaYIzP8fvkgQ" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_A9xBYd9lEeyaYIzP8fvkgQ" type="_A9psoN9lEeyaYIzP8fvkgQ" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_A9xocN9lEeyaYIzP8fvkgQ" name="bind" method="_BQphJN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A9xocd9lEeyaYIzP8fvkgQ" name="sampler">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A9xoct9lEeyaYIzP8fvkgQ" name="loadImage" method="_BQqIMN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A9xoc99lEeyaYIzP8fvkgQ" name="filename">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A9yPgN9lEeyaYIzP8fvkgQ" name="getPixels" method="_BQqIMt9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A9yPgd9lEeyaYIzP8fvkgQ" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_A9yPgt9lEeyaYIzP8fvkgQ" value="*"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_A90EsN9lEeyaYIzP8fvkgQ" name="Timer">
            <ownedAttribute xmi:id="_BPN9wN9lEeyaYIzP8fvkgQ" name="frameCap" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BPOk0N9lEeyaYIzP8fvkgQ" name="time" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BPPL4t9lEeyaYIzP8fvkgQ" name="unprocessed" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BPPy8d9lEeyaYIzP8fvkgQ" name="frameTime" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BPQaAd9lEeyaYIzP8fvkgQ" name="frames" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQqvQd9lEeyaYIzP8fvkgQ" name="Timer" specification="_A92g8N9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQqvQt9lEeyaYIzP8fvkgQ" type="_A90EsN9lEeyaYIzP8fvkgQ" direction="return"/>
              <language>java</language>
              <body>this.frameCap = 1.0 / 60.0;&#xD;
		&#xD;
		this.time = this.getTime();&#xD;
		this.unprocessed = 0;&#xD;
		this.frameTime = 0;&#xD;
		this.frames = 0;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQqvQ99lEeyaYIzP8fvkgQ" name="setFramerate" specification="_A93vEN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQqvRN9lEeyaYIzP8fvkgQ" name="fps">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <language>java</language>
              <body>if (fps == 0) {&#xD;
			this.frameCap = 0;&#xD;
		} else {&#xD;
			this.frameCap = 1.0 / fps;&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQrWUN9lEeyaYIzP8fvkgQ" name="elapsed" specification="_A93vEt9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQrWUd9lEeyaYIzP8fvkgQ" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>boolean answer = false;&#xD;
		&#xD;
		double time_2 = this.getTime();&#xD;
		&#xD;
		double passed = time_2 - this.time;&#xD;
		&#xD;
		this.unprocessed += passed;&#xD;
		&#xD;
		this.frameTime += passed;&#xD;
		&#xD;
		this.time = time_2;&#xD;
		&#xD;
		if (this.unprocessed >= this.frameCap) {&#xD;
			answer = true;&#xD;
			this.unprocessed -= this.frameCap;&#xD;
		} else {&#xD;
			answer = false;&#xD;
		}&#xD;
		&#xD;
		return(answer);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQrWUt9lEeyaYIzP8fvkgQ" name="fps" specification="_A94WId9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQrWU99lEeyaYIzP8fvkgQ" name="time">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <language>java</language>
              <body>if (this.frameTime >= 1.0) {&#xD;
			this.frameTime = 0;&#xD;
			System.out.println(&quot;FPS: &quot; + frames + &quot; | Frame ms: &quot; + time + &quot; | RFPS: &quot; + Math.round((((double)1 / (time / (double)1000)) * (double)100))/ (double)100);&#xD;
			this.frames = 0;&#xD;
		}&#xD;
		&#xD;
		this.frames++;&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_A92g8N9lEeyaYIzP8fvkgQ" name="Timer" method="_BQqvQd9lEeyaYIzP8fvkgQ">
              <eAnnotations xmi:id="_A93IAN9lEeyaYIzP8fvkgQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_A93IAd9lEeyaYIzP8fvkgQ" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_A93IAt9lEeyaYIzP8fvkgQ" type="_A90EsN9lEeyaYIzP8fvkgQ" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_A93vEN9lEeyaYIzP8fvkgQ" name="setFramerate" method="_BQqvQ99lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A93vEd9lEeyaYIzP8fvkgQ" name="fps">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A93vEt9lEeyaYIzP8fvkgQ" name="elapsed" method="_BQrWUN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A94WIN9lEeyaYIzP8fvkgQ" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A94WId9lEeyaYIzP8fvkgQ" name="fps" method="_BQrWUt9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A94WIt9lEeyaYIzP8fvkgQ" name="time">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_A96yYN9lEeyaYIzP8fvkgQ" name="UI">
            <ownedAttribute xmi:id="_BPRoIN9lEeyaYIzP8fvkgQ" name="width" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BPSPMN9lEeyaYIzP8fvkgQ" name="height" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BPSPMt9lEeyaYIzP8fvkgQ" name="hpBar" visibility="private" type="_A-EjYN9lEeyaYIzP8fvkgQ" association="_BRz-wN9lEeyaYIzP8fvkgQ"/>
            <ownedAttribute xmi:id="_BPS2Qd9lEeyaYIzP8fvkgQ" name="currentHP" visibility="private" type="_A-EjYN9lEeyaYIzP8fvkgQ" association="_BRz-w99lEeyaYIzP8fvkgQ"/>
            <ownedAttribute xmi:id="_BPTdUd9lEeyaYIzP8fvkgQ" name="doubleJump" visibility="private" type="_A-EjYN9lEeyaYIzP8fvkgQ" association="_BR1M4d9lEeyaYIzP8fvkgQ"/>
            <ownedAttribute xmi:id="_BPUEYN9lEeyaYIzP8fvkgQ" name="coin" visibility="private" type="_A-EjYN9lEeyaYIzP8fvkgQ" association="_BR1z8d9lEeyaYIzP8fvkgQ"/>
            <ownedAttribute xmi:id="_BPUEYt9lEeyaYIzP8fvkgQ" name="coinCounter" visibility="private" type="_A-EjYN9lEeyaYIzP8fvkgQ" association="_BR2bAd9lEeyaYIzP8fvkgQ"/>
            <ownedAttribute xmi:id="_BPVSgN9lEeyaYIzP8fvkgQ" name="winCounter" visibility="private" type="_A-EjYN9lEeyaYIzP8fvkgQ" association="_BR3CEd9lEeyaYIzP8fvkgQ"/>
            <ownedAttribute xmi:id="_BPVSgt9lEeyaYIzP8fvkgQ" name="winScreen" visibility="private" type="_A-EjYN9lEeyaYIzP8fvkgQ" association="_BR3pId9lEeyaYIzP8fvkgQ"/>
            <ownedAttribute xmi:id="_BPV5kd9lEeyaYIzP8fvkgQ" name="winTimer" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQr9YN9lEeyaYIzP8fvkgQ" name="UI" specification="_A991sN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQr9Yd9lEeyaYIzP8fvkgQ" name="width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BQr9Yt9lEeyaYIzP8fvkgQ" name="height">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BQr9Y99lEeyaYIzP8fvkgQ" type="_A96yYN9lEeyaYIzP8fvkgQ" direction="return">
                <name xsi:nil="true"/>
              </ownedParameter>
              <language>java</language>
              <body>// window width and height&#xD;
		this.width = width;&#xD;
		this.height = height;&#xD;
		&#xD;
		// create the models and load the textures accordingly&#xD;
		this.hpBar = new Model();&#xD;
		this.hpBar.loadTextureAndAdapt(&quot;./assets/textures/hpUI.png&quot;);&#xD;
		this.hpBar.setScale(1.5f);&#xD;
		&#xD;
		this.currentHP = new Model();&#xD;
		this.currentHP.loadTextureAndAdapt(&quot;./assets/textures/hp.png&quot;);&#xD;
		this.currentHP.setScale(1.5f);&#xD;
		&#xD;
		this.doubleJump = new Model();&#xD;
		this.doubleJump.loadTextureAndAdapt(&quot;./assets/textures/doubleJumpUI.png&quot;);&#xD;
		this.doubleJump.setScale(0.25f);&#xD;
		&#xD;
		this.coinCounter = new Model();&#xD;
		this.coinCounter.loadAnimationAndAdapt(&quot;./assets/textures/fontV.png&quot;, 1, 11);&#xD;
		this.coinCounter.setScale(0.10f);&#xD;
		&#xD;
		this.coin = new Model();&#xD;
		this.coin.loadTextureAndAdapt(&quot;./assets/textures/coinIcon.png&quot;);&#xD;
		this.coin.setScale(0.15f);&#xD;
		&#xD;
		this.winCounter = new Model();&#xD;
		this.winCounter.loadAnimationAndAdapt(&quot;./assets/textures/fontV.png&quot;, 1, 11);&#xD;
		this.winCounter.setScale(0.5f);&#xD;
		&#xD;
		this.winScreen = new Model();&#xD;
		this.winScreen.loadTextureAndAdapt(&quot;./assets/textures/win.png&quot;);&#xD;
		this.winScreen.setScale(4f);&#xD;
		&#xD;
		this.winTimer = 0;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQr9ZN9lEeyaYIzP8fvkgQ" name="renderUI" specification="_BMPiQN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQr9Zd9lEeyaYIzP8fvkgQ" name="camera" type="_A8zYEN9lEeyaYIzP8fvkgQ"/>
              <ownedParameter xmi:id="_BQr9Zt9lEeyaYIzP8fvkgQ" name="player" type="_A7tL4N9lEeyaYIzP8fvkgQ"/>
              <language>java</language>
              <body>// store the camera position&#xD;
		Vector3f cameraPosition = camera.getPosition();&#xD;
		// place the camera at the center&#xD;
		camera.setPosition(new Vector3f(0, 0, 0));&#xD;
		&#xD;
		// get the dimensions of the hp bar container&#xD;
		List&lt;Float> boundingBox = this.hpBar.calculateBoundingBox();&#xD;
		&#xD;
		// calculate the width and height of the hp bar container&#xD;
		float objectWidth = boundingBox.get(0);&#xD;
		float objectHeight = boundingBox.get(1);&#xD;
&#xD;
		// get the player HP&#xD;
		float hp = player.getHP();&#xD;
		&#xD;
		// calculate the offset to apply to the current hp bar to adapt do the new dimensions of the bar, which depend on the player HP&#xD;
		float offset = map((float)hp, 0, 200, 59, 190);&#xD;
		&#xD;
		// place the hp bar relative to the window dimensions&#xD;
		this.hpBar.setPosition(-this.width / 2 + objectWidth / 2 + 20, this.height / 2 - objectHeight / 2 - 20);&#xD;
		// place the current HP bar relative to the window dimensions&#xD;
		this.currentHP.setPosition(-this.width / 2 + 20 + offset, this.height / 2 - 49);&#xD;
		// scale the hp bar horizontally depending on the player HP&#xD;
		this.currentHP.scaleHorizontal(hp / 200);&#xD;
		&#xD;
		// render the HP bar container&#xD;
		this.hpBar.render(camera, false);&#xD;
		// render the HP bar&#xD;
		this.currentHP.render(camera, false);&#xD;
		&#xD;
		// place the coin icon relative to the window dimensions&#xD;
		this.coin.setPosition(this.width / 2 - 30, this.height / 2 - 30);&#xD;
		// render the coin icon&#xD;
		this.coin.render(camera, false);&#xD;
		&#xD;
		// get the current coins collected by the player&#xD;
		int coins = player.getCoins();&#xD;
		&#xD;
		// calculate the first and second digit of the coins counter&#xD;
		int firstDigit;&#xD;
		int secondDigit;&#xD;
		&#xD;
		// if the player has less than 10 coins&#xD;
		if (coins &lt; 10) {&#xD;
			// the first digit is the coins collected by the player&#xD;
			firstDigit = coins;&#xD;
			// and the second digit is 0&#xD;
			secondDigit = 0;&#xD;
		} else { // otherwise if the player has more than 10 coins (double digits)&#xD;
			// the first digit is the rest of the division by 10 of the coins&#xD;
			firstDigit = coins % 10;&#xD;
			// the second digit is the division of the coins by 10 and then truncated to the first unit&#xD;
			secondDigit = (int)coins / (int)10;&#xD;
		}&#xD;
		&#xD;
		// place the second digit of the coin counter relative to the window dimensions&#xD;
		this.coinCounter.setPosition(this.width / 2 - 100, this.height / 2 - 28);&#xD;
		// switch to the frame in the spritesheet corresponding to the selected digit&#xD;
		this.coinCounter.setCurrentAnimation(secondDigit);&#xD;
		// update the sprite&#xD;
		this.coinCounter.updateAnimation(true);&#xD;
		// render it&#xD;
		this.coinCounter.render(camera, false);&#xD;
		&#xD;
		// place the first digit of the coin counter relative to the window dimensions&#xD;
		this.coinCounter.setPosition(this.width / 2 - 80, this.height / 2 - 28);&#xD;
		// switch to the frame in the spritesheet corresponding to the selected digit&#xD;
		this.coinCounter.setCurrentAnimation(firstDigit);&#xD;
		// update the sprite&#xD;
		this.coinCounter.updateAnimation(true);&#xD;
		// render it&#xD;
		this.coinCounter.render(camera, false);&#xD;
		&#xD;
		// place the &quot;x&quot; character relative to the window dimensions&#xD;
		this.coinCounter.setPosition(this.width / 2 - 60, this.height / 2 - 30);&#xD;
		// switch to the frame in the spritesheet corresponding to the &quot;x&quot; character&#xD;
		this.coinCounter.setCurrentAnimation(10);&#xD;
		// update the sprite&#xD;
		this.coinCounter.updateAnimation(true);&#xD;
		// render it&#xD;
		this.coinCounter.render(camera, false);&#xD;
		&#xD;
		// check if the player has the powerup of double jump&#xD;
		if (player.canDoubleJump()) {&#xD;
			// position the double jump icon relative to the window dimensions&#xD;
			this.doubleJump.setPosition(this.width / 2 - 40, -this.height / 2 + 40);&#xD;
			// render it&#xD;
			this.doubleJump.render(camera, false);&#xD;
		}&#xD;
		&#xD;
		if (this.winTimer != 0) {&#xD;
			this.winCounter.setPosition(0, -220);&#xD;
			this.winCounter.setCurrentAnimation(this.winTimer);&#xD;
			this.winCounter.updateAnimation(true);&#xD;
			this.winCounter.render(camera, false);&#xD;
			this.winScreen.render(camera, false);&#xD;
		}&#xD;
		&#xD;
		// restore the original camera position&#xD;
		camera.setPosition(cameraPosition);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQr9Z99lEeyaYIzP8fvkgQ" name="setWidth" specification="_A9-cwt9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQr9aN9lEeyaYIzP8fvkgQ" name="width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <language>java</language>
              <body>this.width = width;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQskcN9lEeyaYIzP8fvkgQ" name="setHeight" specification="_A9_D0d9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQskcd9lEeyaYIzP8fvkgQ" name="height">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <language>java</language>
              <body>this.height = height;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQskct9lEeyaYIzP8fvkgQ" name="map" specification="_A9_q4N9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQskc99lEeyaYIzP8fvkgQ" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BQskdN9lEeyaYIzP8fvkgQ" name="in_min">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BQskdd9lEeyaYIzP8fvkgQ" name="in_max">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BQskdt9lEeyaYIzP8fvkgQ" name="out_min">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BQskd99lEeyaYIzP8fvkgQ" name="out_max">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BQskeN9lEeyaYIzP8fvkgQ" direction="return">
                <name xsi:nil="true"/>
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <language>java</language>
              <body>return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQsked9lEeyaYIzP8fvkgQ" name="setWinTimer" specification="_A-A5AN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQsket9lEeyaYIzP8fvkgQ" name="number">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>this.winTimer = number;&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_A991sN9lEeyaYIzP8fvkgQ" name="UI" method="_BQr9YN9lEeyaYIzP8fvkgQ">
              <eAnnotations xmi:id="_A991s99lEeyaYIzP8fvkgQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_A9-cwN9lEeyaYIzP8fvkgQ" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_A991sd9lEeyaYIzP8fvkgQ" name="width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <ownedParameter xmi:id="_A991st9lEeyaYIzP8fvkgQ" name="height">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <ownedParameter xmi:id="_A9-cwd9lEeyaYIzP8fvkgQ" type="_A96yYN9lEeyaYIzP8fvkgQ" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_A9-cwt9lEeyaYIzP8fvkgQ" name="setWidth" method="_BQr9Z99lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A9_D0N9lEeyaYIzP8fvkgQ" name="width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A9_D0d9lEeyaYIzP8fvkgQ" name="setHeight" method="_BQskcN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A9_D0t9lEeyaYIzP8fvkgQ" name="height">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A9_q4N9lEeyaYIzP8fvkgQ" name="map" visibility="private" method="_BQskct9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A9_q4d9lEeyaYIzP8fvkgQ" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <ownedParameter xmi:id="_A9_q4t9lEeyaYIzP8fvkgQ" name="in_min">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <ownedParameter xmi:id="_A-AR8N9lEeyaYIzP8fvkgQ" name="in_max">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <ownedParameter xmi:id="_A-AR8d9lEeyaYIzP8fvkgQ" name="out_min">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <ownedParameter xmi:id="_A-AR8t9lEeyaYIzP8fvkgQ" name="out_max">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <ownedParameter xmi:id="_A-AR899lEeyaYIzP8fvkgQ" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A-A5AN9lEeyaYIzP8fvkgQ" name="setWinTimer" method="_BQsked9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A-A5Ad9lEeyaYIzP8fvkgQ" name="number">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_BMPiQN9lEeyaYIzP8fvkgQ" name="renderUI" method="_BQr9ZN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BMQJUN9lEeyaYIzP8fvkgQ" name="camera" type="_A8zYEN9lEeyaYIzP8fvkgQ"/>
              <ownedParameter xmi:id="_BMQJUd9lEeyaYIzP8fvkgQ" name="player" type="_A7tL4N9lEeyaYIzP8fvkgQ"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_A-EjYN9lEeyaYIzP8fvkgQ" name="Model">
            <ownedAttribute xmi:id="_BPXuwN9lEeyaYIzP8fvkgQ" name="drawCount" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BPYV0N9lEeyaYIzP8fvkgQ" name="VBOid" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BPYV0t9lEeyaYIzP8fvkgQ" name="TEXVBOid" visibility="protected">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BPY84d9lEeyaYIzP8fvkgQ" name="INDid" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BPZj8d9lEeyaYIzP8fvkgQ" name="bbINDid" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BPaLAd9lEeyaYIzP8fvkgQ" name="bbPINDid" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BPfDgt9lEeyaYIzP8fvkgQ" name="rotationValue" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BPfqkd9lEeyaYIzP8fvkgQ" name="scaleValue" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BPgRod9lEeyaYIzP8fvkgQ" name="animationSteps" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BPg4sd9lEeyaYIzP8fvkgQ" name="animationPosition" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BPhfwd9lEeyaYIzP8fvkgQ" name="tex" type="_A9psoN9lEeyaYIzP8fvkgQ" association="_BR4QMd9lEeyaYIzP8fvkgQ"/>
            <ownedAttribute xmi:id="_BPiG0N9lEeyaYIzP8fvkgQ" name="shader" type="_A9X_0N9lEeyaYIzP8fvkgQ" association="_BR43Qd9lEeyaYIzP8fvkgQ"/>
            <ownedAttribute xmi:id="_BPiG0t9lEeyaYIzP8fvkgQ" name="bbShader" type="_A9X_0N9lEeyaYIzP8fvkgQ" association="_BR6FYd9lEeyaYIzP8fvkgQ"/>
            <ownedAttribute xmi:id="_BPit4d9lEeyaYIzP8fvkgQ" name="scale" visibility="private" type="_BLyPQN9lEeyaYIzP8fvkgQ" association="_BR6scd9lEeyaYIzP8fvkgQ"/>
            <ownedAttribute xmi:id="_BPkjEN9lEeyaYIzP8fvkgQ" name="rotation" type="_BLyPQN9lEeyaYIzP8fvkgQ" association="_BR7Tgd9lEeyaYIzP8fvkgQ"/>
            <ownedAttribute xmi:id="_BPlxMN9lEeyaYIzP8fvkgQ" name="translation" visibility="private" type="_BLyPQN9lEeyaYIzP8fvkgQ" association="_BR76kd9lEeyaYIzP8fvkgQ"/>
            <ownedAttribute xmi:id="_BPmYQN9lEeyaYIzP8fvkgQ" name="target" visibility="private" type="_BLyPQN9lEeyaYIzP8fvkgQ" association="_BR8hod9lEeyaYIzP8fvkgQ"/>
            <ownedAttribute xmi:id="_BPmYQt9lEeyaYIzP8fvkgQ" name="scaleMul" visibility="public" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BPnmYd9lEeyaYIzP8fvkgQ" name="counter" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BPoNcd9lEeyaYIzP8fvkgQ" name="animationSpeed" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BPo0gd9lEeyaYIzP8fvkgQ" name="borderX" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BPpbkN9lEeyaYIzP8fvkgQ" name="borderY" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BPpbkt9lEeyaYIzP8fvkgQ" name="animation" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BPqCod9lEeyaYIzP8fvkgQ" name="animationsCount" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BPqpsd9lEeyaYIzP8fvkgQ" name="maxAnimationSteps" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BPrQwd9lEeyaYIzP8fvkgQ" name="animationFrames" visibility="private" isOrdered="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BPrQwt9lEeyaYIzP8fvkgQ" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BPu7Id9lEeyaYIzP8fvkgQ" name="opacity">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_e9eSMN9sEeyaYIzP8fvkgQ" name="x" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_e9fgUd9sEeyaYIzP8fvkgQ" name="y" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQvAtd9lEeyaYIzP8fvkgQ" name="Model" specification="_A-KC8N9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQvnwN9lEeyaYIzP8fvkgQ" type="_A-EjYN9lEeyaYIzP8fvkgQ" direction="return">
                <name xsi:nil="true"/>
              </ownedParameter>
              <language>java</language>
              <body>// vertices to make a square to fit the texture&#xD;
		float[] vertices = new float[] {&#xD;
			-0.5f,  0.5f, // TOP LEFT&#xD;
			 0.5f,  0.5f, // TOP RIGHT&#xD;
			-0.5f, -0.5f, // BOTTOM LEFT&#xD;
			 0.5f, -0.5f  // BOTTOM RIGHT&#xD;
		};&#xD;
		// UV values to apply the texture to the square&#xD;
		float[] textureUV = new float[] {&#xD;
			0, 0,&#xD;
			1, 0,&#xD;
			0, 1,&#xD;
			1, 1&#xD;
		};&#xD;
		// indices to form triangles to render the square&#xD;
		int[] indices = new int[] {&#xD;
			0, 1, 2,&#xD;
			2, 1, 3&#xD;
		};&#xD;
		&#xD;
		// indices to form lines to render the bounding box outline&#xD;
		int[] bbIndices = new int[] {&#xD;
				0, 1,&#xD;
				1, 3,&#xD;
				3, 2,&#xD;
				2, 0&#xD;
		};&#xD;
		&#xD;
		// indices of the vertices that correspond to the edges of the model&#xD;
		int[] bbPointIndices = new int[] {&#xD;
				0, 1, 2, 3&#xD;
		};&#xD;
		&#xD;
		// field to keep track of how many vertices need to be rendered&#xD;
		this.drawCount = indices.length;&#xD;
		&#xD;
		// create a Vertex Buffer Object to store the values of the vertices to render the square in GPU&#xD;
		this.VBOid = glGenBuffers();&#xD;
		glBindBuffer(GL_ARRAY_BUFFER, this.VBOid);&#xD;
		glBufferData(GL_ARRAY_BUFFER, this.createBuffer(vertices), GL_DYNAMIC_DRAW);&#xD;
		&#xD;
		// create a Vertex Buffer Object to store the values of the UV coordinates to apply the texture to the square&#xD;
		this.TEXVBOid = glGenBuffers();&#xD;
		glBindBuffer(GL_ARRAY_BUFFER, this.TEXVBOid);&#xD;
		glBufferData(GL_ARRAY_BUFFER, this.createBuffer(textureUV), GL_STATIC_DRAW);&#xD;
		&#xD;
		// create an Element Array Buffer to store the indices of the vertices in order to draw 2 triangles (a square)&#xD;
		this.INDid = glGenBuffers();&#xD;
		glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, this.INDid);&#xD;
		glBufferData(GL_ELEMENT_ARRAY_BUFFER, indices, GL_STATIC_DRAW);&#xD;
		&#xD;
		// create an Element Array Buffer to store the indices of the vertices in order to draw the outline of the model&#xD;
		this.bbINDid = glGenBuffers();&#xD;
		glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, this.bbINDid);&#xD;
		glBufferData(GL_ELEMENT_ARRAY_BUFFER, bbIndices, GL_STATIC_DRAW);&#xD;
		&#xD;
		// create an Element Array Buffer to store the indices of the vertices in order to draw 4 points at the edge of the model&#xD;
		this.bbPINDid = glGenBuffers();&#xD;
		glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, this.bbPINDid);&#xD;
		glBufferData(GL_ELEMENT_ARRAY_BUFFER, bbPointIndices, GL_STATIC_DRAW);&#xD;
		&#xD;
		&#xD;
		// unbind the buffers so that there is no current buffer selected&#xD;
		glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, 0);&#xD;
		glBindBuffer(GL_ARRAY_BUFFER, 0);&#xD;
		&#xD;
		// create a new texture&#xD;
		this.tex = new Texture();&#xD;
		// create a new shader for rendering the object&#xD;
		this.shader = new Shader(&quot;entity/shader&quot;);&#xD;
		// create a new shader for rendering the bounding box outline&#xD;
		this.bbShader = new Shader(&quot;bb/shader&quot;);&#xD;
		&#xD;
		// set the default scale multiplier to 256 (otherwise the objects would be squares 1px wide and 1px tall&#xD;
		this.scaleMul = 256;&#xD;
		&#xD;
		// create a new scale matrix&#xD;
		this.scale = new Matrix4f().scale(this.scaleMul); // | Sx |  0 |  0 | 0 |   Sx = Scale component for the X axis&#xD;
		   												  // |  0 | Sy |  0 | 0 |   Sy = Scale component for the Y axis&#xD;
		   												  // |  0 |  0 | Sz | 0 |   Sz = Scale component for the Z axis&#xD;
		   												  // |  0 |  0 |  0 | 1 |&#xD;
		&#xD;
		// create a new rotation matrix&#xD;
		this.rotation = new Matrix4f();	   				  // | cos(θ) | -sin(θ) | 0 | 0 |   θ = angle of rotation by the Z axis&#xD;
		   								   				  // | sin(θ) | -cos(θ) | 0 | 0 |&#xD;
		   								   				  // |    0   |    0    | 1 | 0 |&#xD;
		   								   				  // |    0   |    0    | 0 | 1 |&#xD;
		&#xD;
		// create a new translation matrix&#xD;
		this.translation = new Matrix4f(); 				  // | 1 | 0 | 0 | Tx |   Tx = translation component for the X axis&#xD;
										   				  // | 0 | 1 | 0 | Ty |   Ty = translation component for the Y axis&#xD;
										   				  // | 0 | 0 | 1 | Tz |   Tz = translation component for the Z axis&#xD;
										   				  // | 0 | 0 | 0 |  1 |&#xD;
		&#xD;
		// create a new target matrix (this will be the model matrix, which includes scale, rotation and translation)&#xD;
		this.target = new Matrix4f(); // S * R * T = target / model matrix&#xD;
		&#xD;
		// dimensions of the model&#xD;
		this.borderX = 0;&#xD;
		this.borderY = 0;&#xD;
		&#xD;
		// number of frames in the current animation&#xD;
		this.animationSteps = 0;&#xD;
		// counter of the position of the frame in the current animation&#xD;
		this.animationPosition = 0;&#xD;
		// counter to go through animations every x seconds&#xD;
		this.counter = 0;&#xD;
		// number of times the animation updates per second&#xD;
		this.animationSpeed = 1.0f;&#xD;
		// current animation&#xD;
		this.animation = 0;&#xD;
		// amount of animations in the sprite sheet&#xD;
		this.animationsCount = 1;&#xD;
		// max amount of frames in any animation&#xD;
		this.maxAnimationSteps = 0;&#xD;
		// list of frames per animation&#xD;
		this.animationFrames = new ArrayList();&#xD;
		&#xD;
		// opacity of the model&#xD;
		this.opacity = 1;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQvnwd9lEeyaYIzP8fvkgQ" name="render" specification="_BMWP8N9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQvnwt9lEeyaYIzP8fvkgQ" name="camera" type="_A8zYEN9lEeyaYIzP8fvkgQ"/>
              <ownedParameter xmi:id="_BQvnw99lEeyaYIzP8fvkgQ" name="debug">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>// calculate the model matrix (S * R * T) and store it in the target matrix&#xD;
		this.calculateModelMatrix();&#xD;
		&#xD;
		// bind the object's texture to the slot 0&#xD;
		this.tex.bind(0);&#xD;
		&#xD;
		// enable 2 VBOs (one for the vertices, one for the texture UVs)&#xD;
		glEnableVertexAttribArray(0);&#xD;
		glEnableVertexAttribArray(1);&#xD;
		&#xD;
		// bind the shader to render the object&#xD;
		this.shader.bind();&#xD;
		// notify the shader that the texture (sampler) is located in the slot 0&#xD;
		this.shader.setUniform(&quot;sampler&quot;, 0);&#xD;
		// pass the model matrix multiplied by the camera projection matrix to obtain the correct perspective&#xD;
		this.shader.setUniform(&quot;projection&quot;, camera.getProjection().mul(this.target));&#xD;
		// pass the opacity to the shader&#xD;
		this.shader.setUniform(&quot;opacity&quot;, this.opacity);&#xD;
	&#xD;
		// bind the VBO containing the model vertices&#xD;
		glBindBuffer(GL_ARRAY_BUFFER, this.VBOid);&#xD;
		glVertexAttribPointer(0, 2, GL_FLOAT, false, 0, 0);&#xD;
		// bind the VBO containing the texture UVs&#xD;
		glBindBuffer(GL_ARRAY_BUFFER, this.TEXVBOid);&#xD;
		glVertexAttribPointer(1, 2, GL_FLOAT, false, 0, 0);	&#xD;
		// bind the indices buffer containing the indices of the vertices and UVs used to render the square&#xD;
		glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, this.INDid);&#xD;
	&#xD;
		// draw 2 triangles that represent the square of the model&#xD;
		glDrawElements(GL_TRIANGLES, this.drawCount, GL_UNSIGNED_INT, 0);&#xD;
		&#xD;
		// if debug mode is active&#xD;
		if (debug) {&#xD;
			// bind the bounding box shader&#xD;
			this.bbShader.bind();&#xD;
			// pass it the model matrix multiplied by the camera projection matrix&#xD;
			this.bbShader.setUniform(&quot;projection&quot;, camera.getProjection().mul(this.target));&#xD;
			&#xD;
			// bind the indices buffer containing the location of the vertices where to draw points (the edges of the bounding box)&#xD;
			glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, this.bbPINDid);&#xD;
			&#xD;
			// set the point size to be 10px&#xD;
			glPointSize(10.0f);&#xD;
			// draw 4 points at the edges of the model&#xD;
			glDrawElements(GL_POINTS, 4, GL_UNSIGNED_INT, 0);&#xD;
			&#xD;
			// bind the indices buffer containing the vertices where to draw lines (edges of the bounding box)&#xD;
			glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, this.bbINDid);&#xD;
			// draw 4 lines at the edges of the model&#xD;
			glDrawElements(GL_LINES, 8, GL_UNSIGNED_INT, 0);&#xD;
		}&#xD;
		&#xD;
		// unbind any previously bound buffer&#xD;
		glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, 0);&#xD;
		glBindBuffer(GL_ARRAY_BUFFER, 0);&#xD;
		&#xD;
		// disable the vertex arrays in the GPU&#xD;
		glDisableVertexAttribArray(0);&#xD;
		glDisableVertexAttribArray(1);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQvnyN9lEeyaYIzP8fvkgQ" name="printMatrix" specification="_BNrssN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQvnyd9lEeyaYIzP8fvkgQ" name="mat" type="_BLyPQN9lEeyaYIzP8fvkgQ"/>
              <language>java</language>
              <body>for (int i = 0; i &lt; 4; i++) {&#xD;
			for (int j = 0; j &lt; 4; j++) {&#xD;
				System.out.print(mat.get(j, i) + &quot; &quot;);&#xD;
			}&#xD;
			System.out.print(&quot;\n&quot;);&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQwO0N9lEeyaYIzP8fvkgQ" name="setPosition" specification="_A-L4IN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQwO0d9lEeyaYIzP8fvkgQ" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BQwO0t9lEeyaYIzP8fvkgQ" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <language>java</language>
              <body>// store the position values&#xD;
		this.x = x;&#xD;
		this.y = y;&#xD;
		&#xD;
		// calculate a new translation matrix with the new position&#xD;
		this.translation = new Matrix4f().translate(this.x, this.y, 0);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQw14N9lEeyaYIzP8fvkgQ" name="loadTextureAndAdapt" specification="_A-NGQd9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQw14d9lEeyaYIzP8fvkgQ" name="filename">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>// load the image&#xD;
		this.tex.loadImage(filename);&#xD;
		// adapt the ratio&#xD;
		this.adaptToTexture();&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQw14t9lEeyaYIzP8fvkgQ" name="loadAnimationAndAdapt" specification="_A-NtUN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQw1499lEeyaYIzP8fvkgQ" name="filename">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BQw15N9lEeyaYIzP8fvkgQ" name="steps">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BQw15d9lEeyaYIzP8fvkgQ" name="animations">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>// load the image&#xD;
		this.tex.loadImage(filename);&#xD;
		// adapt the ratio and single frame size&#xD;
		this.adaptToSheet(steps, animations);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQw15t9lEeyaYIzP8fvkgQ" name="adaptToTexture" specification="_A-OUYN9lEeyaYIzP8fvkgQ">
              <language>java</language>
              <body>if (this.tex.getWidth() > this.tex.getHeight()) { // if the width is larger than the height&#xD;
			// keep the width&#xD;
			this.borderX = 0.5f;&#xD;
			// adapt the height&#xD;
			this.borderY = this.borderX * ((float)this.tex.getHeight() / (float)this.tex.getWidth());&#xD;
		} else if (this.tex.getWidth() &lt; this.tex.getHeight()) { // if the height is larger than the width&#xD;
			// keep the height&#xD;
			this.borderY = 0.5f;&#xD;
			// adapt the width&#xD;
			this.borderX = this.borderY * ((float)this.tex.getWidth() / (float)this.tex.getHeight());&#xD;
		} else { // otherwise if it's a square image, keep both the same&#xD;
			this.borderX = 0.5f;&#xD;
			this.borderY = 0.5f;&#xD;
		}&#xD;
		&#xD;
		// update the vertex buffer with the new adapted values&#xD;
		float [] vertices = new float[] {&#xD;
				-this.borderX,  this.borderY, // TOP LEFT&#xD;
				 this.borderX,  this.borderY, // TOP RIGHT&#xD;
				-this.borderX, -this.borderY, // BOTTOM LEFT&#xD;
				 this.borderX, -this.borderY  // BOTTOM RIGHT&#xD;
		};&#xD;
		&#xD;
		// replace the old vertices for the new ones&#xD;
		glBindBuffer(GL_ARRAY_BUFFER, this.VBOid);&#xD;
		glBufferData(GL_ARRAY_BUFFER, createBuffer(vertices), GL_STATIC_DRAW);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQw1599lEeyaYIzP8fvkgQ" name="adaptToSheet" specification="_A-OUYd9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQw16N9lEeyaYIzP8fvkgQ" name="steps">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BQw16d9lEeyaYIzP8fvkgQ" name="animations">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>// animation steps (amount of frames for the current animation)&#xD;
		this.animationSteps = steps;&#xD;
		// max animation steps (amount of frames for the longest animation in the sheet, amount of columns)&#xD;
		this.maxAnimationSteps = steps;&#xD;
		// amount of animations (rows in the sheet)&#xD;
		this.animationsCount = animations;&#xD;
		&#xD;
		// store the pixels of the sheet texture&#xD;
		int[] pixels = this.tex.getPixels();&#xD;
		&#xD;
		// flag to keep track of whether or not a new frame for an animation was found&#xD;
		boolean found = false;&#xD;
		&#xD;
		// the program scrolls through every square (frame) of every animation (row), for every frame, it scrolls through every&#xD;
		// pixel (row and column) until it finds a pixel that has an alpha value that isn't 0 (meaning that there is something there)&#xD;
		// if the algorithm finds something (a new frame for the current animation), it updates the amount of frames for that animation&#xD;
		// this is required since not all animations within the same sheet don't have the same amount of frames&#xD;
		&#xD;
		for (int h = 0; h &lt; this.animationsCount; h++) { // moving through animations&#xD;
			this.animationFrames.add(1);&#xD;
			&#xD;
			for (int w = 0; w &lt; this.maxAnimationSteps; w++) { // moving through steps of animation&#xD;
				for (int i = h * (this.tex.getHeight() / this.animationsCount); (i &lt; (h + 1) * (this.tex.getHeight() / this.animationsCount)) &amp;&amp; !found; i++) { // moving through pixel rows&#xD;
					for (int j = w * (this.tex.getWidth() / this.maxAnimationSteps); (j &lt; (w + 1) * (this.tex.getWidth() / this.maxAnimationSteps)) &amp;&amp; !found; j++) { // moving through pixel columns&#xD;
						// pixels are stored linearly in an array, to access them through row and column numbers, we need to calculate&#xD;
						// the index through the formula: &quot;i * width + j&quot;&#xD;
						int pixel = pixels[i * this.tex.getWidth() + j];&#xD;
						&#xD;
						if (((pixel >> 24) &amp; 0xFF) != 0) { // if the alpha value is different than 0&#xD;
							found = true;				   // we found a new frame for the animation&#xD;
						}&#xD;
					} // column&#xD;
				} // row&#xD;
				&#xD;
				// if we found a new frame&#xD;
				if (found) {&#xD;
					// reset the flag&#xD;
					found = false;&#xD;
					// update the frame count for the current animation&#xD;
					this.animationFrames.set(h, w + 1);&#xD;
				}&#xD;
			} // animation step&#xD;
		} // animation&#xD;
&#xD;
		// calculate the width of a single frame (uniform between frames)&#xD;
		float spriteWidth = (float)this.tex.getWidth() / this.maxAnimationSteps;&#xD;
		&#xD;
		&#xD;
		if (spriteWidth > (this.tex.getHeight() / (float)this.animationsCount)) { // if the sprite is wider than tall&#xD;
			// keep the width&#xD;
			this.borderX = 0.5f;&#xD;
			// adjust the height&#xD;
			this.borderY = this.borderX * (((float)this.tex.getHeight() / this.animationsCount) / spriteWidth);&#xD;
		} else if (spriteWidth &lt; (this.tex.getHeight() / (float)this.animationsCount)) { // if the sprite is taller than wide&#xD;
			// keep the height&#xD;
			this.borderY = 0.5f;&#xD;
			// adjust the width&#xD;
			this.borderX = this.borderY * (spriteWidth / ((float)this.tex.getHeight() / this.animationsCount));&#xD;
		} else { // if the frames are squares, keep the ratio&#xD;
			this.borderX = 0.5f;&#xD;
			this.borderY = 0.5f;&#xD;
		}&#xD;
		&#xD;
		// update the vertices with the new adjusted values&#xD;
		float [] vertices = new float[] {&#xD;
			-this.borderX,  this.borderY, // TOP LEFT&#xD;
			 this.borderX,  this.borderY, // TOP RIGHT&#xD;
			-this.borderX, -this.borderY, // BOTTOM LEFT&#xD;
			 this.borderX, -this.borderY  // BOTTOM RIGHT&#xD;
		};&#xD;
		glBindBuffer(GL_ARRAY_BUFFER, this.VBOid);&#xD;
		glBufferData(GL_ARRAY_BUFFER, createBuffer(vertices), GL_STATIC_DRAW);&#xD;
		&#xD;
		// update the UVs to only show one frame of the whole sprite sheet&#xD;
		float [] textureUV = new float[] {&#xD;
			0,                        0,&#xD;
			1f / this.animationSteps, 0,&#xD;
			0,                        1,&#xD;
			1f / this.animationSteps, 1&#xD;
		};&#xD;
		// replace the UV buffer with the new values&#xD;
		glBindBuffer(GL_ARRAY_BUFFER, this.TEXVBOid);&#xD;
		glBufferData(GL_ARRAY_BUFFER, createBuffer(textureUV), GL_STATIC_DRAW);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQxc8N9lEeyaYIzP8fvkgQ" name="scaleHorizontal" specification="_A-O7cd9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQxc8d9lEeyaYIzP8fvkgQ" name="percentage">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <language>java</language>
              <body>float newBorderX = this.borderX * percentage;&#xD;
		&#xD;
		float [] vertices = new float[] {&#xD;
				-newBorderX,  this.borderY, // TOP LEFT&#xD;
				 newBorderX,  this.borderY, // TOP RIGHT&#xD;
				-newBorderX, -this.borderY, // BOTTOM LEFT&#xD;
				 newBorderX, -this.borderY  // BOTTOM RIGHT&#xD;
		};&#xD;
		&#xD;
		glBindBuffer(GL_ARRAY_BUFFER, this.VBOid);&#xD;
		glBufferData(GL_ARRAY_BUFFER, createBuffer(vertices), GL_STATIC_DRAW);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQxc8t9lEeyaYIzP8fvkgQ" name="updateAnimation" specification="_A-PigN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQxc899lEeyaYIzP8fvkgQ" name="direction">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>if (this.animationSteps != 0) {&#xD;
			// at every call, increase a counter variable. this is used to sync the animations with timers&#xD;
			this.counter++;&#xD;
			&#xD;
			// array to store the new UV coordinates to show the new frame of the animation&#xD;
			float[] textureUV;&#xD;
&#xD;
			// change frame animationSpeed times per second&#xD;
			if ((float)this.counter % Math.round(60 / this.animationSpeed) == 0) {&#xD;
				if (direction == true) { // if the model is facing right												&#xD;
					textureUV = new float[] {										   &#xD;
							(1f / this.maxAnimationSteps) * this.animationPosition,       (1f / this.animationsCount) * (this.animation),&#xD;
							(1f / this.maxAnimationSteps) * (this.animationPosition + 1), (1f / this.animationsCount) * (this.animation),&#xD;
							(1f / this.maxAnimationSteps) * this.animationPosition,       (1f / this.animationsCount) * (this.animation + 1),&#xD;
							(1f / this.maxAnimationSteps) * (this.animationPosition + 1), (1f / this.animationsCount) * (this.animation + 1)&#xD;
					};&#xD;
&#xD;
				} else { // if the model is facing left&#xD;
					textureUV = new float[] {&#xD;
							(1f / this.maxAnimationSteps) * (this.animationPosition + 1), (1f / this.animationsCount) * (this.animation),&#xD;
							(1f / this.maxAnimationSteps) * this.animationPosition,       (1f / this.animationsCount) * (this.animation),&#xD;
							(1f / this.maxAnimationSteps) * (this.animationPosition + 1), (1f / this.animationsCount) * (this.animation + 1),&#xD;
							(1f / this.maxAnimationSteps) * this.animationPosition,       (1f / this.animationsCount) * (this.animation + 1)&#xD;
					};&#xD;
				}&#xD;
				&#xD;
				// update the counter for the current frame in the animation&#xD;
				this.animationPosition++;&#xD;
				&#xD;
				// loop the animation when it ends&#xD;
				if (this.animationPosition >= this.animationFrames.get(this.animation)) {&#xD;
					this.animationPosition = 0;&#xD;
				}&#xD;
			&#xD;
				// replace the texture UV buffer with the new one&#xD;
				glBindBuffer(GL_ARRAY_BUFFER, this.TEXVBOid);&#xD;
				glBufferData(GL_ARRAY_BUFFER, createBuffer(textureUV), GL_STATIC_DRAW);&#xD;
			}&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQxc9N9lEeyaYIzP8fvkgQ" name="setIdle" specification="_A-Pigt9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQxc9d9lEeyaYIzP8fvkgQ" name="idle">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>if (idle) {&#xD;
			if (this.animation != 5) {&#xD;
				this.animation = 5;&#xD;
				this.animationPosition = 0;&#xD;
			}&#xD;
		} else {&#xD;
			if (this.animation != 0) {&#xD;
				this.animation = 0;&#xD;
				this.animationPosition = 0;&#xD;
			}&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQxc9t9lEeyaYIzP8fvkgQ" name="setRunning" specification="_A-QJkd9lEeyaYIzP8fvkgQ">
              <language>java</language>
              <body>if (this.animation != 1) {&#xD;
			this.animation = 1;&#xD;
			this.animationPosition = 0;&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQyEAN9lEeyaYIzP8fvkgQ" name="setJumping" specification="_A-QJkt9lEeyaYIzP8fvkgQ">
              <language>java</language>
              <body>if (this.animation != 2) {&#xD;
			this.animation = 2;&#xD;
			this.animationPosition = 0;&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQyEAd9lEeyaYIzP8fvkgQ" name="setMidAir" specification="_A-QwoN9lEeyaYIzP8fvkgQ">
              <language>java</language>
              <body>if (this.animation != 3) {&#xD;
			this.animation = 3;&#xD;
			this.animationPosition = 0;&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQyEAt9lEeyaYIzP8fvkgQ" name="setFalling" specification="_A-Qwod9lEeyaYIzP8fvkgQ">
              <language>java</language>
              <body>if (this.animation != 4) {&#xD;
			this.animation = 4;&#xD;
			this.animationPosition = 0;&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQyEA99lEeyaYIzP8fvkgQ" name="setGoingToSleep" specification="_A-Qwot9lEeyaYIzP8fvkgQ">
              <language>java</language>
              <body>if (this.animation != 6) {&#xD;
			this.animation = 6;&#xD;
			this.animationPosition = 0;&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQyEBN9lEeyaYIzP8fvkgQ" name="setSleeping" specification="_A-RXsN9lEeyaYIzP8fvkgQ">
              <language>java</language>
              <body>if (this.animation != 7) {&#xD;
			this.animation = 7;&#xD;
			this.animationPosition = 0;&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQyrEN9lEeyaYIzP8fvkgQ" name="setCurrentAnimation" specification="_A-RXsd9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQyrEd9lEeyaYIzP8fvkgQ" name="animation">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>if (animation >= 0 &amp;&amp; animation &lt;= this.animationsCount) {&#xD;
			if (this.animation != animation) {&#xD;
				this.animation = animation;&#xD;
				this.animationPosition = 0;&#xD;
				this.counter = Math.round(60 / this.animationSpeed) - 1;&#xD;
			}&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQyrFN9lEeyaYIzP8fvkgQ" name="setAnimationSpeed" specification="_A-Sl0N9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQyrFd9lEeyaYIzP8fvkgQ" name="animationSpeed">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <language>java</language>
              <body>this.animationSpeed = animationSpeed;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQyrFt9lEeyaYIzP8fvkgQ" name="calculateBoundingBox" specification="_A-TM4N9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_Yp_y4N91EeyaYIzP8fvkgQ" isOrdered="true" direction="return">
                <name xsi:nil="true"/>
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Yp_y4d91EeyaYIzP8fvkgQ" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>this.calculateModelMatrix();&#xD;
		&#xD;
		Vector4f position1 = new Vector4f( this.borderX,  this.borderY, 1, 1);&#xD;
		Vector4f position3 = new Vector4f(-this.borderX, -this.borderY, 1, 1);&#xD;
		&#xD;
		position1.mul(this.target, position1);&#xD;
		position3.mul(this.target, position3);&#xD;
		&#xD;
		List&lt;Float> boundingBox = new LinkedList&lt;Float>();&#xD;
		&#xD;
		boundingBox.add(Math.abs(position1.x - position3.x));&#xD;
		boundingBox.add(Math.abs(position1.y - position3.y));&#xD;
		&#xD;
		return(boundingBox);		&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQzSJt9lEeyaYIzP8fvkgQ" name="getFrames" specification="_A-VCEN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQzSJ99lEeyaYIzP8fvkgQ" isOrdered="true" direction="return">
                <name xsi:nil="true"/>
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BQzSKN9lEeyaYIzP8fvkgQ" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>return(this.animationFrames);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0De_cN9oEeyaYIzP8fvkgQ" name="createBuffer" specification="_0DauAN9oEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_0De_cd9oEeyaYIzP8fvkgQ" name="data">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0De_ct9oEeyaYIzP8fvkgQ" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:id="_0De_c99oEeyaYIzP8fvkgQ" type="_BMDVAd9lEeyaYIzP8fvkgQ" direction="return">
                <name xsi:nil="true"/>
              </ownedParameter>
              <language>java</language>
              <body>FloatBuffer buffer;&#xD;
		buffer = BufferUtils.createFloatBuffer(data.length);&#xD;
		buffer.put(data);&#xD;
		buffer.flip();&#xD;
		&#xD;
		return(buffer);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Kc4tkN9tEeyaYIzP8fvkgQ" name="calculateModelMatrix" specification="_KcwxwN9tEeyaYIzP8fvkgQ">
              <language>java</language>
              <body>// start from a blank identity matrix&#xD;
		this.target = new Matrix4f();&#xD;
		&#xD;
		// multiply the matrices to the target matrix (ORDER IS IMPORTANT)&#xD;
		this.target.mul(this.translation, this.target);&#xD;
		this.target.mul(this.rotation, this.target);&#xD;
		this.target.mul(this.scale, this.target);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kkK_gN9tEeyaYIzP8fvkgQ" name="setScale" specification="_kkIjQN9tEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_kkK_gd9tEeyaYIzP8fvkgQ" name="scale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <language>java</language>
              <body>// store the scale value&#xD;
		this.scaleValue = scale;&#xD;
		&#xD;
		// calculate a new scale matrix with the new scale value&#xD;
		this.scale = new Matrix4f().scale(this.scaleValue * this.scaleMul);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kkLmkN9tEeyaYIzP8fvkgQ" name="getScale" specification="_kkDDsN9tEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_kkLmkd9tEeyaYIzP8fvkgQ" direction="return">
                <name xsi:nil="true"/>
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <language>java</language>
              <body>return(this.scaleValue);&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_A-KC8N9lEeyaYIzP8fvkgQ" name="Model" method="_BQvAtd9lEeyaYIzP8fvkgQ">
              <eAnnotations xmi:id="_A-KC8d9lEeyaYIzP8fvkgQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_A-KC8t9lEeyaYIzP8fvkgQ" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_A-KC899lEeyaYIzP8fvkgQ" type="_A-EjYN9lEeyaYIzP8fvkgQ" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_A-L4IN9lEeyaYIzP8fvkgQ" name="setPosition" method="_BQwO0N9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A-L4Id9lEeyaYIzP8fvkgQ" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
              <ownedParameter xmi:id="_A-L4It9lEeyaYIzP8fvkgQ" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A-NGQd9lEeyaYIzP8fvkgQ" name="loadTextureAndAdapt" method="_BQw14N9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A-NGQt9lEeyaYIzP8fvkgQ" name="filename">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A-NtUN9lEeyaYIzP8fvkgQ" name="loadAnimationAndAdapt" method="_BQw14t9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A-NtUd9lEeyaYIzP8fvkgQ" name="filename">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_A-NtUt9lEeyaYIzP8fvkgQ" name="steps">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_A-NtU99lEeyaYIzP8fvkgQ" name="animations">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A-OUYN9lEeyaYIzP8fvkgQ" name="adaptToTexture" method="_BQw15t9lEeyaYIzP8fvkgQ"/>
            <ownedOperation xmi:id="_A-OUYd9lEeyaYIzP8fvkgQ" name="adaptToSheet" method="_BQw1599lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A-OUYt9lEeyaYIzP8fvkgQ" name="steps">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_A-O7cN9lEeyaYIzP8fvkgQ" name="animations">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A-O7cd9lEeyaYIzP8fvkgQ" name="scaleHorizontal" method="_BQxc8N9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A-O7ct9lEeyaYIzP8fvkgQ" name="percentage">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A-PigN9lEeyaYIzP8fvkgQ" name="updateAnimation" method="_BQxc8t9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A-Pigd9lEeyaYIzP8fvkgQ" name="direction">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A-Pigt9lEeyaYIzP8fvkgQ" name="setIdle" method="_BQxc9N9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A-QJkN9lEeyaYIzP8fvkgQ" name="idle">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A-QJkd9lEeyaYIzP8fvkgQ" name="setRunning" method="_BQxc9t9lEeyaYIzP8fvkgQ"/>
            <ownedOperation xmi:id="_A-QJkt9lEeyaYIzP8fvkgQ" name="setJumping" method="_BQyEAN9lEeyaYIzP8fvkgQ"/>
            <ownedOperation xmi:id="_A-QwoN9lEeyaYIzP8fvkgQ" name="setMidAir" method="_BQyEAd9lEeyaYIzP8fvkgQ"/>
            <ownedOperation xmi:id="_A-Qwod9lEeyaYIzP8fvkgQ" name="setFalling" method="_BQyEAt9lEeyaYIzP8fvkgQ"/>
            <ownedOperation xmi:id="_A-Qwot9lEeyaYIzP8fvkgQ" name="setGoingToSleep" method="_BQyEA99lEeyaYIzP8fvkgQ"/>
            <ownedOperation xmi:id="_A-RXsN9lEeyaYIzP8fvkgQ" name="setSleeping" method="_BQyEBN9lEeyaYIzP8fvkgQ"/>
            <ownedOperation xmi:id="_A-RXsd9lEeyaYIzP8fvkgQ" name="setCurrentAnimation" method="_BQyrEN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A-RXst9lEeyaYIzP8fvkgQ" name="animation">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A-Sl0N9lEeyaYIzP8fvkgQ" name="setAnimationSpeed" method="_BQyrFN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A-Sl0d9lEeyaYIzP8fvkgQ" name="animationSpeed">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A-TM4N9lEeyaYIzP8fvkgQ" name="calculateBoundingBox" method="_BQyrFt9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A-TM4d9lEeyaYIzP8fvkgQ" isOrdered="true" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_A-TM4t9lEeyaYIzP8fvkgQ" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_A-VCEN9lEeyaYIzP8fvkgQ" name="getFrames" method="_BQzSJt9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A-VCEd9lEeyaYIzP8fvkgQ" isOrdered="true" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_A-VCEt9lEeyaYIzP8fvkgQ" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_BMWP8N9lEeyaYIzP8fvkgQ" name="render" method="_BQvnwd9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BMWP8d9lEeyaYIzP8fvkgQ" name="camera" type="_A8zYEN9lEeyaYIzP8fvkgQ"/>
              <ownedParameter xmi:id="_BMWP8t9lEeyaYIzP8fvkgQ" name="debug">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_BNrssN9lEeyaYIzP8fvkgQ" name="printMatrix" visibility="private" method="_BQvnyN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BNrssd9lEeyaYIzP8fvkgQ" name="mat" type="_BLyPQN9lEeyaYIzP8fvkgQ"/>
            </ownedOperation>
            <ownedOperation xmi:id="_0DauAN9oEeyaYIzP8fvkgQ" name="createBuffer" visibility="protected" method="_0De_cN9oEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_0DbVEN9oEeyaYIzP8fvkgQ" name="data">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0DbVEt9oEeyaYIzP8fvkgQ" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:id="_0DbVEd9oEeyaYIzP8fvkgQ" type="_BMDVAd9lEeyaYIzP8fvkgQ" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_KcwxwN9tEeyaYIzP8fvkgQ" name="calculateModelMatrix" visibility="private" method="_Kc4tkN9tEeyaYIzP8fvkgQ"/>
            <ownedOperation xmi:id="_kkDDsN9tEeyaYIzP8fvkgQ" name="getScale" method="_kkLmkN9tEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_kkIjQt9tEeyaYIzP8fvkgQ" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_kkIjQN9tEeyaYIzP8fvkgQ" name="setScale" method="_kkK_gN9tEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_kkIjQd9tEeyaYIzP8fvkgQ" name="scale">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_BRhD0N9lEeyaYIzP8fvkgQ" name="" memberEnd="_BRhD0d9lEeyaYIzP8fvkgQ _A9QrEN9lEeyaYIzP8fvkgQ">
            <ownedEnd xmi:id="_BRhD0d9lEeyaYIzP8fvkgQ" name="" type="_A9NnwN9lEeyaYIzP8fvkgQ" association="_BRhD0N9lEeyaYIzP8fvkgQ"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_BRvGQd9lEeyaYIzP8fvkgQ" name="" memberEnd="_BRvGQt9lEeyaYIzP8fvkgQ _BO1jQN9lEeyaYIzP8fvkgQ">
            <ownedEnd xmi:id="_BRvGQt9lEeyaYIzP8fvkgQ" name="" type="_A8zYEN9lEeyaYIzP8fvkgQ" association="_BRvGQd9lEeyaYIzP8fvkgQ"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_BRvtUd9lEeyaYIzP8fvkgQ" name="" memberEnd="_BRvtUt9lEeyaYIzP8fvkgQ _BO2xYd9lEeyaYIzP8fvkgQ">
            <ownedEnd xmi:id="_BRvtUt9lEeyaYIzP8fvkgQ" name="" type="_A8zYEN9lEeyaYIzP8fvkgQ" association="_BRvtUd9lEeyaYIzP8fvkgQ"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_BRwUYd9lEeyaYIzP8fvkgQ" name="" memberEnd="_BRwUYt9lEeyaYIzP8fvkgQ _BO6bwN9lEeyaYIzP8fvkgQ">
            <ownedEnd xmi:id="_BRwUYt9lEeyaYIzP8fvkgQ" name="" type="_A8768N9lEeyaYIzP8fvkgQ" association="_BRwUYd9lEeyaYIzP8fvkgQ"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_BRw7cd9lEeyaYIzP8fvkgQ" name="" memberEnd="_BRw7ct9lEeyaYIzP8fvkgQ _BO7C0d9lEeyaYIzP8fvkgQ">
            <ownedEnd xmi:id="_BRw7ct9lEeyaYIzP8fvkgQ" name="" type="_A8768N9lEeyaYIzP8fvkgQ" association="_BRw7cd9lEeyaYIzP8fvkgQ"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_BRxigd9lEeyaYIzP8fvkgQ" name="" memberEnd="_BRxigt9lEeyaYIzP8fvkgQ _BO9fEN9lEeyaYIzP8fvkgQ">
            <ownedEnd xmi:id="_BRxigt9lEeyaYIzP8fvkgQ" name="" type="_A8768N9lEeyaYIzP8fvkgQ" association="_BRxigd9lEeyaYIzP8fvkgQ"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_BRyJkN9lEeyaYIzP8fvkgQ" name="" memberEnd="_BRyJkd9lEeyaYIzP8fvkgQ _BO-GId9lEeyaYIzP8fvkgQ">
            <ownedEnd xmi:id="_BRyJkd9lEeyaYIzP8fvkgQ" name="" type="_A8768N9lEeyaYIzP8fvkgQ" association="_BRyJkN9lEeyaYIzP8fvkgQ"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_BRzXsN9lEeyaYIzP8fvkgQ" name="" memberEnd="_BRzXsd9lEeyaYIzP8fvkgQ _BPHQEd9lEeyaYIzP8fvkgQ">
            <ownedEnd xmi:id="_BRzXsd9lEeyaYIzP8fvkgQ" name="" type="_A9fUkN9lEeyaYIzP8fvkgQ" association="_BRzXsN9lEeyaYIzP8fvkgQ"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_BRz-wN9lEeyaYIzP8fvkgQ" name="" memberEnd="_BRz-wd9lEeyaYIzP8fvkgQ _BPSPMt9lEeyaYIzP8fvkgQ">
            <ownedEnd xmi:id="_BRz-wd9lEeyaYIzP8fvkgQ" name="" type="_A96yYN9lEeyaYIzP8fvkgQ" association="_BRz-wN9lEeyaYIzP8fvkgQ"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_BRz-w99lEeyaYIzP8fvkgQ" name="" memberEnd="_BRz-xN9lEeyaYIzP8fvkgQ _BPS2Qd9lEeyaYIzP8fvkgQ">
            <ownedEnd xmi:id="_BRz-xN9lEeyaYIzP8fvkgQ" name="" type="_A96yYN9lEeyaYIzP8fvkgQ" association="_BRz-w99lEeyaYIzP8fvkgQ"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_BR1M4d9lEeyaYIzP8fvkgQ" name="" memberEnd="_BR1M4t9lEeyaYIzP8fvkgQ _BPTdUd9lEeyaYIzP8fvkgQ">
            <ownedEnd xmi:id="_BR1M4t9lEeyaYIzP8fvkgQ" name="" type="_A96yYN9lEeyaYIzP8fvkgQ" association="_BR1M4d9lEeyaYIzP8fvkgQ"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_BR1z8d9lEeyaYIzP8fvkgQ" name="" memberEnd="_BR1z8t9lEeyaYIzP8fvkgQ _BPUEYN9lEeyaYIzP8fvkgQ">
            <ownedEnd xmi:id="_BR1z8t9lEeyaYIzP8fvkgQ" name="" type="_A96yYN9lEeyaYIzP8fvkgQ" association="_BR1z8d9lEeyaYIzP8fvkgQ"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_BR2bAd9lEeyaYIzP8fvkgQ" name="" memberEnd="_BR2bAt9lEeyaYIzP8fvkgQ _BPUEYt9lEeyaYIzP8fvkgQ">
            <ownedEnd xmi:id="_BR2bAt9lEeyaYIzP8fvkgQ" name="" type="_A96yYN9lEeyaYIzP8fvkgQ" association="_BR2bAd9lEeyaYIzP8fvkgQ"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_BR3CEd9lEeyaYIzP8fvkgQ" name="" memberEnd="_BR3CEt9lEeyaYIzP8fvkgQ _BPVSgN9lEeyaYIzP8fvkgQ">
            <ownedEnd xmi:id="_BR3CEt9lEeyaYIzP8fvkgQ" name="" type="_A96yYN9lEeyaYIzP8fvkgQ" association="_BR3CEd9lEeyaYIzP8fvkgQ"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_BR3pId9lEeyaYIzP8fvkgQ" name="" memberEnd="_BR3pIt9lEeyaYIzP8fvkgQ _BPVSgt9lEeyaYIzP8fvkgQ">
            <ownedEnd xmi:id="_BR3pIt9lEeyaYIzP8fvkgQ" name="" type="_A96yYN9lEeyaYIzP8fvkgQ" association="_BR3pId9lEeyaYIzP8fvkgQ"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_BR4QMd9lEeyaYIzP8fvkgQ" name="" memberEnd="_BR4QMt9lEeyaYIzP8fvkgQ _BPhfwd9lEeyaYIzP8fvkgQ">
            <ownedEnd xmi:id="_BR4QMt9lEeyaYIzP8fvkgQ" name="" type="_A-EjYN9lEeyaYIzP8fvkgQ" association="_BR4QMd9lEeyaYIzP8fvkgQ"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_BR43Qd9lEeyaYIzP8fvkgQ" name="" memberEnd="_BR43Qt9lEeyaYIzP8fvkgQ _BPiG0N9lEeyaYIzP8fvkgQ">
            <ownedEnd xmi:id="_BR43Qt9lEeyaYIzP8fvkgQ" name="" type="_A-EjYN9lEeyaYIzP8fvkgQ" association="_BR43Qd9lEeyaYIzP8fvkgQ"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_BR6FYd9lEeyaYIzP8fvkgQ" name="" memberEnd="_BR6FYt9lEeyaYIzP8fvkgQ _BPiG0t9lEeyaYIzP8fvkgQ">
            <ownedEnd xmi:id="_BR6FYt9lEeyaYIzP8fvkgQ" name="" type="_A-EjYN9lEeyaYIzP8fvkgQ" association="_BR6FYd9lEeyaYIzP8fvkgQ"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_BR6scd9lEeyaYIzP8fvkgQ" name="" memberEnd="_BR6sct9lEeyaYIzP8fvkgQ _BPit4d9lEeyaYIzP8fvkgQ">
            <ownedEnd xmi:id="_BR6sct9lEeyaYIzP8fvkgQ" name="" type="_A-EjYN9lEeyaYIzP8fvkgQ" association="_BR6scd9lEeyaYIzP8fvkgQ"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_BR7Tgd9lEeyaYIzP8fvkgQ" name="" memberEnd="_BR7Tgt9lEeyaYIzP8fvkgQ _BPkjEN9lEeyaYIzP8fvkgQ">
            <ownedEnd xmi:id="_BR7Tgt9lEeyaYIzP8fvkgQ" name="" type="_A-EjYN9lEeyaYIzP8fvkgQ" association="_BR7Tgd9lEeyaYIzP8fvkgQ"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_BR76kd9lEeyaYIzP8fvkgQ" name="" memberEnd="_BR76kt9lEeyaYIzP8fvkgQ _BPlxMN9lEeyaYIzP8fvkgQ">
            <ownedEnd xmi:id="_BR76kt9lEeyaYIzP8fvkgQ" name="" type="_A-EjYN9lEeyaYIzP8fvkgQ" association="_BR76kd9lEeyaYIzP8fvkgQ"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_BR8hod9lEeyaYIzP8fvkgQ" name="" memberEnd="_BR8hot9lEeyaYIzP8fvkgQ _BPmYQN9lEeyaYIzP8fvkgQ">
            <ownedEnd xmi:id="_BR8hot9lEeyaYIzP8fvkgQ" name="" type="_A-EjYN9lEeyaYIzP8fvkgQ" association="_BR8hod9lEeyaYIzP8fvkgQ"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_A0FZkN9oEeyaYIzP8fvkgQ" name="Buffer"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_LLjYIN9yEeyaYIzP8fvkgQ" name="Tile"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_XUjp8N91EeyaYIzP8fvkgQ" name="boundingBox"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_A1cL0N9lEeyaYIzP8fvkgQ" name="game">
          <packagedElement xmi:type="uml:Class" xmi:id="_A8To0N9lEeyaYIzP8fvkgQ" name="Controller">
            <ownedAttribute xmi:id="_BOoH4N9lEeyaYIzP8fvkgQ" name="player" visibility="private" type="_A7tL4N9lEeyaYIzP8fvkgQ" association="_BRpmsd9lEeyaYIzP8fvkgQ"/>
            <ownedAttribute xmi:id="_BOou8d9lEeyaYIzP8fvkgQ" name="engine" visibility="private" type="_A8768N9lEeyaYIzP8fvkgQ" association="_BRqNwd9lEeyaYIzP8fvkgQ"/>
            <ownedAttribute xmi:id="_BOpWAN9lEeyaYIzP8fvkgQ" name="speed" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BOp9EN9lEeyaYIzP8fvkgQ" name="pressedB" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BOp9Et9lEeyaYIzP8fvkgQ" name="pressedSPACE" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BOqkId9lEeyaYIzP8fvkgQ" name="idleTime" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BOrLMd9lEeyaYIzP8fvkgQ" name="sleepTime" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQcs0N9lEeyaYIzP8fvkgQ" name="Controller" specification="_BLhJgN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQcs0d9lEeyaYIzP8fvkgQ" name="player" type="_A7tL4N9lEeyaYIzP8fvkgQ"/>
              <ownedParameter xmi:id="_BQcs0t9lEeyaYIzP8fvkgQ" name="engine" type="_A8768N9lEeyaYIzP8fvkgQ"/>
              <ownedParameter xmi:id="_BQcs099lEeyaYIzP8fvkgQ" type="_A8To0N9lEeyaYIzP8fvkgQ" direction="return"/>
              <language>java</language>
              <body>// get a reference for the player&#xD;
		this.player = player;&#xD;
		// get a reference for the engine&#xD;
		this.engine = engine;&#xD;
		&#xD;
		// default movement speed of the player&#xD;
		this.speed = 20f;&#xD;
		&#xD;
		// boolean variables for keeping track if the buttons B&#xD;
		this.pressedB = false;&#xD;
		// and SPACEBAR have been pressed&#xD;
		this.pressedSPACE = false;&#xD;
		&#xD;
		// initialize the timers to the current time&#xD;
		this.idleTime = System.nanoTime() / (double)1000000000L;&#xD;
		this.sleepTime = System.nanoTime() / (double)1000000000L;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQcs1N9lEeyaYIzP8fvkgQ" name="pollEvents" specification="_A8X6QN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQcs1d9lEeyaYIzP8fvkgQ" name="window">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
              </ownedParameter>
              <language>java</language>
              <body>// poll the events from the window&#xD;
		glfwPollEvents();&#xD;
	&#xD;
		// polar coordinates to apply a force to the player corresponding to the inputs&#xD;
		float distance = 0;&#xD;
		float direction = 0;&#xD;
		&#xD;
		// boolean variables to keep track of which keys are beeing pressed&#xD;
		boolean A = false;&#xD;
		boolean D = false;&#xD;
		boolean S = false;&#xD;
		&#xD;
		// if the user is pressing A&#xD;
		if (glfwGetKey(window, GLFW_KEY_A) == GL_TRUE) {&#xD;
			A = true;&#xD;
		}&#xD;
		// if the user is pressing D&#xD;
		else if (glfwGetKey(window, GLFW_KEY_D) == GL_TRUE) {&#xD;
			D = true;&#xD;
		}&#xD;
		&#xD;
		// if the user is pressing S&#xD;
		if (glfwGetKey(window, GLFW_KEY_S) == GL_TRUE) {&#xD;
			S = true;&#xD;
		}&#xD;
		&#xD;
		// check if the user pressed B, works like a switch&#xD;
		if (glfwGetKey(window, GLFW_KEY_B) == GL_TRUE &amp;&amp; !this.pressedB) {&#xD;
			// keep track of the button being pressed&#xD;
			this.pressedB = true;&#xD;
			&#xD;
			// switch the debug state of the engine (show bounding boxes)&#xD;
			if (this.engine.getDebug()) {&#xD;
				this.engine.setDebug(false);&#xD;
			} else {&#xD;
				this.engine.setDebug(true);&#xD;
			}&#xD;
				&#xD;
		}&#xD;
		// if the B key is released&#xD;
		else if (glfwGetKey(window, GLFW_KEY_B) != GL_TRUE) {&#xD;
			// keep track of the button being released&#xD;
			this.pressedB = false;&#xD;
		}&#xD;
		&#xD;
		// if the user pressed the key ESCAPE&#xD;
		if (glfwGetKey(window, GLFW_KEY_ESCAPE) == GL_TRUE) {&#xD;
			// close the window&#xD;
			glfwSetWindowShouldClose(window, true);&#xD;
		}&#xD;
		&#xD;
		// check if the user pressed SPACEBAR, works like a switch&#xD;
		if (glfwGetKey(window, GLFW_KEY_SPACE) == GL_TRUE &amp;&amp; !this.pressedSPACE) {&#xD;
			// keep track of the button being pressed&#xD;
			this.pressedSPACE = true;&#xD;
			&#xD;
			// if the player can jump&#xD;
			if (this.player.canJump()) {&#xD;
				// if the player can super jump&#xD;
				if (this.player.canSuperJump()) {&#xD;
					// superjump&#xD;
					this.player.superJump();&#xD;
				} else {&#xD;
					// otherwise do a normal jump&#xD;
					this.player.jump();&#xD;
				}	&#xD;
			}&#xD;
			&#xD;
		}&#xD;
		// if the SPACEBAR key is released&#xD;
		else if (glfwGetKey(window, GLFW_KEY_SPACE) != GL_TRUE) {&#xD;
			// keep track of the button being released&#xD;
			this.pressedSPACE = false;&#xD;
		}&#xD;
		&#xD;
		// calculate the direction to apply the movement force&#xD;
		if (S &amp;&amp; A) { // bottom left&#xD;
			// set the angle of the force&#xD;
												  //    _&#xD;
			 									  //  /   \&#xD;
			direction = (float)Math.PI * 5f / 4f; // |  o  |  &#xD;
												  //  \/_ /&#xD;
			distance = speed; // set the strength of the force&#xD;
		}&#xD;
		else if (S &amp;&amp; D) { // bottom right&#xD;
												  //    _&#xD;
												  //  /   \&#xD;
			direction = (float)Math.PI * 7f / 4f; // |  o  |&#xD;
												  //  \ _\/&#xD;
			distance = speed; // set the strength of the force&#xD;
		} &#xD;
		else if (D) { // right&#xD;
			  									  //    _&#xD;
												  //  /   \&#xD;
			direction = 0; 						  // |  o--|&#xD;
												  //  \ _ /&#xD;
			distance = speed; // set the strength of the force&#xD;
		}&#xD;
		else if (A) { // left&#xD;
												  //	_&#xD;
												  //  /   \&#xD;
			direction = (float)Math.PI;			  // |--o  |&#xD;
												  //  \ _ /&#xD;
			distance = speed; // set the strength of the force&#xD;
		}&#xD;
		else if (S) { // down&#xD;
												  //	_&#xD;
												  //  /   \&#xD;
			direction = (float)Math.PI * 3f / 2f; // |  o  |&#xD;
												  //  \ | /&#xD;
			distance = speed; // set the strength of the force&#xD;
		}&#xD;
		&#xD;
		&#xD;
		// check if the player should be crouching or not&#xD;
		if (S) {&#xD;
			this.player.setCrouching(true);&#xD;
		} else {&#xD;
			this.player.setCrouching(false);&#xD;
		}&#xD;
		&#xD;
		// apply the force to the player&#xD;
		this.player.applyForcePolar(distance, direction);&#xD;
		&#xD;
		&#xD;
		// check if the player should go into idle and sleeping animations&#xD;
		if (!A &amp;&amp; !D &amp;&amp; !S &amp;&amp; !this.player.isAirborne()) {&#xD;
			// check the current time&#xD;
			double timeNow = System.nanoTime() / (double)1000000000L;&#xD;
			// calculate the time elapsed for idling&#xD;
			double delta = timeNow - this.idleTime;&#xD;
			// calculate the time elapsed for sleeping&#xD;
			double deltaSleep = timeNow - this.sleepTime;&#xD;
			&#xD;
			// if 5s passed without player inputs&#xD;
			if (delta >= 5.0) {&#xD;
				// enable idling&#xD;
				this.player.setIdle(true);&#xD;
				// if 9s passed&#xD;
				if (delta >= 9.0) {&#xD;
					// disable idling&#xD;
					this.player.setIdle(false);&#xD;
					// restart the timer&#xD;
					this.idleTime = System.nanoTime() / (double)1000000000L;&#xD;
				}&#xD;
			}&#xD;
			&#xD;
			// if 30s passed without player inputs&#xD;
			if (deltaSleep >= 30.0) {&#xD;
				// enable the state of going to sleep&#xD;
				this.player.setGoingToSleep(true);&#xD;
				// if 32s passed without player inputs&#xD;
				if (deltaSleep >= 32.0) {&#xD;
					// enable sleeping&#xD;
					this.player.setSleep(true);&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		// if the player moved or is falling&#xD;
		else {&#xD;
			// reset all the timers&#xD;
			this.idleTime = System.nanoTime() / (double)1000000000L;&#xD;
			this.sleepTime = System.nanoTime() / (double)1000000000L;&#xD;
			// disable all the idling and sleeping states&#xD;
			this.player.setIdle(false);&#xD;
			this.player.setGoingToSleep(false);&#xD;
			this.player.setSleep(false);&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_A8X6QN9lEeyaYIzP8fvkgQ" name="pollEvents" method="_BQcs1N9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A8X6Qd9lEeyaYIzP8fvkgQ" name="window">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_BLhJgN9lEeyaYIzP8fvkgQ" name="Controller" method="_BQcs0N9lEeyaYIzP8fvkgQ">
              <eAnnotations xmi:id="_BLhJg99lEeyaYIzP8fvkgQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_BLhJhN9lEeyaYIzP8fvkgQ" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_BLhJgd9lEeyaYIzP8fvkgQ" name="player" type="_A7tL4N9lEeyaYIzP8fvkgQ"/>
              <ownedParameter xmi:id="_BLhJgt9lEeyaYIzP8fvkgQ" name="engine" type="_A8768N9lEeyaYIzP8fvkgQ"/>
              <ownedParameter xmi:id="_BLhJhd9lEeyaYIzP8fvkgQ" type="_A8To0N9lEeyaYIzP8fvkgQ" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_A8cywN9lEeyaYIzP8fvkgQ" name="Game">
            <ownedAttribute xmi:id="_BOsZUN9lEeyaYIzP8fvkgQ" name="entityBuffer" visibility="private" type="_A6aLYN9lEeyaYIzP8fvkgQ" isOrdered="true" association="_BRq00d9lEeyaYIzP8fvkgQ">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BOsZUd9lEeyaYIzP8fvkgQ" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BOtAYN9lEeyaYIzP8fvkgQ" name="worldSizeX" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BOtAYt9lEeyaYIzP8fvkgQ" name="worldSizeY" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BOtncd9lEeyaYIzP8fvkgQ" name="world" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BOtnct9lEeyaYIzP8fvkgQ" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BOuOgd9lEeyaYIzP8fvkgQ" name="background" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BOu1kN9lEeyaYIzP8fvkgQ" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BOvcoN9lEeyaYIzP8fvkgQ" name="worldHitboxes" visibility="private" type="_A6vikN9lEeyaYIzP8fvkgQ" isOrdered="true" association="_BRrb4d9lEeyaYIzP8fvkgQ">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BOvcod9lEeyaYIzP8fvkgQ" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BOvco99lEeyaYIzP8fvkgQ" name="timer" visibility="private" type="_A90EsN9lEeyaYIzP8fvkgQ" association="_BRsC8d9lEeyaYIzP8fvkgQ"/>
            <ownedAttribute xmi:id="_BOwDsd9lEeyaYIzP8fvkgQ" name="engine" visibility="private" type="_A8768N9lEeyaYIzP8fvkgQ" association="_BRsqAd9lEeyaYIzP8fvkgQ"/>
            <ownedAttribute xmi:id="_BOxR0N9lEeyaYIzP8fvkgQ" name="controller" visibility="private" type="_A8To0N9lEeyaYIzP8fvkgQ" association="_BRtREd9lEeyaYIzP8fvkgQ"/>
            <ownedAttribute xmi:id="_BOx44N9lEeyaYIzP8fvkgQ" name="window" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BOyf8N9lEeyaYIzP8fvkgQ" name="winTimer" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BOyf8t9lEeyaYIzP8fvkgQ" name="mixer" visibility="private" type="_A9THUN9lEeyaYIzP8fvkgQ" association="_BRt4Id9lEeyaYIzP8fvkgQ"/>
            <ownedAttribute xmi:id="_BOzHAd9lEeyaYIzP8fvkgQ" name="audioContext" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BOzuEd9lEeyaYIzP8fvkgQ" name="audioDevice" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_BO0VIN9lEeyaYIzP8fvkgQ" name="resizeWindow" visibility="private" type="_BLmCAd9lEeyaYIzP8fvkgQ" association="_BRufMd9lEeyaYIzP8fvkgQ">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_BO0VId9lEeyaYIzP8fvkgQ" value="new GLFWFramebufferSizeCallback() {&#xD;&#xA;&#x9;&#x9;public void invoke(long window, int width, int height){&#xD;&#xA;&#x9;&#x9;&#x9;engine.setWindowSize(width, height);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQdT4N9lEeyaYIzP8fvkgQ" name="Game" specification="_A8hrQN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQdT4d9lEeyaYIzP8fvkgQ" type="_A8cywN9lEeyaYIzP8fvkgQ" direction="return"/>
              <language>java</language>
              <body>// initialize the window&#xD;
		this.initWindow();&#xD;
		&#xD;
		// initialize the buffers&#xD;
		this.entityBuffer = new ArrayList&lt;Entity>();&#xD;
		this.worldHitboxes = new ArrayList&lt;Hitbox>();&#xD;
		&#xD;
		// initialize the timer&#xD;
		this.timer = new Timer();&#xD;
		// and set the tickrate to 60tps&#xD;
		this.timer.setFramerate(60);&#xD;
		&#xD;
		// initialize the engine to render on the window&#xD;
		this.engine = new Engine(this.window);&#xD;
		// load the tilemap&#xD;
		this.engine.loadTiles(&quot;./assets/world/adventure pack/Assets.png&quot;, 25, 25);&#xD;
		&#xD;
		// define the world size&#xD;
		this.worldSizeX = 118;&#xD;
		this.worldSizeY = 69;&#xD;
		&#xD;
		// initialize the world and background tile values&#xD;
		this.world = new int[this.worldSizeX][this.worldSizeY];&#xD;
		this.background = new int[this.worldSizeX][this.worldSizeY];&#xD;
		&#xD;
		for (int i = 0; i &lt; this.worldSizeX; i++) {&#xD;
			for (int j = 0; j &lt; this.worldSizeY; j++) {&#xD;
				this.world[i][j] = -1;&#xD;
				this.background[i][j] = -1;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		this.mixer = new Mixer();&#xD;
		&#xD;
		// load the starting tiles&#xD;
		this.loadStartingEntities();&#xD;
		&#xD;
		// load the starting entities&#xD;
		this.loadStartingTiles();&#xD;
		&#xD;
		// initialize the controller that controls the player&#xD;
		this.controller = new Controller((Player)this.findByName(&quot;player&quot;, this.entityBuffer), this.engine);&#xD;
		&#xD;
		this.winTimer = 0;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQd68N9lEeyaYIzP8fvkgQ" name="loop" specification="_A8i5YN9lEeyaYIzP8fvkgQ">
              <language>java</language>
              <body>// run until the window should run&#xD;
		while (!glfwWindowShouldClose(this.window)) {&#xD;
			// makes the updates happen only after the tick time has passed (60 ticks per second, every 1/60s)&#xD;
			while(this.timer.elapsed()) {&#xD;
				// listen for inputs from the user&#xD;
				this.controller.pollEvents(this.window);&#xD;
				// update the entities accordingly&#xD;
				this.updateEntities();&#xD;
				// allow the renderer to render on the window (this allows to lock the framerate to the tick rate, but not vice versa&#xD;
				this.engine.enableRender();&#xD;
			}&#xD;
			&#xD;
			// if the engine can render to screen (once every 1/60s)&#xD;
			if (this.engine.canRender()) {&#xD;
				// render the background tiles, the foreground tiles and the entities (in that order) while keeping track of the time to do that&#xD;
				double time = this.engine.render(this.entityBuffer, this.world, this.background);&#xD;
				// print the frame time and fps info&#xD;
				this.timer.fps(time);&#xD;
			}&#xD;
			&#xD;
			if (this.winTimer != 0) {&#xD;
				this.executeWin();&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		// destroy audio&#xD;
		alcDestroyContext(this.audioContext);&#xD;
		alcCloseDevice(this.audioDevice);&#xD;
		&#xD;
		// terminate the window&#xD;
		glfwTerminate();&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQd68d9lEeyaYIzP8fvkgQ" name="updateEntities" specification="_A8kHgN9lEeyaYIzP8fvkgQ">
              <language>java</language>
              <body>// scroll through the entities&#xD;
		for (int i = 0; i &lt; this.entityBuffer.size(); i++) {&#xD;
			Entity current = this.entityBuffer.get(i);&#xD;
			&#xD;
			if (current.isToRemove()) {&#xD;
				entityBuffer.remove(i);&#xD;
				i--;&#xD;
			} else {&#xD;
				// update the AI of the enemy&#xD;
				if (current instanceof Enemy) {&#xD;
					Enemy currentEnemy = (Enemy)current;&#xD;
					currentEnemy.control();&#xD;
				}&#xD;
				&#xD;
				// update the timers on the player&#xD;
				if (current instanceof Player) {&#xD;
					Player player = (Player)current;&#xD;
					player.calculateState();&#xD;
				}&#xD;
				&#xD;
				if (current instanceof Portal) {&#xD;
					Portal portal = (Portal)current;&#xD;
					&#xD;
					if (portal.getWin() &amp;&amp; this.winTimer == 0) {&#xD;
						this.winTimer = System.nanoTime() / 1000000000L;&#xD;
					}&#xD;
				}&#xD;
				&#xD;
				// calculate the new position of the entity (influenced by force, acceleration and speed)&#xD;
				current.calculatePosition();&#xD;
				&#xD;
				// check for collisions against hitboxes or other entities and update the position to resolve the collision&#xD;
				current.checkCollision(new LinkedList&lt;IPhysicsBody>(this.entityBuffer), false);&#xD;
				current.checkCollision(new LinkedList&lt;IPhysicsBody>(this.worldHitboxes), true);&#xD;
				&#xD;
				// if we're updating the position of the player&#xD;
				if (current instanceof Player) {&#xD;
					// move the camera according to the new position of the player&#xD;
					this.engine.camera.setPosition(new Vector3f(-current.model.getX(), -current.model.getY(), 0));&#xD;
				}&#xD;
				&#xD;
				// update the animation of the entity&#xD;
				current.updateAnimation();&#xD;
			}&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQd68t9lEeyaYIzP8fvkgQ" name="initWindow" specification="_A8kukN9lEeyaYIzP8fvkgQ">
              <language>java</language>
              <body>// check if glwf can be initialized&#xD;
		if (!glfwInit()) {&#xD;
			throw new IllegalStateException(&quot;Failed to initialize GLFW!&quot;);&#xD;
		}&#xD;
		&#xD;
		glfwWindowHint(GLFW_VISIBLE, GLFW_FALSE);&#xD;
		&#xD;
		// create a new glfw window of resolution 640x480&#xD;
		this.window = glfwCreateWindow(1280, 720, &quot;LWJGL&quot;, 0, 0);&#xD;
		&#xD;
		// check if the window was succesfully created&#xD;
		if (this.window == 0) {&#xD;
			throw new IllegalStateException(&quot;Failed to create window!&quot;);&#xD;
		}&#xD;
		&#xD;
		// get the screen resolution&#xD;
		GLFWVidMode videoMode = glfwGetVideoMode(glfwGetPrimaryMonitor());&#xD;
		&#xD;
		// place the window at the center of the screen&#xD;
		glfwSetWindowPos(this.window, (videoMode.width() - 1280) / 2, (videoMode.height() - 720) / 2);&#xD;
		// make the window visible&#xD;
		glfwShowWindow(this.window);&#xD;
		// update the framebuffer and camera to adapt to the new resolution when the window is resized&#xD;
		glfwSetFramebufferSizeCallback(this.window, this.resizeWindow);&#xD;
		&#xD;
		// AUDIO&#xD;
		String defaultDeviceName = alcGetString(0, ALC_DEFAULT_DEVICE_SPECIFIER);&#xD;
		&#xD;
		if (defaultDeviceName == null) {&#xD;
			System.out.println(&quot;No audio device found&quot;);&#xD;
		} else {&#xD;
			this.audioDevice = alcOpenDevice(defaultDeviceName);&#xD;
			&#xD;
			int[] attributes = {0};&#xD;
			this.audioContext = alcCreateContext(audioDevice, attributes);&#xD;
			&#xD;
			alcMakeContextCurrent(this.audioContext);&#xD;
			&#xD;
			ALCCapabilities alcCapabilities = ALC.createCapabilities(this.audioDevice);&#xD;
			ALCapabilities alCapabilities = AL.createCapabilities(alcCapabilities);&#xD;
			&#xD;
			if (!alCapabilities.OpenAL10) {&#xD;
				assert false : &quot;Audio library not supported&quot;;&#xD;
			}&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQd6899lEeyaYIzP8fvkgQ" name="loadStartingEntities" specification="_A8lVoN9lEeyaYIzP8fvkgQ">
              <language>java</language>
              <body>int mapX = -this.worldSizeX / 2 * this.engine.getTileSize();&#xD;
		int mapY = (-this.worldSizeY / 2 + 5) * this.engine.getTileSize();&#xD;
		&#xD;
		// creating the entity objects&#xD;
		Player player = new Player();&#xD;
		Enemy enemy = new Enemy(player);&#xD;
		Enemy enemy2 = new Enemy(player);&#xD;
		Enemy enemy3 = new Enemy(player);&#xD;
		Boss boss = new Boss(player, this.entityBuffer, this.mixer);&#xD;
		&#xD;
		// giving them a name&#xD;
		player.setName(&quot;player&quot;);&#xD;
		enemy.setName(&quot;enemy&quot;);&#xD;
		enemy2.setName(&quot;enemy2&quot;);&#xD;
		enemy3.setName(&quot;enemy3&quot;);&#xD;
		boss.setName(&quot;boss&quot;);&#xD;
		&#xD;
		// setting the parameters of each object&#xD;
		player.loadAnimationAndAdapt(&quot;./assets/textures/gally5.png&quot;, 3, 10);&#xD;
		player.model.setAnimationSpeed(10f);&#xD;
		player.setPosition(mapX + 1300, mapY + 1753);&#xD;
		player.setScale(0.5f);&#xD;
//		player.model.setBBScale(0.75f, 1f);&#xD;
		player.setBBWidth(player.getBBWidth() * 0.75f);&#xD;
		player.setBBHeight(player.getBBHeight() * 1f);&#xD;
		player.allert.loadAnimationAndAdapt(&quot;./assets/textures/allert.png&quot;, 2, 3);&#xD;
		player.setSleep(true);&#xD;
		&#xD;
		enemy.loadAnimationAndAdapt(&quot;./assets/textures/enemy.png&quot;, 2, 2);&#xD;
		enemy.model.setAnimationSpeed(10f);&#xD;
		enemy.setPosition(mapX + 61 * this.engine.getTileSize(), mapY + 2500);&#xD;
		enemy.setScale(0.5f);&#xD;
		enemy.setBBWidth(enemy.getBBWidth() * 0.75f);&#xD;
		enemy.setBehaviour(1);&#xD;
		&#xD;
		enemy2.loadAnimationAndAdapt(&quot;./assets/textures/enemy.png&quot;, 2, 2);&#xD;
		enemy2.model.setAnimationSpeed(10f);&#xD;
//		enemy2.setPosition(mapX + 59 * this.engine.getTileSize(), mapY + 2500);&#xD;
		enemy2.setPosition(mapX + 1700, mapY + 1160);&#xD;
		enemy2.setScale(0.5f);&#xD;
		enemy2.setBBWidth(enemy2.getBBWidth() * 0.75f);&#xD;
		enemy2.setBehaviour(0);&#xD;
		&#xD;
		enemy3.loadAnimationAndAdapt(&quot;./assets/textures/enemy.png&quot;, 2, 2);&#xD;
		enemy3.model.setAnimationSpeed(10f);&#xD;
		enemy3.setPosition(mapX + 79 * this.engine.getTileSize(), mapY + 50 * this.engine.getTileSize());&#xD;
		enemy3.setScale(0.5f);&#xD;
		enemy3.setBBWidth(enemy3.getBBWidth() * 0.75f);&#xD;
		enemy3.setSpeed(5);&#xD;
		enemy3.setBehaviour(1);&#xD;
		&#xD;
		boss.loadAnimationAndAdapt(&quot;./assets/textures/boss2.png&quot;, 2, 2);&#xD;
		boss.model.setAnimationSpeed(10f);&#xD;
		boss.setPosition(mapX + 97 * this.engine.getTileSize(), mapY + 9 * this.engine.getTileSize());&#xD;
		boss.setScale(1.5f);&#xD;
		boss.setBBWidth(boss.getBBWidth() * 0.75f);&#xD;
		&#xD;
		&#xD;
		DoubleJump powerup = new DoubleJump();&#xD;
		powerup.setPosition((-this.worldSizeX / 2 + 49) * this.engine.getTileSize(), (-this.worldSizeY / 2 + 18 + 5) * this.engine.getTileSize());&#xD;
		&#xD;
		this.entityBuffer.add(player);&#xD;
		this.entityBuffer.add(enemy);&#xD;
		this.entityBuffer.add(enemy2);&#xD;
		this.entityBuffer.add(enemy3);&#xD;
		this.entityBuffer.add(powerup);&#xD;
		this.entityBuffer.add(boss);&#xD;
		&#xD;
		Collectible portal = new Portal();&#xD;
		&#xD;
		portal.setPosition(mapX + 1300, mapY + 1753);&#xD;
		this.entityBuffer.add(portal);&#xD;
		&#xD;
		for (int i = 0; i &lt; 10; i++) {&#xD;
			Coin coin = new Coin();&#xD;
			coin.setPosition((-this.worldSizeX / 2)     * this.engine.getTileSize() + ((31 + (i % 2)) * this.engine.getTileSize()),&#xD;
							 (-this.worldSizeY / 2 + 5) * this.engine.getTileSize() + ((27 - (i / 2)) * this.engine.getTileSize()));&#xD;
			this.entityBuffer.add(coin);&#xD;
		}&#xD;
&#xD;
		Coin coin = new Coin();&#xD;
		coin.setPosition(mapX + 63 * this.engine.getTileSize(), mapY + 37 * this.engine.getTileSize());&#xD;
		this.entityBuffer.add(coin);&#xD;
		&#xD;
		Coin coin1 = new Coin();&#xD;
		coin1.setPosition(mapX + 63 * this.engine.getTileSize(), mapY + 45 * this.engine.getTileSize());&#xD;
		this.entityBuffer.add(coin1);&#xD;
		&#xD;
		Coin coin2 = new Coin();&#xD;
		coin2.setPosition(mapX + 67 * this.engine.getTileSize(), mapY + 41 * this.engine.getTileSize());&#xD;
		this.entityBuffer.add(coin2);&#xD;
		&#xD;
		Coin coin3 = new Coin();&#xD;
		coin3.setPosition(mapX + 93 * this.engine.getTileSize(), mapY + 55 * this.engine.getTileSize());&#xD;
		this.entityBuffer.add(coin3);&#xD;
		&#xD;
		Coin coin4 = new Coin();&#xD;
		coin4.setPosition(mapX + 91 * this.engine.getTileSize(), mapY + 48 * this.engine.getTileSize());&#xD;
		this.entityBuffer.add(coin4);&#xD;
		Coin coin5 = new Coin();&#xD;
		coin5.setPosition(mapX + 91 * this.engine.getTileSize(), mapY + 42 * this.engine.getTileSize());&#xD;
		this.entityBuffer.add(coin5);&#xD;
		Coin coin6 = new Coin();&#xD;
		coin6.setPosition(mapX + 91 * this.engine.getTileSize(), mapY + 36 * this.engine.getTileSize());&#xD;
		this.entityBuffer.add(coin6);&#xD;
		Coin coin7 = new Coin();&#xD;
		coin7.setPosition(mapX + 90 * this.engine.getTileSize(), mapY + 30 * this.engine.getTileSize());&#xD;
		this.entityBuffer.add(coin7);&#xD;
		Coin coin8 = new Coin();&#xD;
		coin8.setPosition(mapX + 89 * this.engine.getTileSize(), mapY + 24 * this.engine.getTileSize());&#xD;
		this.entityBuffer.add(coin8);&#xD;
		Coin coin9 = new Coin();&#xD;
		coin9.setPosition(mapX + 88 * this.engine.getTileSize(), mapY + 18 * this.engine.getTileSize());&#xD;
		this.entityBuffer.add(coin9);&#xD;
		Coin coin10 = new Coin();&#xD;
		coin10.setPosition(mapX + 86 * this.engine.getTileSize(), mapY + 14 * this.engine.getTileSize());&#xD;
		this.entityBuffer.add(coin10);&#xD;
		&#xD;
		Coin coin11 = new Coin();&#xD;
		coin11.setPosition(mapX + 97 * this.engine.getTileSize(), mapY + 15 * this.engine.getTileSize());&#xD;
		this.entityBuffer.add(coin11);		&#xD;
		&#xD;
		this.mixer.uploadSong(&quot;./assets/sounds/normalTheme.ogg&quot;, true);&#xD;
		this.mixer.uploadSong(&quot;./assets/sounds/winTheme.ogg&quot;, true);&#xD;
		this.mixer.uploadSong(&quot;./assets/sounds/bossTheme2.ogg&quot;, true);&#xD;
		&#xD;
		this.mixer.playSong(0);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQd69N9lEeyaYIzP8fvkgQ" name="loadStartingTiles" specification="_A8lVod9lEeyaYIzP8fvkgQ">
              <language>java</language>
              <body>// application position of the map (so everything can be in relation to this&#xD;
		int mapX = -this.worldSizeX / 2;&#xD;
		int mapY = -this.worldSizeY / 2;&#xD;
		&#xD;
		// create a background structure, this will not have hitboxes and will function as a background for the foreground tiles&#xD;
		Structure background = new Structure();&#xD;
		background.loadStructure(&quot;./assets/world/adventure pack/background.str&quot;);&#xD;
		background.applyStructure(mapX, mapY, this.background);&#xD;
		&#xD;
		// additional structures to add to the existing foreground and background areas for ease of use&#xD;
		Structure jumpPower = new Structure();&#xD;
		jumpPower.loadStructure(&quot;./assets/world/adventure pack/jumpPower.str&quot;);&#xD;
		jumpPower.applyStructure(mapX + 31, mapY + 25, this.world);&#xD;
		jumpPower.applyStructure(mapX + 32, mapY + 25, this.world);&#xD;
		&#xD;
		Structure tree = new Structure();&#xD;
		tree.loadStructureWithHitbox(&quot;./assets/world/adventure pack/trees.str&quot;, this.engine.getTileSize());&#xD;
		tree.applyStructureWithHitbox(mapX + 3, mapY + 32, this.world, this.worldHitboxes);&#xD;
		&#xD;
		Structure treeBackground = new Structure();&#xD;
		treeBackground.loadStructure(&quot;./assets/world/adventure pack/treesB.str&quot;);&#xD;
		treeBackground.applyStructure(mapX + 3, mapY + 32, this.background);	&#xD;
		&#xD;
		Structure platformTree = new Structure();&#xD;
		platformTree.loadStructureWithHitbox(&quot;./assets/world/adventure pack/platformTree.str&quot;, this.engine.getTileSize());&#xD;
		platformTree.applyStructureWithHitbox(mapX + 54, mapY + 36, this.world, this.worldHitboxes);&#xD;
		&#xD;
		Structure platformTreeB = new Structure();&#xD;
		platformTreeB.loadStructure(&quot;./assets/world/adventure pack/platformTreeB.str&quot;);&#xD;
		platformTreeB.applyStructure(mapX + 54, mapY + 36, this.background);&#xD;
		&#xD;
		// create a foreground structure, this will contain the tiles that can be collided with, and will function as the interactive part of the map&#xD;
		Structure map = new Structure();&#xD;
		map.loadStructureWithHitbox(&quot;./assets/world/adventure pack/map.str&quot;, this.engine.getTileSize());&#xD;
		map.applyStructureWithHitbox(mapX, mapY, this.world, this.worldHitboxes);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQd69d9lEeyaYIzP8fvkgQ" name="executeWin" specification="_A8mjwN9lEeyaYIzP8fvkgQ">
              <language>java</language>
              <body>double current = System.nanoTime() / 1000000000L;&#xD;
		double delta = current - this.winTimer;&#xD;
		&#xD;
		if (delta != 0) {&#xD;
			int displayNumber = (int)delta;&#xD;
			this.engine.ui.setWinTimer(10 - displayNumber);&#xD;
			&#xD;
			if (delta >= 10) {&#xD;
				glfwSetWindowShouldClose(this.window, true);&#xD;
			}&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQeiAN9lEeyaYIzP8fvkgQ" name="findByName" specification="_BNUgUN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQeiAd9lEeyaYIzP8fvkgQ" name="name">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BQeiAt9lEeyaYIzP8fvkgQ" name="entityBuffer" type="_BKvtcN9lEeyaYIzP8fvkgQ"/>
              <ownedParameter xmi:id="_BQeiA99lEeyaYIzP8fvkgQ" type="_A6aLYN9lEeyaYIzP8fvkgQ" direction="return"/>
              <language>java</language>
              <body>for (int i = 0; i &lt; entityBuffer.size(); i++) {&#xD;
			if (entityBuffer.get(i).getName() == name) {&#xD;
				return(entityBuffer.get(i));&#xD;
			}&#xD;
		}&#xD;
		return(null);&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_A8hrQN9lEeyaYIzP8fvkgQ" name="Game" method="_BQdT4N9lEeyaYIzP8fvkgQ">
              <eAnnotations xmi:id="_A8iSUN9lEeyaYIzP8fvkgQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_A8iSUd9lEeyaYIzP8fvkgQ" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_A8iSUt9lEeyaYIzP8fvkgQ" type="_A8cywN9lEeyaYIzP8fvkgQ" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_A8i5YN9lEeyaYIzP8fvkgQ" name="loop" method="_BQd68N9lEeyaYIzP8fvkgQ"/>
            <ownedOperation xmi:id="_A8kHgN9lEeyaYIzP8fvkgQ" name="updateEntities" method="_BQd68d9lEeyaYIzP8fvkgQ"/>
            <ownedOperation xmi:id="_A8kukN9lEeyaYIzP8fvkgQ" name="initWindow" visibility="private" method="_BQd68t9lEeyaYIzP8fvkgQ"/>
            <ownedOperation xmi:id="_A8lVoN9lEeyaYIzP8fvkgQ" name="loadStartingEntities" visibility="private" method="_BQd6899lEeyaYIzP8fvkgQ"/>
            <ownedOperation xmi:id="_A8lVod9lEeyaYIzP8fvkgQ" name="loadStartingTiles" visibility="private" method="_BQd69N9lEeyaYIzP8fvkgQ"/>
            <ownedOperation xmi:id="_A8mjwN9lEeyaYIzP8fvkgQ" name="executeWin" method="_BQd69d9lEeyaYIzP8fvkgQ"/>
            <ownedOperation xmi:id="_BNUgUN9lEeyaYIzP8fvkgQ" name="findByName" method="_BQeiAN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BNUgUd9lEeyaYIzP8fvkgQ" name="name">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_BNVHYN9lEeyaYIzP8fvkgQ" name="entityBuffer" type="_BKvtcN9lEeyaYIzP8fvkgQ"/>
              <ownedParameter xmi:id="_BNVHYd9lEeyaYIzP8fvkgQ" type="_A6aLYN9lEeyaYIzP8fvkgQ" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_BRpmsd9lEeyaYIzP8fvkgQ" name="" memberEnd="_BRpmst9lEeyaYIzP8fvkgQ _BOoH4N9lEeyaYIzP8fvkgQ">
            <ownedEnd xmi:id="_BRpmst9lEeyaYIzP8fvkgQ" name="" type="_A8To0N9lEeyaYIzP8fvkgQ" association="_BRpmsd9lEeyaYIzP8fvkgQ"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_BRqNwd9lEeyaYIzP8fvkgQ" name="" memberEnd="_BRqNwt9lEeyaYIzP8fvkgQ _BOou8d9lEeyaYIzP8fvkgQ">
            <ownedEnd xmi:id="_BRqNwt9lEeyaYIzP8fvkgQ" name="" type="_A8To0N9lEeyaYIzP8fvkgQ" association="_BRqNwd9lEeyaYIzP8fvkgQ"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_BRq00d9lEeyaYIzP8fvkgQ" name="" memberEnd="_BRq00t9lEeyaYIzP8fvkgQ _BOsZUN9lEeyaYIzP8fvkgQ">
            <ownedEnd xmi:id="_BRq00t9lEeyaYIzP8fvkgQ" name="" type="_A8cywN9lEeyaYIzP8fvkgQ" association="_BRq00d9lEeyaYIzP8fvkgQ"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_BRrb4d9lEeyaYIzP8fvkgQ" name="" memberEnd="_BRrb4t9lEeyaYIzP8fvkgQ _BOvcoN9lEeyaYIzP8fvkgQ">
            <ownedEnd xmi:id="_BRrb4t9lEeyaYIzP8fvkgQ" name="" type="_A8cywN9lEeyaYIzP8fvkgQ" association="_BRrb4d9lEeyaYIzP8fvkgQ"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_BRsC8d9lEeyaYIzP8fvkgQ" name="" memberEnd="_BRsC8t9lEeyaYIzP8fvkgQ _BOvco99lEeyaYIzP8fvkgQ">
            <ownedEnd xmi:id="_BRsC8t9lEeyaYIzP8fvkgQ" name="" type="_A8cywN9lEeyaYIzP8fvkgQ" association="_BRsC8d9lEeyaYIzP8fvkgQ"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_BRsqAd9lEeyaYIzP8fvkgQ" name="" memberEnd="_BRsqAt9lEeyaYIzP8fvkgQ _BOwDsd9lEeyaYIzP8fvkgQ">
            <ownedEnd xmi:id="_BRsqAt9lEeyaYIzP8fvkgQ" name="" type="_A8cywN9lEeyaYIzP8fvkgQ" association="_BRsqAd9lEeyaYIzP8fvkgQ"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_BRtREd9lEeyaYIzP8fvkgQ" name="" memberEnd="_BRtREt9lEeyaYIzP8fvkgQ _BOxR0N9lEeyaYIzP8fvkgQ">
            <ownedEnd xmi:id="_BRtREt9lEeyaYIzP8fvkgQ" name="" type="_A8cywN9lEeyaYIzP8fvkgQ" association="_BRtREd9lEeyaYIzP8fvkgQ"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_BRt4Id9lEeyaYIzP8fvkgQ" name="" memberEnd="_BRt4It9lEeyaYIzP8fvkgQ _BOyf8t9lEeyaYIzP8fvkgQ">
            <ownedEnd xmi:id="_BRt4It9lEeyaYIzP8fvkgQ" name="" type="_A8cywN9lEeyaYIzP8fvkgQ" association="_BRt4Id9lEeyaYIzP8fvkgQ"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_BRufMd9lEeyaYIzP8fvkgQ" name="" memberEnd="_BRufMt9lEeyaYIzP8fvkgQ _BO0VIN9lEeyaYIzP8fvkgQ">
            <ownedEnd xmi:id="_BRufMt9lEeyaYIzP8fvkgQ" name="" type="_A8cywN9lEeyaYIzP8fvkgQ" association="_BRufMd9lEeyaYIzP8fvkgQ"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_A1nK8N9lEeyaYIzP8fvkgQ" name="main">
          <packagedElement xmi:type="uml:Class" xmi:id="_A8wUwN9lEeyaYIzP8fvkgQ" name="Main">
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BQfJEN9lEeyaYIzP8fvkgQ" name="main" specification="_A8w70N9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_BQfJEd9lEeyaYIzP8fvkgQ" name="args">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BQfJEt9lEeyaYIzP8fvkgQ" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>// create a new game object&#xD;
		Game game = new Game();&#xD;
		// run the game loop&#xD;
		game.loop();&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_A8w70N9lEeyaYIzP8fvkgQ" name="main" isStatic="true" method="_BQfJEN9lEeyaYIzP8fvkgQ">
              <ownedParameter xmi:id="_A8xi4N9lEeyaYIzP8fvkgQ" name="args">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_A8yJ8N9lEeyaYIzP8fvkgQ" value="*"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_A0ES0N9lEeyaYIzP8fvkgQ" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_A0ES0d9lEeyaYIzP8fvkgQ" name="util">
        <packagedElement xmi:type="uml:Interface" xmi:id="_BKvtcN9lEeyaYIzP8fvkgQ" name="List"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_BLJ9IN9lEeyaYIzP8fvkgQ" name="Collections"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_BLLLQd9lEeyaYIzP8fvkgQ" name="Comparator"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_BLi-sN9lEeyaYIzP8fvkgQ" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_BLkM0N9lEeyaYIzP8fvkgQ" name="LinkedList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_BMGYUd9lEeyaYIzP8fvkgQ" name="Arrays"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_BMG_Yd9lEeyaYIzP8fvkgQ" name="Scanner"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_A1rcYN9lEeyaYIzP8fvkgQ" name="nio">
        <packagedElement xmi:type="uml:Class" xmi:id="_BL15oN9lEeyaYIzP8fvkgQ" name="IntBuffer"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_BMDVAd9lEeyaYIzP8fvkgQ" name="FloatBuffer"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_BML34d9lEeyaYIzP8fvkgQ" name="ByteBuffer"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_BMjrUd9lEeyaYIzP8fvkgQ" name="ShortBuffer"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Gi5WgN9oEeyaYIzP8fvkgQ" name="Buffer"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_A18iIN9lEeyaYIzP8fvkgQ" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_BMARsd9lEeyaYIzP8fvkgQ" name="BufferedReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_BMA4wd9lEeyaYIzP8fvkgQ" name="File"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_BMBf0d9lEeyaYIzP8fvkgQ" name="FileReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_BMCt8d9lEeyaYIzP8fvkgQ" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_BMFxQN9lEeyaYIzP8fvkgQ" name="FileNotFoundException"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_A2G6MN9lEeyaYIzP8fvkgQ" name="awt">
        <packagedElement xmi:type="uml:Package" xmi:id="_A2G6Md9lEeyaYIzP8fvkgQ" name="image">
          <packagedElement xmi:type="uml:Class" xmi:id="_BMLQ0N9lEeyaYIzP8fvkgQ" name="BufferedImage"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_BM7ewN9lEeyaYIzP8fvkgQ" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_BM7ewd9lEeyaYIzP8fvkgQ" name="Object"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_A0kpIN9lEeyaYIzP8fvkgQ" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_A0kpId9lEeyaYIzP8fvkgQ" name="joml">
        <packagedElement xmi:type="uml:Class" xmi:id="_BK-W8N9lEeyaYIzP8fvkgQ" name="Vector4f"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_BLla8d9lEeyaYIzP8fvkgQ" name="Vector3f"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_BLyPQN9lEeyaYIzP8fvkgQ" name="Matrix4f"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_A1X6YN9lEeyaYIzP8fvkgQ" name="lwjgl">
        <packagedElement xmi:type="uml:Package" xmi:id="_A1YhcN9lEeyaYIzP8fvkgQ" name="glfw">
          <packagedElement xmi:type="uml:Class" xmi:id="_BLdfIN9lEeyaYIzP8fvkgQ" name="GLFW"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_BLmCAd9lEeyaYIzP8fvkgQ" name="GLFWFramebufferSizeCallback"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_BLnQId9lEeyaYIzP8fvkgQ" name="GLFWVidMode"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_A1Yhcd9lEeyaYIzP8fvkgQ" name="opengl">
          <packagedElement xmi:type="uml:Class" xmi:id="_BLetQd9lEeyaYIzP8fvkgQ" name="GL11"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_BL3u0d9lEeyaYIzP8fvkgQ" name="GL"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_BL_DkN9lEeyaYIzP8fvkgQ" name="GL20"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_BMKCsN9lEeyaYIzP8fvkgQ" name="GL13"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_BMSlkN9lEeyaYIzP8fvkgQ" name="GL15"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_A1eBAN9lEeyaYIzP8fvkgQ" name="openal">
          <packagedElement xmi:type="uml:Class" xmi:id="_BLn3Md9lEeyaYIzP8fvkgQ" name="AL"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_BLpFUd9lEeyaYIzP8fvkgQ" name="ALC"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_BLqTcN9lEeyaYIzP8fvkgQ" name="ALCCapabilities"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_BLq6gd9lEeyaYIzP8fvkgQ" name="ALCapabilities"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_BLrhkd9lEeyaYIzP8fvkgQ" name="ALC10"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_BMk5cd9lEeyaYIzP8fvkgQ" name="AL10"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_A2yPoN9lEeyaYIzP8fvkgQ" name="system">
          <packagedElement xmi:type="uml:Class" xmi:id="_BMidMN9lEeyaYIzP8fvkgQ" name="MemoryStack"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_A2y2sN9lEeyaYIzP8fvkgQ" name="stb">
          <packagedElement xmi:type="uml:Class" xmi:id="_BMkSYd9lEeyaYIzP8fvkgQ" name="STBVorbis"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_BL3HwN9lEeyaYIzP8fvkgQ" name="BufferUtils"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_A2HhQN9lEeyaYIzP8fvkgQ" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_A2HhQd9lEeyaYIzP8fvkgQ" name="imageio">
        <packagedElement xmi:type="uml:Class" xmi:id="_BMMe8d9lEeyaYIzP8fvkgQ" name="ImageIO"/>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:id="__LxfUN9kEeyaYIzP8fvkgQ">
      <eAnnotations xmi:id="__L2-4N9kEeyaYIzP8fvkgQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="__MAI0N9kEeyaYIzP8fvkgQ" base_Package="_-_0uAN9kEeyaYIzP8fvkgQ">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Array xmi:id="_A9G6EN9lEeyaYIzP8fvkgQ" dimensions="2" base_Element="_A9GTAd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Array xmi:id="_A9mpUN9lEeyaYIzP8fvkgQ" dimensions="2" base_Element="_A9mCQ99lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Array xmi:id="_A9y2kN9lEeyaYIzP8fvkgQ" base_Element="_A9yPgN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BKw7kN9lEeyaYIzP8fvkgQ" base_Element="_BKvtcN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BK_lEN9lEeyaYIzP8fvkgQ" base_Element="_BK-W8N9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BLLLQN9lEeyaYIzP8fvkgQ" base_Element="_BLJ9IN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BLMZYN9lEeyaYIzP8fvkgQ" base_Element="_BLLLQd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BLetQN9lEeyaYIzP8fvkgQ" base_Element="_BLdfIN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BLf7YN9lEeyaYIzP8fvkgQ" base_Element="_BLetQd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BLjlwN9lEeyaYIzP8fvkgQ" base_Element="_BLi-sN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BLla8N9lEeyaYIzP8fvkgQ" base_Element="_BLkM0N9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BLmCAN9lEeyaYIzP8fvkgQ" base_Element="_BLla8d9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BLnQIN9lEeyaYIzP8fvkgQ" base_Element="_BLmCAd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BLn3MN9lEeyaYIzP8fvkgQ" base_Element="_BLnQId9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BLpFUN9lEeyaYIzP8fvkgQ" base_Element="_BLn3Md9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BLpsYN9lEeyaYIzP8fvkgQ" base_Element="_BLpFUd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BLq6gN9lEeyaYIzP8fvkgQ" base_Element="_BLqTcN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BLrhkN9lEeyaYIzP8fvkgQ" base_Element="_BLq6gd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BLsvsN9lEeyaYIzP8fvkgQ" base_Element="_BLrhkd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BLy2UN9lEeyaYIzP8fvkgQ" base_Element="_BLyPQN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BL2gsN9lEeyaYIzP8fvkgQ" base_Element="_BL15oN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BL3u0N9lEeyaYIzP8fvkgQ" base_Element="_BL3HwN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BL4V4N9lEeyaYIzP8fvkgQ" base_Element="_BL3u0d9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BMARsN9lEeyaYIzP8fvkgQ" base_Element="_BL_DkN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BMA4wN9lEeyaYIzP8fvkgQ" base_Element="_BMARsd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BMBf0N9lEeyaYIzP8fvkgQ" base_Element="_BMA4wd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BMCt8N9lEeyaYIzP8fvkgQ" base_Element="_BMBf0d9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BMDVAN9lEeyaYIzP8fvkgQ" base_Element="_BMCt8d9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BMD8EN9lEeyaYIzP8fvkgQ" base_Element="_BMDVAd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BMGYUN9lEeyaYIzP8fvkgQ" base_Element="_BMFxQN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BMG_YN9lEeyaYIzP8fvkgQ" base_Element="_BMGYUd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BMHmcN9lEeyaYIzP8fvkgQ" base_Element="_BMG_Yd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BMKpwN9lEeyaYIzP8fvkgQ" base_Element="_BMKCsN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BML34N9lEeyaYIzP8fvkgQ" base_Element="_BMLQ0N9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BMMe8N9lEeyaYIzP8fvkgQ" base_Element="_BML34d9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BMNGAN9lEeyaYIzP8fvkgQ" base_Element="_BMMe8d9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BMTMoN9lEeyaYIzP8fvkgQ" base_Element="_BMSlkN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BMjrUN9lEeyaYIzP8fvkgQ" base_Element="_BMidMN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BMkSYN9lEeyaYIzP8fvkgQ" base_Element="_BMjrUd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BMk5cN9lEeyaYIzP8fvkgQ" base_Element="_BMkSYd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BMlggN9lEeyaYIzP8fvkgQ" base_Element="_BMk5cd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Generics xmi:id="_BM5pkN9lEeyaYIzP8fvkgQ" genericsValue="Entity" base_Element="_BM4bct9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BM8F0N9lEeyaYIzP8fvkgQ" base_Element="_BM7ewd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Generics xmi:id="_BNA-UN9lEeyaYIzP8fvkgQ" genericsValue="IPhysicsBody" base_Element="_BNAXQd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Generics xmi:id="_BNEBoN9lEeyaYIzP8fvkgQ" genericsValue="IPhysicsBody" base_Element="_BNCzgd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Generics xmi:id="_BNHE8N9lEeyaYIzP8fvkgQ" genericsValue="IPhysicsBody" base_Element="_BNF20d9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Generics xmi:id="_BNWVgN9lEeyaYIzP8fvkgQ" genericsValue="Entity" base_Element="_BNVHYN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Generics xmi:id="_BNccIN9lEeyaYIzP8fvkgQ" genericsValue="Entity" base_Element="_BNb1Ed9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Array xmi:id="_BNdDMd9lEeyaYIzP8fvkgQ" dimensions="2" base_Element="_BNb1Et9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Array xmi:id="_BNdDM99lEeyaYIzP8fvkgQ" dimensions="2" base_Element="_BNb1E99lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Generics xmi:id="_BNgtkN9lEeyaYIzP8fvkgQ" genericsValue="Entity" base_Element="_BNffcd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Array xmi:id="_BNhUoN9lEeyaYIzP8fvkgQ" dimensions="2" base_Element="_BNgGgN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Array xmi:id="_BNhUot9lEeyaYIzP8fvkgQ" dimensions="2" base_Element="_BNgGgd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Array xmi:id="_BNk_Ad9lEeyaYIzP8fvkgQ" dimensions="2" base_Element="_BNkX899lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Generics xmi:id="_BNlmEN9lEeyaYIzP8fvkgQ" genericsValue="Hitbox" base_Element="_BNkX9N9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOBq8N9lEeyaYIzP8fvkgQ" base_Element="_BOBD4N9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOC5EN9lEeyaYIzP8fvkgQ" base_Element="_BOCSAN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BODgIN9lEeyaYIzP8fvkgQ" base_Element="_BOC5Ed9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOEHMN9lEeyaYIzP8fvkgQ" base_Element="_BODgId9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOEHMt9lEeyaYIzP8fvkgQ" base_Element="_BOEHMd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOEuQd9lEeyaYIzP8fvkgQ" base_Element="_BOEuQN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOF8YN9lEeyaYIzP8fvkgQ" base_Element="_BOFVUN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOGjcN9lEeyaYIzP8fvkgQ" base_Element="_BOF8Yd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOHKgN9lEeyaYIzP8fvkgQ" base_Element="_BOGjcd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOHxkN9lEeyaYIzP8fvkgQ" base_Element="_BOHKgd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOIYoN9lEeyaYIzP8fvkgQ" base_Element="_BOHxkd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOIYot9lEeyaYIzP8fvkgQ" base_Element="_BOIYod9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOI_sd9lEeyaYIzP8fvkgQ" base_Element="_BOI_sN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOKN0d9lEeyaYIzP8fvkgQ" base_Element="_BOKN0N9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOK04d9lEeyaYIzP8fvkgQ" base_Element="_BOK04N9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOLb8N9lEeyaYIzP8fvkgQ" base_Element="_BOK04t9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOMDAN9lEeyaYIzP8fvkgQ" base_Element="_BOLb8d9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BONRId9lEeyaYIzP8fvkgQ" base_Element="_BONRIN9lEeyaYIzP8fvkgQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_BON4MN9lEeyaYIzP8fvkgQ" name="getSpecialJump" method="_BQOqYN9lEeyaYIzP8fvkgQ">
      <ownedParameter xmi:id="_BOOfQN9lEeyaYIzP8fvkgQ" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
      </ownedParameter>
    </associatedElement>
    <associatedElement xmi:type="uml:Operation" xmi:id="_BON4Md9lEeyaYIzP8fvkgQ" name="setSpecialJump" method="_BQOqYt9lEeyaYIzP8fvkgQ">
      <ownedParameter xmi:id="_BON4Mt9lEeyaYIzP8fvkgQ" name="jump">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOQUcN9lEeyaYIzP8fvkgQ" base_Element="_BOPtYN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOQ7gN9lEeyaYIzP8fvkgQ" base_Element="_BOQUcd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOQ7gt9lEeyaYIzP8fvkgQ" base_Element="_BOQ7gd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BORikd9lEeyaYIzP8fvkgQ" base_Element="_BORikN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOTXwN9lEeyaYIzP8fvkgQ" base_Element="_BOSwsN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOTXwt9lEeyaYIzP8fvkgQ" base_Element="_BOTXwd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOTXxN9lEeyaYIzP8fvkgQ" base_Element="_BOTXw99lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOT-0d9lEeyaYIzP8fvkgQ" base_Element="_BOT-0N9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOUl4d9lEeyaYIzP8fvkgQ" base_Element="_BOUl4N9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOVM8N9lEeyaYIzP8fvkgQ" base_Element="_BOUl4t9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOV0AN9lEeyaYIzP8fvkgQ" base_Element="_BOVM8d9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOV0At9lEeyaYIzP8fvkgQ" base_Element="_BOV0Ad9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOWbEd9lEeyaYIzP8fvkgQ" base_Element="_BOWbEN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOXCIN9lEeyaYIzP8fvkgQ" base_Element="_BOWbEt9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOXpMN9lEeyaYIzP8fvkgQ" base_Element="_BOXCId9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOYQQN9lEeyaYIzP8fvkgQ" base_Element="_BOXpMd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOYQQt9lEeyaYIzP8fvkgQ" base_Element="_BOYQQd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOY3Ud9lEeyaYIzP8fvkgQ" base_Element="_BOY3UN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOZeYN9lEeyaYIzP8fvkgQ" base_Element="_BOY3Ut9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOaFcN9lEeyaYIzP8fvkgQ" base_Element="_BOZeYd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOchsN9lEeyaYIzP8fvkgQ" base_Element="_BOb6oN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOdIwN9lEeyaYIzP8fvkgQ" base_Element="_BOchsd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOdv0N9lEeyaYIzP8fvkgQ" base_Element="_BOdIwd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOdv0t9lEeyaYIzP8fvkgQ" base_Element="_BOdv0d9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOeW4d9lEeyaYIzP8fvkgQ" base_Element="_BOeW4N9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOe98d9lEeyaYIzP8fvkgQ" base_Element="_BOe98N9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOflAN9lEeyaYIzP8fvkgQ" base_Element="_BOe98t9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOgMEN9lEeyaYIzP8fvkgQ" base_Element="_BOflAd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOgMEt9lEeyaYIzP8fvkgQ" base_Element="_BOgMEd9lEeyaYIzP8fvkgQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_BOgzIN9lEeyaYIzP8fvkgQ" name="getCoins" method="_BQWmMN9lEeyaYIzP8fvkgQ">
      <ownedParameter xmi:id="_BOgzId9lEeyaYIzP8fvkgQ" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOhaMd9lEeyaYIzP8fvkgQ" base_Element="_BOhaMN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOiBQd9lEeyaYIzP8fvkgQ" base_Element="_BOiBQN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOioUN9lEeyaYIzP8fvkgQ" base_Element="_BOiBQt9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOjPYN9lEeyaYIzP8fvkgQ" base_Element="_BOioUd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOjPYt9lEeyaYIzP8fvkgQ" base_Element="_BOjPYd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOj2cd9lEeyaYIzP8fvkgQ" base_Element="_BOj2cN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOmSsN9lEeyaYIzP8fvkgQ" base_Element="_BOlroN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOm5wN9lEeyaYIzP8fvkgQ" base_Element="_BOmSsd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOm5wt9lEeyaYIzP8fvkgQ" base_Element="_BOm5wd9lEeyaYIzP8fvkgQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_BOng0N9lEeyaYIzP8fvkgQ" name="getWin" method="_BQcFwN9lEeyaYIzP8fvkgQ">
      <ownedParameter xmi:id="_BOng0d9lEeyaYIzP8fvkgQ" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOou8N9lEeyaYIzP8fvkgQ" base_Element="_BOoH4N9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOou8t9lEeyaYIzP8fvkgQ" base_Element="_BOou8d9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOpWAd9lEeyaYIzP8fvkgQ" base_Element="_BOpWAN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOp9Ed9lEeyaYIzP8fvkgQ" base_Element="_BOp9EN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOqkIN9lEeyaYIzP8fvkgQ" base_Element="_BOp9Et9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOrLMN9lEeyaYIzP8fvkgQ" base_Element="_BOqkId9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOryQN9lEeyaYIzP8fvkgQ" base_Element="_BOrLMd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOsZUt9lEeyaYIzP8fvkgQ" base_Element="_BOsZUN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOtAYd9lEeyaYIzP8fvkgQ" base_Element="_BOtAYN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOtncN9lEeyaYIzP8fvkgQ" base_Element="_BOtAYt9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Array xmi:id="_BOtnc99lEeyaYIzP8fvkgQ" dimensions="2" base_Element="_BOtncd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOuOgN9lEeyaYIzP8fvkgQ" base_Element="_BOtncd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Array xmi:id="_BOu1kd9lEeyaYIzP8fvkgQ" dimensions="2" base_Element="_BOuOgd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOu1kt9lEeyaYIzP8fvkgQ" base_Element="_BOuOgd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOvcot9lEeyaYIzP8fvkgQ" base_Element="_BOvcoN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOwDsN9lEeyaYIzP8fvkgQ" base_Element="_BOvco99lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOwqwN9lEeyaYIzP8fvkgQ" base_Element="_BOwDsd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOxR0d9lEeyaYIzP8fvkgQ" base_Element="_BOxR0N9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOx44d9lEeyaYIzP8fvkgQ" base_Element="_BOx44N9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOyf8d9lEeyaYIzP8fvkgQ" base_Element="_BOyf8N9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOzHAN9lEeyaYIzP8fvkgQ" base_Element="_BOyf8t9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOzuEN9lEeyaYIzP8fvkgQ" base_Element="_BOzHAd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BOzuEt9lEeyaYIzP8fvkgQ" base_Element="_BOzuEd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BO0VIt9lEeyaYIzP8fvkgQ" base_Element="_BO0VIN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BO1jQd9lEeyaYIzP8fvkgQ" base_Element="_BO1jQN9lEeyaYIzP8fvkgQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_BO2KUN9lEeyaYIzP8fvkgQ" name="getPosition" method="_BQfJE99lEeyaYIzP8fvkgQ">
      <ownedParameter xmi:id="_BO2xYN9lEeyaYIzP8fvkgQ" type="_BLla8d9lEeyaYIzP8fvkgQ" direction="return"/>
    </associatedElement>
    <associatedElement xmi:type="uml:Operation" xmi:id="_BO2KUd9lEeyaYIzP8fvkgQ" name="setPosition" method="_BQfwIN9lEeyaYIzP8fvkgQ">
      <ownedParameter xmi:id="_BO2KUt9lEeyaYIzP8fvkgQ" name="position" type="_BLla8d9lEeyaYIzP8fvkgQ"/>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BO3YcN9lEeyaYIzP8fvkgQ" base_Element="_BO2xYd9lEeyaYIzP8fvkgQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_BO3Ycd9lEeyaYIzP8fvkgQ" name="getProjection" method="_BQfwIt9lEeyaYIzP8fvkgQ">
      <ownedParameter xmi:id="_BO3_gd9lEeyaYIzP8fvkgQ" type="_BLyPQN9lEeyaYIzP8fvkgQ" direction="return"/>
    </associatedElement>
    <associatedElement xmi:type="uml:Operation" xmi:id="_BO3Yct9lEeyaYIzP8fvkgQ" name="setProjection" method="_BQfwJN9lEeyaYIzP8fvkgQ">
      <ownedParameter xmi:id="_BO3Yc99lEeyaYIzP8fvkgQ" name="width">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
      </ownedParameter>
      <ownedParameter xmi:id="_BO3_gN9lEeyaYIzP8fvkgQ" name="height">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BO5NoN9lEeyaYIzP8fvkgQ" base_Element="_BO4mkN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BO50sN9lEeyaYIzP8fvkgQ" base_Element="_BO5Nod9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BO50st9lEeyaYIzP8fvkgQ" base_Element="_BO50sd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BO7C0N9lEeyaYIzP8fvkgQ" base_Element="_BO6bwN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BO7p4N9lEeyaYIzP8fvkgQ" base_Element="_BO7C0d9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BO8Q8N9lEeyaYIzP8fvkgQ" base_Element="_BO7p4d9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BO8Q8t9lEeyaYIzP8fvkgQ" base_Element="_BO8Q8d9lEeyaYIzP8fvkgQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_BO84AN9lEeyaYIzP8fvkgQ" name="getDebug" method="_BQg-QN9lEeyaYIzP8fvkgQ">
      <ownedParameter xmi:id="_BO84A99lEeyaYIzP8fvkgQ" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
      </ownedParameter>
    </associatedElement>
    <associatedElement xmi:type="uml:Operation" xmi:id="_BO84Ad9lEeyaYIzP8fvkgQ" name="setDebug" method="_BQg-Qt9lEeyaYIzP8fvkgQ">
      <ownedParameter xmi:id="_BO84At9lEeyaYIzP8fvkgQ" name="flag">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BO-GIN9lEeyaYIzP8fvkgQ" base_Element="_BO9fEN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BO-GIt9lEeyaYIzP8fvkgQ" base_Element="_BO-GId9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BO-tMd9lEeyaYIzP8fvkgQ" base_Element="_BO-tMN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BO_UQN9lEeyaYIzP8fvkgQ" base_Element="_BO-tMt9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BO_7UN9lEeyaYIzP8fvkgQ" base_Element="_BO_UQd9lEeyaYIzP8fvkgQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_BO_7Ud9lEeyaYIzP8fvkgQ" name="getTileSize" method="_BQhlUN9lEeyaYIzP8fvkgQ">
      <ownedParameter xmi:id="_BPAiYN9lEeyaYIzP8fvkgQ" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
      </ownedParameter>
    </associatedElement>
    <associatedElement xmi:type="uml:Operation" xmi:id="_BO_7Ut9lEeyaYIzP8fvkgQ" name="setTileSize" method="_BQhlUt9lEeyaYIzP8fvkgQ">
      <ownedParameter xmi:id="_BO_7U99lEeyaYIzP8fvkgQ" name="size">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPCXkN9lEeyaYIzP8fvkgQ" base_Element="_BPBwgN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPC-oN9lEeyaYIzP8fvkgQ" base_Element="_BPCXkd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPDlsN9lEeyaYIzP8fvkgQ" base_Element="_BPC-od9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPEMwN9lEeyaYIzP8fvkgQ" base_Element="_BPDlsd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPEMwt9lEeyaYIzP8fvkgQ" base_Element="_BPEMwd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPFa4N9lEeyaYIzP8fvkgQ" base_Element="_BPEz0N9lEeyaYIzP8fvkgQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_BPGB8N9lEeyaYIzP8fvkgQ" name="getTiles" method="_BQl2xN9lEeyaYIzP8fvkgQ">
      <ownedParameter xmi:id="_BPGB8d9lEeyaYIzP8fvkgQ" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BPGB8t9lEeyaYIzP8fvkgQ" value="*"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Array xmi:id="_BPFa4t9lEeyaYIzP8fvkgQ" dimensions="2" base_Element="_BPEz0N9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Array xmi:id="_BPGB899lEeyaYIzP8fvkgQ" dimensions="2" base_Element="_BPGB8N9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Array xmi:id="_BPGpAt9lEeyaYIzP8fvkgQ" dimensions="2" base_Element="_BPGpAN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPHQEN9lEeyaYIzP8fvkgQ" base_Element="_BPGpAN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPH3IN9lEeyaYIzP8fvkgQ" base_Element="_BPHQEd9lEeyaYIzP8fvkgQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_BPH3It9lEeyaYIzP8fvkgQ" name="getHitboxes" method="_BQmd0t9lEeyaYIzP8fvkgQ">
      <ownedParameter xmi:id="_BPIeMN9lEeyaYIzP8fvkgQ" type="_A6vikN9lEeyaYIzP8fvkgQ" isOrdered="true" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BPIeMd9lEeyaYIzP8fvkgQ" value="*"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPJsUN9lEeyaYIzP8fvkgQ" base_Element="_BPJFQN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPK6cN9lEeyaYIzP8fvkgQ" base_Element="_BPKTYN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPK6ct9lEeyaYIzP8fvkgQ" base_Element="_BPK6cd9lEeyaYIzP8fvkgQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_BPLhgN9lEeyaYIzP8fvkgQ" name="getWidth" method="_BQo6E99lEeyaYIzP8fvkgQ">
      <ownedParameter xmi:id="_BPLhgd9lEeyaYIzP8fvkgQ" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPMIkN9lEeyaYIzP8fvkgQ" base_Element="_BPLhgt9lEeyaYIzP8fvkgQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_BPMIkd9lEeyaYIzP8fvkgQ" name="getHeight" method="_BQphIN9lEeyaYIzP8fvkgQ">
      <ownedParameter xmi:id="_BPMvoN9lEeyaYIzP8fvkgQ" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Array xmi:id="_BPMvo99lEeyaYIzP8fvkgQ" base_Element="_BPMvod9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPNWsN9lEeyaYIzP8fvkgQ" base_Element="_BPMvod9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPN9wd9lEeyaYIzP8fvkgQ" base_Element="_BPN9wN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPOk0d9lEeyaYIzP8fvkgQ" base_Element="_BPOk0N9lEeyaYIzP8fvkgQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_BPPL4N9lEeyaYIzP8fvkgQ" name="getTime" method="_BQqINd9lEeyaYIzP8fvkgQ">
      <ownedParameter xmi:id="_BPPL4d9lEeyaYIzP8fvkgQ" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPPy8N9lEeyaYIzP8fvkgQ" base_Element="_BPPL4t9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPQaAN9lEeyaYIzP8fvkgQ" base_Element="_BPPy8d9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPRBEN9lEeyaYIzP8fvkgQ" base_Element="_BPQaAd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPRoId9lEeyaYIzP8fvkgQ" base_Element="_BPRoIN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPSPMd9lEeyaYIzP8fvkgQ" base_Element="_BPSPMN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPS2QN9lEeyaYIzP8fvkgQ" base_Element="_BPSPMt9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPTdUN9lEeyaYIzP8fvkgQ" base_Element="_BPS2Qd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPTdUt9lEeyaYIzP8fvkgQ" base_Element="_BPTdUd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPUEYd9lEeyaYIzP8fvkgQ" base_Element="_BPUEYN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPUrcN9lEeyaYIzP8fvkgQ" base_Element="_BPUEYt9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPVSgd9lEeyaYIzP8fvkgQ" base_Element="_BPVSgN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPV5kN9lEeyaYIzP8fvkgQ" base_Element="_BPVSgt9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPWgoN9lEeyaYIzP8fvkgQ" base_Element="_BPV5kd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPXuwd9lEeyaYIzP8fvkgQ" base_Element="_BPXuwN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPYV0d9lEeyaYIzP8fvkgQ" base_Element="_BPYV0N9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPY84N9lEeyaYIzP8fvkgQ" base_Element="_BPYV0t9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPZj8N9lEeyaYIzP8fvkgQ" base_Element="_BPY84d9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPaLAN9lEeyaYIzP8fvkgQ" base_Element="_BPZj8d9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPayEN9lEeyaYIzP8fvkgQ" base_Element="_BPaLAd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPfqkN9lEeyaYIzP8fvkgQ" base_Element="_BPfDgt9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPgRoN9lEeyaYIzP8fvkgQ" base_Element="_BPfqkd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPg4sN9lEeyaYIzP8fvkgQ" base_Element="_BPgRod9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPhfwN9lEeyaYIzP8fvkgQ" base_Element="_BPg4sd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPhfwt9lEeyaYIzP8fvkgQ" base_Element="_BPhfwd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPiG0d9lEeyaYIzP8fvkgQ" base_Element="_BPiG0N9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPit4N9lEeyaYIzP8fvkgQ" base_Element="_BPiG0t9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPit4t9lEeyaYIzP8fvkgQ" base_Element="_BPit4d9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPkjEd9lEeyaYIzP8fvkgQ" base_Element="_BPkjEN9lEeyaYIzP8fvkgQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_BPlKIN9lEeyaYIzP8fvkgQ" name="getRotation" method="_BQuZo99lEeyaYIzP8fvkgQ">
      <ownedParameter xmi:id="_BPlKI99lEeyaYIzP8fvkgQ" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
      </ownedParameter>
    </associatedElement>
    <associatedElement xmi:type="uml:Operation" xmi:id="_BPlKId9lEeyaYIzP8fvkgQ" name="setRotation" method="_BQuZpd9lEeyaYIzP8fvkgQ">
      <ownedParameter xmi:id="_BPlKIt9lEeyaYIzP8fvkgQ" name="rotation">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPlxMd9lEeyaYIzP8fvkgQ" base_Element="_BPlxMN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPmYQd9lEeyaYIzP8fvkgQ" base_Element="_BPmYQN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPm_UN9lEeyaYIzP8fvkgQ" base_Element="_BPmYQt9lEeyaYIzP8fvkgQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_zHh-cN9xEeyaYIzP8fvkgQ" name="getScaleMul" method="_zHmP4N9xEeyaYIzP8fvkgQ">
      <ownedParameter xmi:id="_zHjzoN9xEeyaYIzP8fvkgQ" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPoNcN9lEeyaYIzP8fvkgQ" base_Element="_BPnmYd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPo0gN9lEeyaYIzP8fvkgQ" base_Element="_BPoNcd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPo0gt9lEeyaYIzP8fvkgQ" base_Element="_BPo0gd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPpbkd9lEeyaYIzP8fvkgQ" base_Element="_BPpbkN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPqCoN9lEeyaYIzP8fvkgQ" base_Element="_BPpbkt9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPqpsN9lEeyaYIzP8fvkgQ" base_Element="_BPqCod9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPrQwN9lEeyaYIzP8fvkgQ" base_Element="_BPqpsd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPr30N9lEeyaYIzP8fvkgQ" base_Element="_BPrQwd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPviMN9lEeyaYIzP8fvkgQ" base_Element="_BPu7Id9lEeyaYIzP8fvkgQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_BPviMd9lEeyaYIzP8fvkgQ" name="getOpacity" method="_BQvAsd9lEeyaYIzP8fvkgQ">
      <ownedParameter xmi:id="_BPwJQd9lEeyaYIzP8fvkgQ" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
      </ownedParameter>
    </associatedElement>
    <associatedElement xmi:type="uml:Operation" xmi:id="_BPviMt9lEeyaYIzP8fvkgQ" name="setOpacity" method="_BQvAs99lEeyaYIzP8fvkgQ">
      <ownedParameter xmi:id="_BPwJQN9lEeyaYIzP8fvkgQ" name="value">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BP0asN9lEeyaYIzP8fvkgQ" base_Element="_BPzzoN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BP1BwN9lEeyaYIzP8fvkgQ" base_Element="_BP0asd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BP1Bwt9lEeyaYIzP8fvkgQ" base_Element="_BP1Bwd9lEeyaYIzP8fvkgQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_BP1o0N9lEeyaYIzP8fvkgQ" name="getFilepath" method="_BQ28gN9lEeyaYIzP8fvkgQ">
      <ownedParameter xmi:id="_BP2P4N9lEeyaYIzP8fvkgQ" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BP228N9lEeyaYIzP8fvkgQ" base_Element="_BP2P4d9lEeyaYIzP8fvkgQ"/>
  <uml:OpaqueBehavior xmi:id="_BQOqYN9lEeyaYIzP8fvkgQ" name="getSpecialJump" specification="_BON4MN9lEeyaYIzP8fvkgQ">
    <ownedParameter xmi:id="_BQOqYd9lEeyaYIzP8fvkgQ" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </ownedParameter>
    <language>java</language>
    <body>return(this.specialJump);&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_BQOqYt9lEeyaYIzP8fvkgQ" name="setSpecialJump" specification="_BON4Md9lEeyaYIzP8fvkgQ">
    <ownedParameter xmi:id="_BQPRcN9lEeyaYIzP8fvkgQ" name="jump">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </ownedParameter>
    <language>java</language>
    <body>this.specialJump = jump;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_BQWmMN9lEeyaYIzP8fvkgQ" name="getCoins" specification="_BOgzIN9lEeyaYIzP8fvkgQ">
    <ownedParameter xmi:id="_BQWmMd9lEeyaYIzP8fvkgQ" direction="return">
      <name xsi:nil="true"/>
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </ownedParameter>
    <language>java</language>
    <body>return(this.coins);&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_BQcFwN9lEeyaYIzP8fvkgQ" name="getWin" specification="_BOng0N9lEeyaYIzP8fvkgQ">
    <ownedParameter xmi:id="_BQcFwd9lEeyaYIzP8fvkgQ" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </ownedParameter>
    <language>java</language>
    <body>return(this.win);&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_BQfJE99lEeyaYIzP8fvkgQ" name="getPosition" specification="_BO2KUN9lEeyaYIzP8fvkgQ">
    <ownedParameter xmi:id="_BQfJFN9lEeyaYIzP8fvkgQ" type="_BLla8d9lEeyaYIzP8fvkgQ" direction="return"/>
    <language>java</language>
    <body>return(this.position);&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_BQfwIN9lEeyaYIzP8fvkgQ" name="setPosition" specification="_BO2KUd9lEeyaYIzP8fvkgQ">
    <ownedParameter xmi:id="_BQfwId9lEeyaYIzP8fvkgQ" name="position" type="_BLla8d9lEeyaYIzP8fvkgQ"/>
    <language>java</language>
    <body>this.position = position;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_BQfwIt9lEeyaYIzP8fvkgQ" name="getProjection" specification="_BO3Ycd9lEeyaYIzP8fvkgQ">
    <ownedParameter xmi:id="_BQfwI99lEeyaYIzP8fvkgQ" type="_BLyPQN9lEeyaYIzP8fvkgQ" direction="return"/>
    <language>java</language>
    <body>Matrix4f target = new Matrix4f();&#xD;
		&#xD;
		Matrix4f pos = new Matrix4f().setTranslation(this.position);&#xD;
		&#xD;
		this.projection.mul(pos, target);&#xD;
		&#xD;
		return(target);&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_BQfwJN9lEeyaYIzP8fvkgQ" name="setProjection" specification="_BO3Yct9lEeyaYIzP8fvkgQ">
    <ownedParameter xmi:id="_BQfwJd9lEeyaYIzP8fvkgQ" name="width">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </ownedParameter>
    <ownedParameter xmi:id="_BQfwJt9lEeyaYIzP8fvkgQ" name="height">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </ownedParameter>
    <language>java</language>
    <body>this.projection = new Matrix4f().setOrtho2D(-width / 2, width / 2, -height / 2, height / 2);&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_BQg-QN9lEeyaYIzP8fvkgQ" name="getDebug" specification="_BO84AN9lEeyaYIzP8fvkgQ">
    <ownedParameter xmi:id="_BQg-Qd9lEeyaYIzP8fvkgQ" direction="return">
      <name xsi:nil="true"/>
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </ownedParameter>
    <language>java</language>
    <body>return(this.debug);&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_BQg-Qt9lEeyaYIzP8fvkgQ" name="setDebug" specification="_BO84Ad9lEeyaYIzP8fvkgQ">
    <ownedParameter xmi:id="_BQg-Q99lEeyaYIzP8fvkgQ" name="flag">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </ownedParameter>
    <language>java</language>
    <body>this.debug = flag;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_BQhlUN9lEeyaYIzP8fvkgQ" name="getTileSize" specification="_BO_7Ud9lEeyaYIzP8fvkgQ">
    <ownedParameter xmi:id="_BQhlUd9lEeyaYIzP8fvkgQ" direction="return">
      <name xsi:nil="true"/>
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </ownedParameter>
    <language>java</language>
    <body>return(this.tileSize);&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_BQhlUt9lEeyaYIzP8fvkgQ" name="setTileSize" specification="_BO_7Ut9lEeyaYIzP8fvkgQ">
    <ownedParameter xmi:id="_BQhlU99lEeyaYIzP8fvkgQ" name="size">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </ownedParameter>
    <language>java</language>
    <body>this.tileSize = size;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_BQl2xN9lEeyaYIzP8fvkgQ" name="getTiles" specification="_BPGB8N9lEeyaYIzP8fvkgQ">
    <ownedParameter xmi:id="_BQmd0N9lEeyaYIzP8fvkgQ" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BQmd0d9lEeyaYIzP8fvkgQ" value="*"/>
    </ownedParameter>
    <language>java</language>
    <body>return(this.tiles);&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_BQmd0t9lEeyaYIzP8fvkgQ" name="getHitboxes" specification="_BPH3It9lEeyaYIzP8fvkgQ">
    <ownedParameter xmi:id="_BQmd099lEeyaYIzP8fvkgQ" type="_A6vikN9lEeyaYIzP8fvkgQ" isOrdered="true" direction="return">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BQmd1N9lEeyaYIzP8fvkgQ" value="*"/>
    </ownedParameter>
    <language>java</language>
    <body>return(this.hitboxes);&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_BQo6E99lEeyaYIzP8fvkgQ" name="getWidth" specification="_BPLhgN9lEeyaYIzP8fvkgQ">
    <ownedParameter xmi:id="_BQo6FN9lEeyaYIzP8fvkgQ" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </ownedParameter>
    <language>java</language>
    <body>return(this.width);&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_BQphIN9lEeyaYIzP8fvkgQ" name="getHeight" specification="_BPMIkd9lEeyaYIzP8fvkgQ">
    <ownedParameter xmi:id="_BQphId9lEeyaYIzP8fvkgQ" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </ownedParameter>
    <language>java</language>
    <body>return(this.height);&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_BQqINd9lEeyaYIzP8fvkgQ" name="getTime" specification="_BPPL4N9lEeyaYIzP8fvkgQ">
    <ownedParameter xmi:id="_BQqvQN9lEeyaYIzP8fvkgQ" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </ownedParameter>
    <language>java</language>
    <body>return((double)System.nanoTime()) / (double)1000000000L;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_BQtLgN9lEeyaYIzP8fvkgQ" name="getX">
    <ownedParameter xmi:id="_BQtLgd9lEeyaYIzP8fvkgQ" direction="return">
      <name xsi:nil="true"/>
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </ownedParameter>
    <language>java</language>
    <body>return(this.x);&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_BQtykN9lEeyaYIzP8fvkgQ" name="getY">
    <ownedParameter xmi:id="_BQtykd9lEeyaYIzP8fvkgQ" direction="return">
      <name xsi:nil="true"/>
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </ownedParameter>
    <language>java</language>
    <body>return(this.y);&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_BQtykt9lEeyaYIzP8fvkgQ" name="getPrevX">
    <ownedParameter xmi:id="_BQtyk99lEeyaYIzP8fvkgQ" direction="return">
      <name xsi:nil="true"/>
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </ownedParameter>
    <language>java</language>
    <body>return(this.prevX);&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_BQtylN9lEeyaYIzP8fvkgQ" name="getPrevY">
    <ownedParameter xmi:id="_BQtyld9lEeyaYIzP8fvkgQ" direction="return">
      <name xsi:nil="true"/>
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </ownedParameter>
    <language>java</language>
    <body>return(this.prevY);&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_BQuZo99lEeyaYIzP8fvkgQ" name="getRotation" specification="_BPlKIN9lEeyaYIzP8fvkgQ">
    <ownedParameter xmi:id="_BQuZpN9lEeyaYIzP8fvkgQ" direction="return">
      <name xsi:nil="true"/>
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </ownedParameter>
    <language>java</language>
    <body>return(this.rotationValue);&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_BQuZpd9lEeyaYIzP8fvkgQ" name="setRotation" specification="_BPlKId9lEeyaYIzP8fvkgQ">
    <ownedParameter xmi:id="_BQuZpt9lEeyaYIzP8fvkgQ" name="rotation">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </ownedParameter>
    <language>java</language>
    <body>this.rotationValue = rotation;&#xD;
		&#xD;
		// calculate a new rotation matrix with the new rotation angle&#xD;
		this.rotation = new Matrix4f().rotate(this.rotationValue, 0, 0, 1);&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_BQvAsd9lEeyaYIzP8fvkgQ" name="getOpacity" specification="_BPviMd9lEeyaYIzP8fvkgQ">
    <ownedParameter xmi:id="_BQvAst9lEeyaYIzP8fvkgQ" direction="return">
      <name xsi:nil="true"/>
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </ownedParameter>
    <language>java</language>
    <body>return(this.opacity);&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_BQvAs99lEeyaYIzP8fvkgQ" name="setOpacity" specification="_BPviMt9lEeyaYIzP8fvkgQ">
    <ownedParameter xmi:id="_BQvAtN9lEeyaYIzP8fvkgQ" name="value">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </ownedParameter>
    <language>java</language>
    <body>this.opacity = value;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_BQ28gN9lEeyaYIzP8fvkgQ" name="getFilepath" specification="_BP1o0N9lEeyaYIzP8fvkgQ">
    <ownedParameter xmi:id="_BQ28gd9lEeyaYIzP8fvkgQ" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <language>java</language>
    <body>return(this.filepath);&#xD;
	</body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:Reference xmi:id="_BRhq4N9lEeyaYIzP8fvkgQ" base_Element="_BRhD0N9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BRi5Ad9lEeyaYIzP8fvkgQ" base_Element="_BRiR8N9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BRjgEt9lEeyaYIzP8fvkgQ" base_Element="_BRjgEN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BRkHIN9lEeyaYIzP8fvkgQ" base_Element="_BRjgE99lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BRkuMN9lEeyaYIzP8fvkgQ" base_Element="_BRkHId9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BRlVQN9lEeyaYIzP8fvkgQ" base_Element="_BRkuMd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BRmjYN9lEeyaYIzP8fvkgQ" base_Element="_BRlVQd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BRnKcN9lEeyaYIzP8fvkgQ" base_Element="_BRmjYd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BRnxgN9lEeyaYIzP8fvkgQ" base_Element="_BRnKcd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BRoYkN9lEeyaYIzP8fvkgQ" base_Element="_BRnxgd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BRo_oN9lEeyaYIzP8fvkgQ" base_Element="_BRoYkd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BRpmsN9lEeyaYIzP8fvkgQ" base_Element="_BRo_od9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BRqNwN9lEeyaYIzP8fvkgQ" base_Element="_BRpmsd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BRq00N9lEeyaYIzP8fvkgQ" base_Element="_BRqNwd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BRrb4N9lEeyaYIzP8fvkgQ" base_Element="_BRq00d9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BRsC8N9lEeyaYIzP8fvkgQ" base_Element="_BRrb4d9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BRsqAN9lEeyaYIzP8fvkgQ" base_Element="_BRsC8d9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BRtREN9lEeyaYIzP8fvkgQ" base_Element="_BRsqAd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BRt4IN9lEeyaYIzP8fvkgQ" base_Element="_BRtREd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BRufMN9lEeyaYIzP8fvkgQ" base_Element="_BRt4Id9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BRvGQN9lEeyaYIzP8fvkgQ" base_Element="_BRufMd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BRvtUN9lEeyaYIzP8fvkgQ" base_Element="_BRvGQd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BRwUYN9lEeyaYIzP8fvkgQ" base_Element="_BRvtUd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BRw7cN9lEeyaYIzP8fvkgQ" base_Element="_BRwUYd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BRxigN9lEeyaYIzP8fvkgQ" base_Element="_BRw7cd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BRxig99lEeyaYIzP8fvkgQ" base_Element="_BRxigd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BRyJkt9lEeyaYIzP8fvkgQ" base_Element="_BRyJkN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BRywot9lEeyaYIzP8fvkgQ" base_Element="_BRywoN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BRzXst9lEeyaYIzP8fvkgQ" base_Element="_BRzXsN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BRz-wt9lEeyaYIzP8fvkgQ" base_Element="_BRz-wN9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BR1M4N9lEeyaYIzP8fvkgQ" base_Element="_BRz-w99lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BR1z8N9lEeyaYIzP8fvkgQ" base_Element="_BR1M4d9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BR2bAN9lEeyaYIzP8fvkgQ" base_Element="_BR1z8d9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BR3CEN9lEeyaYIzP8fvkgQ" base_Element="_BR2bAd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BR3pIN9lEeyaYIzP8fvkgQ" base_Element="_BR3CEd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BR4QMN9lEeyaYIzP8fvkgQ" base_Element="_BR3pId9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BR43QN9lEeyaYIzP8fvkgQ" base_Element="_BR4QMd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BR6FYN9lEeyaYIzP8fvkgQ" base_Element="_BR43Qd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BR6scN9lEeyaYIzP8fvkgQ" base_Element="_BR6FYd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BR7TgN9lEeyaYIzP8fvkgQ" base_Element="_BR6scd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BR76kN9lEeyaYIzP8fvkgQ" base_Element="_BR7Tgd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BR8hoN9lEeyaYIzP8fvkgQ" base_Element="_BR76kd9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_BR9IsN9lEeyaYIzP8fvkgQ" base_Element="_BR8hod9lEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_A0GAoN9oEeyaYIzP8fvkgQ" base_Element="_A0FZkN9oEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_Gi59kN9oEeyaYIzP8fvkgQ" base_Element="_Gi5WgN9oEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_e9e5QN9sEeyaYIzP8fvkgQ" base_Element="_e9eSMN9sEeyaYIzP8fvkgQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_e9e5Qd9sEeyaYIzP8fvkgQ" name="getX" method="_e9kY0N9sEeyaYIzP8fvkgQ">
      <ownedParameter xmi:id="_e9fgUN9sEeyaYIzP8fvkgQ" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_e9gHYN9sEeyaYIzP8fvkgQ" base_Element="_e9fgUd9sEeyaYIzP8fvkgQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_e9gHYd9sEeyaYIzP8fvkgQ" name="getY" method="_e9kY0t9sEeyaYIzP8fvkgQ">
      <ownedParameter xmi:id="_e9gHYt9sEeyaYIzP8fvkgQ" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <uml:OpaqueBehavior xmi:id="_e9kY0N9sEeyaYIzP8fvkgQ" name="getX" specification="_e9e5Qd9sEeyaYIzP8fvkgQ">
    <ownedParameter xmi:id="_e9kY0d9sEeyaYIzP8fvkgQ" direction="return">
      <name xsi:nil="true"/>
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </ownedParameter>
    <language>java</language>
    <body>return(this.x);&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_e9kY0t9sEeyaYIzP8fvkgQ" name="getY" specification="_e9gHYd9sEeyaYIzP8fvkgQ">
    <ownedParameter xmi:id="_e9kY099sEeyaYIzP8fvkgQ" direction="return">
      <name xsi:nil="true"/>
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </ownedParameter>
    <language>java</language>
    <body>return(this.y);&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_e9kY1N9sEeyaYIzP8fvkgQ" name="getPrevX">
    <ownedParameter xmi:id="_e9kY1d9sEeyaYIzP8fvkgQ" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </ownedParameter>
    <language>java</language>
    <body>return(this.prevX);&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_e9kY1t9sEeyaYIzP8fvkgQ" name="getPrevY">
    <ownedParameter xmi:id="_e9kY199sEeyaYIzP8fvkgQ" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </ownedParameter>
    <language>java</language>
    <body>return(this.prevY);&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_zHmP4N9xEeyaYIzP8fvkgQ" name="getScaleMul" specification="_zHh-cN9xEeyaYIzP8fvkgQ">
    <ownedParameter xmi:id="_zHm28N9xEeyaYIzP8fvkgQ" direction="return">
      <name xsi:nil="true"/>
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </ownedParameter>
    <language>java</language>
    <body>return(this.scaleValue * this.scaleMul);&#xD;
	</body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:Reference xmi:id="_LLj_MN9yEeyaYIzP8fvkgQ" base_Element="_LLjYIN9yEeyaYIzP8fvkgQ"/>
  <UMLLabProfile:Reference xmi:id="_XUkRAN91EeyaYIzP8fvkgQ" base_Element="_XUjp8N91EeyaYIzP8fvkgQ"/>
</xmi:XMI>
